// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PutTemplatesReader is a Reader for the PutTemplates structure.
type PutTemplatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutTemplatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutTemplatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutTemplatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutTemplatesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutTemplatesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutTemplatesOK creates a PutTemplatesOK with default headers values
func NewPutTemplatesOK() *PutTemplatesOK {
	return &PutTemplatesOK{}
}

/*PutTemplatesOK handles this case with default header values.

SMS templates was updated
*/
type PutTemplatesOK struct {
	Payload *models.PutTemplatesResponse
}

func (o *PutTemplatesOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/guardian/factors/sms/templates][%d] putTemplatesOK  %+v", 200, o.Payload)
}

func (o *PutTemplatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutTemplatesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTemplatesBadRequest creates a PutTemplatesBadRequest with default headers values
func NewPutTemplatesBadRequest() *PutTemplatesBadRequest {
	return &PutTemplatesBadRequest{}
}

/*PutTemplatesBadRequest handles this case with default header values.

Invalid input based on schemas.
*/
type PutTemplatesBadRequest struct {
}

func (o *PutTemplatesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/guardian/factors/sms/templates][%d] putTemplatesBadRequest ", 400)
}

func (o *PutTemplatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutTemplatesUnauthorized creates a PutTemplatesUnauthorized with default headers values
func NewPutTemplatesUnauthorized() *PutTemplatesUnauthorized {
	return &PutTemplatesUnauthorized{}
}

/*PutTemplatesUnauthorized handles this case with default header values.

Token has expired or signature is invalid
*/
type PutTemplatesUnauthorized struct {
}

func (o *PutTemplatesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/guardian/factors/sms/templates][%d] putTemplatesUnauthorized ", 401)
}

func (o *PutTemplatesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutTemplatesForbidden creates a PutTemplatesForbidden with default headers values
func NewPutTemplatesForbidden() *PutTemplatesForbidden {
	return &PutTemplatesForbidden{}
}

/*PutTemplatesForbidden handles this case with default header values.

Insufficient scope
*/
type PutTemplatesForbidden struct {
}

func (o *PutTemplatesForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/guardian/factors/sms/templates][%d] putTemplatesForbidden ", 403)
}

func (o *PutTemplatesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
