// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PatchClientGrantsByIDReader is a Reader for the PatchClientGrantsByID structure.
type PatchClientGrantsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchClientGrantsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchClientGrantsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchClientGrantsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPatchClientGrantsByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPatchClientGrantsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchClientGrantsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPatchClientGrantsByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchClientGrantsByIDOK creates a PatchClientGrantsByIDOK with default headers values
func NewPatchClientGrantsByIDOK() *PatchClientGrantsByIDOK {
	return &PatchClientGrantsByIDOK{}
}

/*PatchClientGrantsByIDOK handles this case with default header values.

The client grant was updated. See <strong>Response Class</strong> below for schema.
*/
type PatchClientGrantsByIDOK struct {
	Payload *models.PatchClientGrantsByIDResponse
}

func (o *PatchClientGrantsByIDOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/client-grants/{id}][%d] patchClientGrantsByIdOK  %+v", 200, o.Payload)
}

func (o *PatchClientGrantsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PatchClientGrantsByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchClientGrantsByIDBadRequest creates a PatchClientGrantsByIDBadRequest with default headers values
func NewPatchClientGrantsByIDBadRequest() *PatchClientGrantsByIDBadRequest {
	return &PatchClientGrantsByIDBadRequest{}
}

/*PatchClientGrantsByIDBadRequest handles this case with default header values.

Invalid request body. The message will vary depending on the cause.
*/
type PatchClientGrantsByIDBadRequest struct {
}

func (o *PatchClientGrantsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/client-grants/{id}][%d] patchClientGrantsByIdBadRequest ", 400)
}

func (o *PatchClientGrantsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClientGrantsByIDUnauthorized creates a PatchClientGrantsByIDUnauthorized with default headers values
func NewPatchClientGrantsByIDUnauthorized() *PatchClientGrantsByIDUnauthorized {
	return &PatchClientGrantsByIDUnauthorized{}
}

/*PatchClientGrantsByIDUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type PatchClientGrantsByIDUnauthorized struct {
}

func (o *PatchClientGrantsByIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/client-grants/{id}][%d] patchClientGrantsByIdUnauthorized ", 401)
}

func (o *PatchClientGrantsByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClientGrantsByIDForbidden creates a PatchClientGrantsByIDForbidden with default headers values
func NewPatchClientGrantsByIDForbidden() *PatchClientGrantsByIDForbidden {
	return &PatchClientGrantsByIDForbidden{}
}

/*PatchClientGrantsByIDForbidden handles this case with default header values.

Insufficient scope, expected any of: update:client_grants
*/
type PatchClientGrantsByIDForbidden struct {
}

func (o *PatchClientGrantsByIDForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/client-grants/{id}][%d] patchClientGrantsByIdForbidden ", 403)
}

func (o *PatchClientGrantsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClientGrantsByIDNotFound creates a PatchClientGrantsByIDNotFound with default headers values
func NewPatchClientGrantsByIDNotFound() *PatchClientGrantsByIDNotFound {
	return &PatchClientGrantsByIDNotFound{}
}

/*PatchClientGrantsByIDNotFound handles this case with default header values.

The client grant does not exist.
*/
type PatchClientGrantsByIDNotFound struct {
}

func (o *PatchClientGrantsByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/client-grants/{id}][%d] patchClientGrantsByIdNotFound ", 404)
}

func (o *PatchClientGrantsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClientGrantsByIDTooManyRequests creates a PatchClientGrantsByIDTooManyRequests with default headers values
func NewPatchClientGrantsByIDTooManyRequests() *PatchClientGrantsByIDTooManyRequests {
	return &PatchClientGrantsByIDTooManyRequests{}
}

/*PatchClientGrantsByIDTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type PatchClientGrantsByIDTooManyRequests struct {
}

func (o *PatchClientGrantsByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/client-grants/{id}][%d] patchClientGrantsByIdTooManyRequests ", 429)
}

func (o *PatchClientGrantsByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
