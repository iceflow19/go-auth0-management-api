// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PatchClientsByIDReader is a Reader for the PatchClientsByID structure.
type PatchClientsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchClientsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchClientsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchClientsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPatchClientsByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPatchClientsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchClientsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPatchClientsByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchClientsByIDOK creates a PatchClientsByIDOK with default headers values
func NewPatchClientsByIDOK() *PatchClientsByIDOK {
	return &PatchClientsByIDOK{}
}

/*PatchClientsByIDOK handles this case with default header values.

The client was updated. See <strong>Response Class</strong> below for schema.
*/
type PatchClientsByIDOK struct {
	Payload *models.PatchClientsByIDResponse
}

func (o *PatchClientsByIDOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/clients/{id}][%d] patchClientsByIdOK  %+v", 200, o.Payload)
}

func (o *PatchClientsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PatchClientsByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchClientsByIDBadRequest creates a PatchClientsByIDBadRequest with default headers values
func NewPatchClientsByIDBadRequest() *PatchClientsByIDBadRequest {
	return &PatchClientsByIDBadRequest{}
}

/*PatchClientsByIDBadRequest handles this case with default header values.

Invalid request body. The message will vary depending on the cause.
*/
type PatchClientsByIDBadRequest struct {
}

func (o *PatchClientsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/clients/{id}][%d] patchClientsByIdBadRequest ", 400)
}

func (o *PatchClientsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClientsByIDUnauthorized creates a PatchClientsByIDUnauthorized with default headers values
func NewPatchClientsByIDUnauthorized() *PatchClientsByIDUnauthorized {
	return &PatchClientsByIDUnauthorized{}
}

/*PatchClientsByIDUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type PatchClientsByIDUnauthorized struct {
}

func (o *PatchClientsByIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/clients/{id}][%d] patchClientsByIdUnauthorized ", 401)
}

func (o *PatchClientsByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClientsByIDForbidden creates a PatchClientsByIDForbidden with default headers values
func NewPatchClientsByIDForbidden() *PatchClientsByIDForbidden {
	return &PatchClientsByIDForbidden{}
}

/*PatchClientsByIDForbidden handles this case with default header values.

Some fields cannot be updated with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes.
*/
type PatchClientsByIDForbidden struct {
}

func (o *PatchClientsByIDForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/clients/{id}][%d] patchClientsByIdForbidden ", 403)
}

func (o *PatchClientsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClientsByIDNotFound creates a PatchClientsByIDNotFound with default headers values
func NewPatchClientsByIDNotFound() *PatchClientsByIDNotFound {
	return &PatchClientsByIDNotFound{}
}

/*PatchClientsByIDNotFound handles this case with default header values.

The client does not exist.
*/
type PatchClientsByIDNotFound struct {
}

func (o *PatchClientsByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/clients/{id}][%d] patchClientsByIdNotFound ", 404)
}

func (o *PatchClientsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClientsByIDTooManyRequests creates a PatchClientsByIDTooManyRequests with default headers values
func NewPatchClientsByIDTooManyRequests() *PatchClientsByIDTooManyRequests {
	return &PatchClientsByIDTooManyRequests{}
}

/*PatchClientsByIDTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type PatchClientsByIDTooManyRequests struct {
}

func (o *PatchClientsByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/clients/{id}][%d] patchClientsByIdTooManyRequests ", 429)
}

func (o *PatchClientsByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
