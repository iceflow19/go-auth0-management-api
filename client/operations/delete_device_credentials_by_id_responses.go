// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// DeleteDeviceCredentialsByIDReader is a Reader for the DeleteDeviceCredentialsByID structure.
type DeleteDeviceCredentialsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDeviceCredentialsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteDeviceCredentialsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteDeviceCredentialsByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteDeviceCredentialsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteDeviceCredentialsByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteDeviceCredentialsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteDeviceCredentialsByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDeviceCredentialsByIDOK creates a DeleteDeviceCredentialsByIDOK with default headers values
func NewDeleteDeviceCredentialsByIDOK() *DeleteDeviceCredentialsByIDOK {
	return &DeleteDeviceCredentialsByIDOK{}
}

/*DeleteDeviceCredentialsByIDOK handles this case with default header values.

No response was specified
*/
type DeleteDeviceCredentialsByIDOK struct {
}

func (o *DeleteDeviceCredentialsByIDOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/device-credentials/{id}][%d] deleteDeviceCredentialsByIdOK ", 200)
}

func (o *DeleteDeviceCredentialsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceCredentialsByIDNoContent creates a DeleteDeviceCredentialsByIDNoContent with default headers values
func NewDeleteDeviceCredentialsByIDNoContent() *DeleteDeviceCredentialsByIDNoContent {
	return &DeleteDeviceCredentialsByIDNoContent{}
}

/*DeleteDeviceCredentialsByIDNoContent handles this case with default header values.

The credential no longer exists
*/
type DeleteDeviceCredentialsByIDNoContent struct {
}

func (o *DeleteDeviceCredentialsByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/device-credentials/{id}][%d] deleteDeviceCredentialsByIdNoContent ", 204)
}

func (o *DeleteDeviceCredentialsByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceCredentialsByIDBadRequest creates a DeleteDeviceCredentialsByIDBadRequest with default headers values
func NewDeleteDeviceCredentialsByIDBadRequest() *DeleteDeviceCredentialsByIDBadRequest {
	return &DeleteDeviceCredentialsByIDBadRequest{}
}

/*DeleteDeviceCredentialsByIDBadRequest handles this case with default header values.

Invalid request URI. The message will vary depending on the cause.
*/
type DeleteDeviceCredentialsByIDBadRequest struct {
}

func (o *DeleteDeviceCredentialsByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/device-credentials/{id}][%d] deleteDeviceCredentialsByIdBadRequest ", 400)
}

func (o *DeleteDeviceCredentialsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceCredentialsByIDUnauthorized creates a DeleteDeviceCredentialsByIDUnauthorized with default headers values
func NewDeleteDeviceCredentialsByIDUnauthorized() *DeleteDeviceCredentialsByIDUnauthorized {
	return &DeleteDeviceCredentialsByIDUnauthorized{}
}

/*DeleteDeviceCredentialsByIDUnauthorized handles this case with default header values.

Bad username or password.
*/
type DeleteDeviceCredentialsByIDUnauthorized struct {
}

func (o *DeleteDeviceCredentialsByIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/device-credentials/{id}][%d] deleteDeviceCredentialsByIdUnauthorized ", 401)
}

func (o *DeleteDeviceCredentialsByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceCredentialsByIDForbidden creates a DeleteDeviceCredentialsByIDForbidden with default headers values
func NewDeleteDeviceCredentialsByIDForbidden() *DeleteDeviceCredentialsByIDForbidden {
	return &DeleteDeviceCredentialsByIDForbidden{}
}

/*DeleteDeviceCredentialsByIDForbidden handles this case with default header values.

Insufficient scope, expected any of: delete:device_credentials,update:current_user, delete:current_user_device_credentials
*/
type DeleteDeviceCredentialsByIDForbidden struct {
}

func (o *DeleteDeviceCredentialsByIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/device-credentials/{id}][%d] deleteDeviceCredentialsByIdForbidden ", 403)
}

func (o *DeleteDeviceCredentialsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeviceCredentialsByIDTooManyRequests creates a DeleteDeviceCredentialsByIDTooManyRequests with default headers values
func NewDeleteDeviceCredentialsByIDTooManyRequests() *DeleteDeviceCredentialsByIDTooManyRequests {
	return &DeleteDeviceCredentialsByIDTooManyRequests{}
}

/*DeleteDeviceCredentialsByIDTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type DeleteDeviceCredentialsByIDTooManyRequests struct {
}

func (o *DeleteDeviceCredentialsByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/device-credentials/{id}][%d] deleteDeviceCredentialsByIdTooManyRequests ", 429)
}

func (o *DeleteDeviceCredentialsByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
