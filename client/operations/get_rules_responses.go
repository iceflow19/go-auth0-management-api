// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetRulesReader is a Reader for the GetRules structure.
type GetRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetRulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetRulesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRulesOK creates a GetRulesOK with default headers values
func NewGetRulesOK() *GetRulesOK {
	return &GetRulesOK{}
}

/*GetRulesOK handles this case with default header values.

The rule was retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetRulesOK struct {
	Payload []*models.GetRulesResponse
}

func (o *GetRulesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules][%d] getRulesOK  %+v", 200, o.Payload)
}

func (o *GetRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRulesBadRequest creates a GetRulesBadRequest with default headers values
func NewGetRulesBadRequest() *GetRulesBadRequest {
	return &GetRulesBadRequest{}
}

/*GetRulesBadRequest handles this case with default header values.

Invalid request query string. The message will vary depending on the cause.
*/
type GetRulesBadRequest struct {
}

func (o *GetRulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules][%d] getRulesBadRequest ", 400)
}

func (o *GetRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesUnauthorized creates a GetRulesUnauthorized with default headers values
func NewGetRulesUnauthorized() *GetRulesUnauthorized {
	return &GetRulesUnauthorized{}
}

/*GetRulesUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetRulesUnauthorized struct {
}

func (o *GetRulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules][%d] getRulesUnauthorized ", 401)
}

func (o *GetRulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesForbidden creates a GetRulesForbidden with default headers values
func NewGetRulesForbidden() *GetRulesForbidden {
	return &GetRulesForbidden{}
}

/*GetRulesForbidden handles this case with default header values.

Insufficient scope, expected any of: read:rules
*/
type GetRulesForbidden struct {
}

func (o *GetRulesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules][%d] getRulesForbidden ", 403)
}

func (o *GetRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesNotFound creates a GetRulesNotFound with default headers values
func NewGetRulesNotFound() *GetRulesNotFound {
	return &GetRulesNotFound{}
}

/*GetRulesNotFound handles this case with default header values.

The rule does not exist.
*/
type GetRulesNotFound struct {
}

func (o *GetRulesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules][%d] getRulesNotFound ", 404)
}

func (o *GetRulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesTooManyRequests creates a GetRulesTooManyRequests with default headers values
func NewGetRulesTooManyRequests() *GetRulesTooManyRequests {
	return &GetRulesTooManyRequests{}
}

/*GetRulesTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetRulesTooManyRequests struct {
}

func (o *GetRulesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules][%d] getRulesTooManyRequests ", 429)
}

func (o *GetRulesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
