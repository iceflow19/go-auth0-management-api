// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PutTwilioReader is a Reader for the PutTwilio structure.
type PutTwilioReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutTwilioReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutTwilioOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutTwilioBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutTwilioUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutTwilioForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutTwilioOK creates a PutTwilioOK with default headers values
func NewPutTwilioOK() *PutTwilioOK {
	return &PutTwilioOK{}
}

/*PutTwilioOK handles this case with default header values.

Twilio configuration updated
*/
type PutTwilioOK struct {
	Payload *models.PutTwilioResponse
}

func (o *PutTwilioOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/guardian/factors/sms/providers/twilio][%d] putTwilioOK  %+v", 200, o.Payload)
}

func (o *PutTwilioOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutTwilioResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTwilioBadRequest creates a PutTwilioBadRequest with default headers values
func NewPutTwilioBadRequest() *PutTwilioBadRequest {
	return &PutTwilioBadRequest{}
}

/*PutTwilioBadRequest handles this case with default header values.

Invalid input based on schemas
*/
type PutTwilioBadRequest struct {
}

func (o *PutTwilioBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/guardian/factors/sms/providers/twilio][%d] putTwilioBadRequest ", 400)
}

func (o *PutTwilioBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutTwilioUnauthorized creates a PutTwilioUnauthorized with default headers values
func NewPutTwilioUnauthorized() *PutTwilioUnauthorized {
	return &PutTwilioUnauthorized{}
}

/*PutTwilioUnauthorized handles this case with default header values.

Token has expired or signature is invalid
*/
type PutTwilioUnauthorized struct {
}

func (o *PutTwilioUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/guardian/factors/sms/providers/twilio][%d] putTwilioUnauthorized ", 401)
}

func (o *PutTwilioUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutTwilioForbidden creates a PutTwilioForbidden with default headers values
func NewPutTwilioForbidden() *PutTwilioForbidden {
	return &PutTwilioForbidden{}
}

/*PutTwilioForbidden handles this case with default header values.

Insufficient scope
*/
type PutTwilioForbidden struct {
}

func (o *PutTwilioForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/guardian/factors/sms/providers/twilio][%d] putTwilioForbidden ", 403)
}

func (o *PutTwilioForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
