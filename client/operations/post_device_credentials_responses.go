// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PostDeviceCredentialsReader is a Reader for the PostDeviceCredentials structure.
type PostDeviceCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDeviceCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostDeviceCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewPostDeviceCredentialsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostDeviceCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostDeviceCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostDeviceCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostDeviceCredentialsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostDeviceCredentialsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDeviceCredentialsOK creates a PostDeviceCredentialsOK with default headers values
func NewPostDeviceCredentialsOK() *PostDeviceCredentialsOK {
	return &PostDeviceCredentialsOK{}
}

/*PostDeviceCredentialsOK handles this case with default header values.

No response was specified
*/
type PostDeviceCredentialsOK struct {
	Payload *models.PostDeviceCredentialsResponse
}

func (o *PostDeviceCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/device-credentials][%d] postDeviceCredentialsOK  %+v", 200, o.Payload)
}

func (o *PostDeviceCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostDeviceCredentialsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDeviceCredentialsCreated creates a PostDeviceCredentialsCreated with default headers values
func NewPostDeviceCredentialsCreated() *PostDeviceCredentialsCreated {
	return &PostDeviceCredentialsCreated{}
}

/*PostDeviceCredentialsCreated handles this case with default header values.

The credential was created. See <strong>Response Class</strong> below for schema.
*/
type PostDeviceCredentialsCreated struct {
}

func (o *PostDeviceCredentialsCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/device-credentials][%d] postDeviceCredentialsCreated ", 201)
}

func (o *PostDeviceCredentialsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceCredentialsBadRequest creates a PostDeviceCredentialsBadRequest with default headers values
func NewPostDeviceCredentialsBadRequest() *PostDeviceCredentialsBadRequest {
	return &PostDeviceCredentialsBadRequest{}
}

/*PostDeviceCredentialsBadRequest handles this case with default header values.

Invalid request body. The message will vary depending on the cause.
*/
type PostDeviceCredentialsBadRequest struct {
}

func (o *PostDeviceCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/device-credentials][%d] postDeviceCredentialsBadRequest ", 400)
}

func (o *PostDeviceCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceCredentialsUnauthorized creates a PostDeviceCredentialsUnauthorized with default headers values
func NewPostDeviceCredentialsUnauthorized() *PostDeviceCredentialsUnauthorized {
	return &PostDeviceCredentialsUnauthorized{}
}

/*PostDeviceCredentialsUnauthorized handles this case with default header values.

Bad username or password.
*/
type PostDeviceCredentialsUnauthorized struct {
}

func (o *PostDeviceCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/device-credentials][%d] postDeviceCredentialsUnauthorized ", 401)
}

func (o *PostDeviceCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceCredentialsForbidden creates a PostDeviceCredentialsForbidden with default headers values
func NewPostDeviceCredentialsForbidden() *PostDeviceCredentialsForbidden {
	return &PostDeviceCredentialsForbidden{}
}

/*PostDeviceCredentialsForbidden handles this case with default header values.

Insufficient scope, expected any of: create:current_user_device_credentials
*/
type PostDeviceCredentialsForbidden struct {
}

func (o *PostDeviceCredentialsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/device-credentials][%d] postDeviceCredentialsForbidden ", 403)
}

func (o *PostDeviceCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceCredentialsConflict creates a PostDeviceCredentialsConflict with default headers values
func NewPostDeviceCredentialsConflict() *PostDeviceCredentialsConflict {
	return &PostDeviceCredentialsConflict{}
}

/*PostDeviceCredentialsConflict handles this case with default header values.

A public key already exists for the device
*/
type PostDeviceCredentialsConflict struct {
}

func (o *PostDeviceCredentialsConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/device-credentials][%d] postDeviceCredentialsConflict ", 409)
}

func (o *PostDeviceCredentialsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceCredentialsTooManyRequests creates a PostDeviceCredentialsTooManyRequests with default headers values
func NewPostDeviceCredentialsTooManyRequests() *PostDeviceCredentialsTooManyRequests {
	return &PostDeviceCredentialsTooManyRequests{}
}

/*PostDeviceCredentialsTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type PostDeviceCredentialsTooManyRequests struct {
}

func (o *PostDeviceCredentialsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/device-credentials][%d] postDeviceCredentialsTooManyRequests ", 429)
}

func (o *PostDeviceCredentialsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
