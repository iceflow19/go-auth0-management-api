// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetUsersByIDReader is a Reader for the GetUsersByID structure.
type GetUsersByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUsersByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUsersByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetUsersByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetUsersByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUsersByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetUsersByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUsersByIDOK creates a GetUsersByIDOK with default headers values
func NewGetUsersByIDOK() *GetUsersByIDOK {
	return &GetUsersByIDOK{}
}

/*GetUsersByIDOK handles this case with default header values.

The user was retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetUsersByIDOK struct {
	Payload *models.GetUsersByIDResponse
}

func (o *GetUsersByIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}][%d] getUsersByIdOK  %+v", 200, o.Payload)
}

func (o *GetUsersByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUsersByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersByIDBadRequest creates a GetUsersByIDBadRequest with default headers values
func NewGetUsersByIDBadRequest() *GetUsersByIDBadRequest {
	return &GetUsersByIDBadRequest{}
}

/*GetUsersByIDBadRequest handles this case with default header values.

Invalid request query string. The message will vary depending on the cause.
*/
type GetUsersByIDBadRequest struct {
}

func (o *GetUsersByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}][%d] getUsersByIdBadRequest ", 400)
}

func (o *GetUsersByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByIDUnauthorized creates a GetUsersByIDUnauthorized with default headers values
func NewGetUsersByIDUnauthorized() *GetUsersByIDUnauthorized {
	return &GetUsersByIDUnauthorized{}
}

/*GetUsersByIDUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetUsersByIDUnauthorized struct {
}

func (o *GetUsersByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}][%d] getUsersByIdUnauthorized ", 401)
}

func (o *GetUsersByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByIDForbidden creates a GetUsersByIDForbidden with default headers values
func NewGetUsersByIDForbidden() *GetUsersByIDForbidden {
	return &GetUsersByIDForbidden{}
}

/*GetUsersByIDForbidden handles this case with default header values.

Insufficient scope, expected any of: read:users,read:current_user
*/
type GetUsersByIDForbidden struct {
}

func (o *GetUsersByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}][%d] getUsersByIdForbidden ", 403)
}

func (o *GetUsersByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByIDNotFound creates a GetUsersByIDNotFound with default headers values
func NewGetUsersByIDNotFound() *GetUsersByIDNotFound {
	return &GetUsersByIDNotFound{}
}

/*GetUsersByIDNotFound handles this case with default header values.

The user does not exist.
*/
type GetUsersByIDNotFound struct {
}

func (o *GetUsersByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}][%d] getUsersByIdNotFound ", 404)
}

func (o *GetUsersByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersByIDTooManyRequests creates a GetUsersByIDTooManyRequests with default headers values
func NewGetUsersByIDTooManyRequests() *GetUsersByIDTooManyRequests {
	return &GetUsersByIDTooManyRequests{}
}

/*GetUsersByIDTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetUsersByIDTooManyRequests struct {
}

func (o *GetUsersByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}][%d] getUsersByIdTooManyRequests ", 429)
}

func (o *GetUsersByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
