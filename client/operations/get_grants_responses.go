// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetGrantsReader is a Reader for the GetGrants structure.
type GetGrantsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGrantsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetGrantsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetGrantsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetGrantsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetGrantsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetGrantsOK creates a GetGrantsOK with default headers values
func NewGetGrantsOK() *GetGrantsOK {
	return &GetGrantsOK{}
}

/*GetGrantsOK handles this case with default header values.

The grants were retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetGrantsOK struct {
	Payload []*models.GetGrantsResponse
}

func (o *GetGrantsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/grants][%d] getGrantsOK  %+v", 200, o.Payload)
}

func (o *GetGrantsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGrantsUnauthorized creates a GetGrantsUnauthorized with default headers values
func NewGetGrantsUnauthorized() *GetGrantsUnauthorized {
	return &GetGrantsUnauthorized{}
}

/*GetGrantsUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetGrantsUnauthorized struct {
}

func (o *GetGrantsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/grants][%d] getGrantsUnauthorized ", 401)
}

func (o *GetGrantsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGrantsForbidden creates a GetGrantsForbidden with default headers values
func NewGetGrantsForbidden() *GetGrantsForbidden {
	return &GetGrantsForbidden{}
}

/*GetGrantsForbidden handles this case with default header values.

Insufficient scope, expected any of: read:grants
*/
type GetGrantsForbidden struct {
}

func (o *GetGrantsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/grants][%d] getGrantsForbidden ", 403)
}

func (o *GetGrantsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGrantsTooManyRequests creates a GetGrantsTooManyRequests with default headers values
func NewGetGrantsTooManyRequests() *GetGrantsTooManyRequests {
	return &GetGrantsTooManyRequests{}
}

/*GetGrantsTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetGrantsTooManyRequests struct {
}

func (o *GetGrantsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/grants][%d] getGrantsTooManyRequests ", 429)
}

func (o *GetGrantsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
