// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetActiveUsersReader is a Reader for the GetActiveUsers structure.
type GetActiveUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActiveUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActiveUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetActiveUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetActiveUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetActiveUsersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActiveUsersOK creates a GetActiveUsersOK with default headers values
func NewGetActiveUsersOK() *GetActiveUsersOK {
	return &GetActiveUsersOK{}
}

/*GetActiveUsersOK handles this case with default header values.

The amount of active users was retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetActiveUsersOK struct {
	Payload float64
}

func (o *GetActiveUsersOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/active-users][%d] getActiveUsersOK  %+v", 200, o.Payload)
}

func (o *GetActiveUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActiveUsersUnauthorized creates a GetActiveUsersUnauthorized with default headers values
func NewGetActiveUsersUnauthorized() *GetActiveUsersUnauthorized {
	return &GetActiveUsersUnauthorized{}
}

/*GetActiveUsersUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetActiveUsersUnauthorized struct {
}

func (o *GetActiveUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/active-users][%d] getActiveUsersUnauthorized ", 401)
}

func (o *GetActiveUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActiveUsersForbidden creates a GetActiveUsersForbidden with default headers values
func NewGetActiveUsersForbidden() *GetActiveUsersForbidden {
	return &GetActiveUsersForbidden{}
}

/*GetActiveUsersForbidden handles this case with default header values.

Insufficient scope, expected any of: read:stats
*/
type GetActiveUsersForbidden struct {
}

func (o *GetActiveUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/active-users][%d] getActiveUsersForbidden ", 403)
}

func (o *GetActiveUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActiveUsersTooManyRequests creates a GetActiveUsersTooManyRequests with default headers values
func NewGetActiveUsersTooManyRequests() *GetActiveUsersTooManyRequests {
	return &GetActiveUsersTooManyRequests{}
}

/*GetActiveUsersTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetActiveUsersTooManyRequests struct {
}

func (o *GetActiveUsersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/active-users][%d] getActiveUsersTooManyRequests ", 429)
}

func (o *GetActiveUsersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
