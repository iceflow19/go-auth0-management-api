// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// DeleteUsersByIDReader is a Reader for the DeleteUsersByID structure.
type DeleteUsersByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUsersByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteUsersByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteUsersByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteUsersByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteUsersByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteUsersByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteUsersByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteUsersByIDOK creates a DeleteUsersByIDOK with default headers values
func NewDeleteUsersByIDOK() *DeleteUsersByIDOK {
	return &DeleteUsersByIDOK{}
}

/*DeleteUsersByIDOK handles this case with default header values.

No response was specified
*/
type DeleteUsersByIDOK struct {
}

func (o *DeleteUsersByIDOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{id}][%d] deleteUsersByIdOK ", 200)
}

func (o *DeleteUsersByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersByIDNoContent creates a DeleteUsersByIDNoContent with default headers values
func NewDeleteUsersByIDNoContent() *DeleteUsersByIDNoContent {
	return &DeleteUsersByIDNoContent{}
}

/*DeleteUsersByIDNoContent handles this case with default header values.

The user no longer exists.
*/
type DeleteUsersByIDNoContent struct {
}

func (o *DeleteUsersByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{id}][%d] deleteUsersByIdNoContent ", 204)
}

func (o *DeleteUsersByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersByIDBadRequest creates a DeleteUsersByIDBadRequest with default headers values
func NewDeleteUsersByIDBadRequest() *DeleteUsersByIDBadRequest {
	return &DeleteUsersByIDBadRequest{}
}

/*DeleteUsersByIDBadRequest handles this case with default header values.

Invalid request URI. The message will vary depending on the cause.
*/
type DeleteUsersByIDBadRequest struct {
}

func (o *DeleteUsersByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{id}][%d] deleteUsersByIdBadRequest ", 400)
}

func (o *DeleteUsersByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersByIDUnauthorized creates a DeleteUsersByIDUnauthorized with default headers values
func NewDeleteUsersByIDUnauthorized() *DeleteUsersByIDUnauthorized {
	return &DeleteUsersByIDUnauthorized{}
}

/*DeleteUsersByIDUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type DeleteUsersByIDUnauthorized struct {
}

func (o *DeleteUsersByIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{id}][%d] deleteUsersByIdUnauthorized ", 401)
}

func (o *DeleteUsersByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersByIDForbidden creates a DeleteUsersByIDForbidden with default headers values
func NewDeleteUsersByIDForbidden() *DeleteUsersByIDForbidden {
	return &DeleteUsersByIDForbidden{}
}

/*DeleteUsersByIDForbidden handles this case with default header values.

Insufficient scope, expected any of: delete:users,delete:current_user
*/
type DeleteUsersByIDForbidden struct {
}

func (o *DeleteUsersByIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{id}][%d] deleteUsersByIdForbidden ", 403)
}

func (o *DeleteUsersByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersByIDTooManyRequests creates a DeleteUsersByIDTooManyRequests with default headers values
func NewDeleteUsersByIDTooManyRequests() *DeleteUsersByIDTooManyRequests {
	return &DeleteUsersByIDTooManyRequests{}
}

/*DeleteUsersByIDTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type DeleteUsersByIDTooManyRequests struct {
}

func (o *DeleteUsersByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/users/{id}][%d] deleteUsersByIdTooManyRequests ", 429)
}

func (o *DeleteUsersByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
