// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PostUsersReader is a Reader for the PostUsers structure.
type PostUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewPostUsersCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostUsersConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostUsersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUsersOK creates a PostUsersOK with default headers values
func NewPostUsersOK() *PostUsersOK {
	return &PostUsersOK{}
}

/*PostUsersOK handles this case with default header values.

No response was specified
*/
type PostUsersOK struct {
	Payload *models.PostUsersResponse
}

func (o *PostUsersOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/users][%d] postUsersOK  %+v", 200, o.Payload)
}

func (o *PostUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostUsersResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersCreated creates a PostUsersCreated with default headers values
func NewPostUsersCreated() *PostUsersCreated {
	return &PostUsersCreated{}
}

/*PostUsersCreated handles this case with default header values.

The user was created. See <strong>Response Class</strong> below for schema.
*/
type PostUsersCreated struct {
}

func (o *PostUsersCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/users][%d] postUsersCreated ", 201)
}

func (o *PostUsersCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsersBadRequest creates a PostUsersBadRequest with default headers values
func NewPostUsersBadRequest() *PostUsersBadRequest {
	return &PostUsersBadRequest{}
}

/*PostUsersBadRequest handles this case with default header values.

The connection is disabled
*/
type PostUsersBadRequest struct {
}

func (o *PostUsersBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/users][%d] postUsersBadRequest ", 400)
}

func (o *PostUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsersUnauthorized creates a PostUsersUnauthorized with default headers values
func NewPostUsersUnauthorized() *PostUsersUnauthorized {
	return &PostUsersUnauthorized{}
}

/*PostUsersUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type PostUsersUnauthorized struct {
}

func (o *PostUsersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/users][%d] postUsersUnauthorized ", 401)
}

func (o *PostUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsersForbidden creates a PostUsersForbidden with default headers values
func NewPostUsersForbidden() *PostUsersForbidden {
	return &PostUsersForbidden{}
}

/*PostUsersForbidden handles this case with default header values.

Insufficient scope, expected any of: create:users
*/
type PostUsersForbidden struct {
}

func (o *PostUsersForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/users][%d] postUsersForbidden ", 403)
}

func (o *PostUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsersConflict creates a PostUsersConflict with default headers values
func NewPostUsersConflict() *PostUsersConflict {
	return &PostUsersConflict{}
}

/*PostUsersConflict handles this case with default header values.

The user already exists.
*/
type PostUsersConflict struct {
}

func (o *PostUsersConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/users][%d] postUsersConflict ", 409)
}

func (o *PostUsersConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsersTooManyRequests creates a PostUsersTooManyRequests with default headers values
func NewPostUsersTooManyRequests() *PostUsersTooManyRequests {
	return &PostUsersTooManyRequests{}
}

/*PostUsersTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type PostUsersTooManyRequests struct {
}

func (o *PostUsersTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/users][%d] postUsersTooManyRequests ", 429)
}

func (o *PostUsersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
