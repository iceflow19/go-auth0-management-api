// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	strfmt "github.com/go-openapi/strfmt"
	"golang.org/x/net/context"
)

// NewPutRulesConfigsByKeyParams creates a new PutRulesConfigsByKeyParams object
// with the default values initialized.
func NewPutRulesConfigsByKeyParams() *PutRulesConfigsByKeyParams {
	var ()
	return &PutRulesConfigsByKeyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutRulesConfigsByKeyParamsWithTimeout creates a new PutRulesConfigsByKeyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutRulesConfigsByKeyParamsWithTimeout(timeout time.Duration) *PutRulesConfigsByKeyParams {
	var ()
	return &PutRulesConfigsByKeyParams{

		timeout: timeout,
	}
}

// NewPutRulesConfigsByKeyParamsWithContext creates a new PutRulesConfigsByKeyParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutRulesConfigsByKeyParamsWithContext(ctx context.Context) *PutRulesConfigsByKeyParams {
	var ()
	return &PutRulesConfigsByKeyParams{

		Context: ctx,
	}
}

// NewPutRulesConfigsByKeyParamsWithHTTPClient creates a new PutRulesConfigsByKeyParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutRulesConfigsByKeyParamsWithHTTPClient(client *http.Client) *PutRulesConfigsByKeyParams {
	var ()
	return &PutRulesConfigsByKeyParams{
		HTTPClient: client,
	}
}

/*PutRulesConfigsByKeyParams contains all the parameters to send to the API endpoint
for the put rules configs by key operation typically these are written to a http.Request
*/
type PutRulesConfigsByKeyParams struct {

	/*Body*/
	Body *models.PutRulesConfigsByKeyBody
	/*Key
	  The key of the rules config to set (Max length: <code>127</code>)

	*/
	Key string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) WithTimeout(timeout time.Duration) *PutRulesConfigsByKeyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) WithContext(ctx context.Context) *PutRulesConfigsByKeyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) WithHTTPClient(client *http.Client) *PutRulesConfigsByKeyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) WithBody(body *models.PutRulesConfigsByKeyBody) *PutRulesConfigsByKeyParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) SetBody(body *models.PutRulesConfigsByKeyBody) {
	o.Body = body
}

// WithKey adds the key to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) WithKey(key string) *PutRulesConfigsByKeyParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the put rules configs by key params
func (o *PutRulesConfigsByKeyParams) SetKey(key string) {
	o.Key = key
}

// WriteToRequest writes these params to a swagger request
func (o *PutRulesConfigsByKeyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param key
	if err := r.SetPathParam("key", o.Key); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
