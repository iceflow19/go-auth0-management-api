// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PostIdentitiesReader is a Reader for the PostIdentities structure.
type PostIdentitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIdentitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostIdentitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewPostIdentitiesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostIdentitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostIdentitiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostIdentitiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostIdentitiesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostIdentitiesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostIdentitiesOK creates a PostIdentitiesOK with default headers values
func NewPostIdentitiesOK() *PostIdentitiesOK {
	return &PostIdentitiesOK{}
}

/*PostIdentitiesOK handles this case with default header values.

No response was specified
*/
type PostIdentitiesOK struct {
	Payload []*models.PostIdentitiesResponse
}

func (o *PostIdentitiesOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{id}/identities][%d] postIdentitiesOK  %+v", 200, o.Payload)
}

func (o *PostIdentitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIdentitiesCreated creates a PostIdentitiesCreated with default headers values
func NewPostIdentitiesCreated() *PostIdentitiesCreated {
	return &PostIdentitiesCreated{}
}

/*PostIdentitiesCreated handles this case with default header values.

The identity was added. See <strong>Response Class</strong> below for schema.
*/
type PostIdentitiesCreated struct {
}

func (o *PostIdentitiesCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{id}/identities][%d] postIdentitiesCreated ", 201)
}

func (o *PostIdentitiesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIdentitiesBadRequest creates a PostIdentitiesBadRequest with default headers values
func NewPostIdentitiesBadRequest() *PostIdentitiesBadRequest {
	return &PostIdentitiesBadRequest{}
}

/*PostIdentitiesBadRequest handles this case with default header values.

JWT (link_with) must have an aud claim that matches that of the calling token's azp.
*/
type PostIdentitiesBadRequest struct {
}

func (o *PostIdentitiesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{id}/identities][%d] postIdentitiesBadRequest ", 400)
}

func (o *PostIdentitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIdentitiesUnauthorized creates a PostIdentitiesUnauthorized with default headers values
func NewPostIdentitiesUnauthorized() *PostIdentitiesUnauthorized {
	return &PostIdentitiesUnauthorized{}
}

/*PostIdentitiesUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation.
*/
type PostIdentitiesUnauthorized struct {
}

func (o *PostIdentitiesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{id}/identities][%d] postIdentitiesUnauthorized ", 401)
}

func (o *PostIdentitiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIdentitiesForbidden creates a PostIdentitiesForbidden with default headers values
func NewPostIdentitiesForbidden() *PostIdentitiesForbidden {
	return &PostIdentitiesForbidden{}
}

/*PostIdentitiesForbidden handles this case with default header values.

User to be acted on does not match subject in bearer token.
*/
type PostIdentitiesForbidden struct {
}

func (o *PostIdentitiesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{id}/identities][%d] postIdentitiesForbidden ", 403)
}

func (o *PostIdentitiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIdentitiesConflict creates a PostIdentitiesConflict with default headers values
func NewPostIdentitiesConflict() *PostIdentitiesConflict {
	return &PostIdentitiesConflict{}
}

/*PostIdentitiesConflict handles this case with default header values.

Specified identity already exists.
*/
type PostIdentitiesConflict struct {
}

func (o *PostIdentitiesConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{id}/identities][%d] postIdentitiesConflict ", 409)
}

func (o *PostIdentitiesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIdentitiesTooManyRequests creates a PostIdentitiesTooManyRequests with default headers values
func NewPostIdentitiesTooManyRequests() *PostIdentitiesTooManyRequests {
	return &PostIdentitiesTooManyRequests{}
}

/*PostIdentitiesTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type PostIdentitiesTooManyRequests struct {
}

func (o *PostIdentitiesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/users/{id}/identities][%d] postIdentitiesTooManyRequests ", 429)
}

func (o *PostIdentitiesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
