// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PostVerifyReader is a Reader for the PostVerify structure.
type PostVerifyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostVerifyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostVerifyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostVerifyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostVerifyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostVerifyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostVerifyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostVerifyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostVerifyOK creates a PostVerifyOK with default headers values
func NewPostVerifyOK() *PostVerifyOK {
	return &PostVerifyOK{}
}

/*PostVerifyOK handles this case with default header values.

The custom domain verification failed.
*/
type PostVerifyOK struct {
	Payload *models.PostVerifyResponse
}

func (o *PostVerifyOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/custom-domains/{id}/verify][%d] postVerifyOK  %+v", 200, o.Payload)
}

func (o *PostVerifyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostVerifyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostVerifyBadRequest creates a PostVerifyBadRequest with default headers values
func NewPostVerifyBadRequest() *PostVerifyBadRequest {
	return &PostVerifyBadRequest{}
}

/*PostVerifyBadRequest handles this case with default header values.

The specified custom domain is already verified.
*/
type PostVerifyBadRequest struct {
}

func (o *PostVerifyBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/custom-domains/{id}/verify][%d] postVerifyBadRequest ", 400)
}

func (o *PostVerifyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostVerifyUnauthorized creates a PostVerifyUnauthorized with default headers values
func NewPostVerifyUnauthorized() *PostVerifyUnauthorized {
	return &PostVerifyUnauthorized{}
}

/*PostVerifyUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation.
*/
type PostVerifyUnauthorized struct {
}

func (o *PostVerifyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/custom-domains/{id}/verify][%d] postVerifyUnauthorized ", 401)
}

func (o *PostVerifyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostVerifyForbidden creates a PostVerifyForbidden with default headers values
func NewPostVerifyForbidden() *PostVerifyForbidden {
	return &PostVerifyForbidden{}
}

/*PostVerifyForbidden handles this case with default header values.

The account is not allowed to perform this operation.
*/
type PostVerifyForbidden struct {
}

func (o *PostVerifyForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/custom-domains/{id}/verify][%d] postVerifyForbidden ", 403)
}

func (o *PostVerifyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostVerifyNotFound creates a PostVerifyNotFound with default headers values
func NewPostVerifyNotFound() *PostVerifyNotFound {
	return &PostVerifyNotFound{}
}

/*PostVerifyNotFound handles this case with default header values.

The custom domain does not exist.
*/
type PostVerifyNotFound struct {
}

func (o *PostVerifyNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/custom-domains/{id}/verify][%d] postVerifyNotFound ", 404)
}

func (o *PostVerifyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostVerifyTooManyRequests creates a PostVerifyTooManyRequests with default headers values
func NewPostVerifyTooManyRequests() *PostVerifyTooManyRequests {
	return &PostVerifyTooManyRequests{}
}

/*PostVerifyTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type PostVerifyTooManyRequests struct {
}

func (o *PostVerifyTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/custom-domains/{id}/verify][%d] postVerifyTooManyRequests ", 429)
}

func (o *PostVerifyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
