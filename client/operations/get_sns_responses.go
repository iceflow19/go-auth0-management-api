// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetSnsReader is a Reader for the GetSns structure.
type GetSnsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSnsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSnsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSnsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSnsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSnsOK creates a GetSnsOK with default headers values
func NewGetSnsOK() *GetSnsOK {
	return &GetSnsOK{}
}

/*GetSnsOK handles this case with default header values.

Returns AWS SNS configuration data
*/
type GetSnsOK struct {
	Payload *models.GetSnsResponse
}

func (o *GetSnsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors/push-notification/providers/sns][%d] getSnsOK  %+v", 200, o.Payload)
}

func (o *GetSnsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSnsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnsBadRequest creates a GetSnsBadRequest with default headers values
func NewGetSnsBadRequest() *GetSnsBadRequest {
	return &GetSnsBadRequest{}
}

/*GetSnsBadRequest handles this case with default header values.

Invalid input based on schemas
*/
type GetSnsBadRequest struct {
}

func (o *GetSnsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors/push-notification/providers/sns][%d] getSnsBadRequest ", 400)
}

func (o *GetSnsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSnsUnauthorized creates a GetSnsUnauthorized with default headers values
func NewGetSnsUnauthorized() *GetSnsUnauthorized {
	return &GetSnsUnauthorized{}
}

/*GetSnsUnauthorized handles this case with default header values.

Token has expired or signature is invalid
*/
type GetSnsUnauthorized struct {
}

func (o *GetSnsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors/push-notification/providers/sns][%d] getSnsUnauthorized ", 401)
}

func (o *GetSnsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSnsForbidden creates a GetSnsForbidden with default headers values
func NewGetSnsForbidden() *GetSnsForbidden {
	return &GetSnsForbidden{}
}

/*GetSnsForbidden handles this case with default header values.

Insufficient scope
*/
type GetSnsForbidden struct {
}

func (o *GetSnsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors/push-notification/providers/sns][%d] getSnsForbidden ", 403)
}

func (o *GetSnsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
