// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetEnrollmentsReader is a Reader for the GetEnrollments structure.
type GetEnrollmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnrollmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetEnrollmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetEnrollmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetEnrollmentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetEnrollmentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetEnrollmentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetEnrollmentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEnrollmentsOK creates a GetEnrollmentsOK with default headers values
func NewGetEnrollmentsOK() *GetEnrollmentsOK {
	return &GetEnrollmentsOK{}
}

/*GetEnrollmentsOK handles this case with default header values.

The enrollments for user was retrieved.
*/
type GetEnrollmentsOK struct {
	Payload []*models.GetEnrollmentsResponse
}

func (o *GetEnrollmentsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}/enrollments][%d] getEnrollmentsOK  %+v", 200, o.Payload)
}

func (o *GetEnrollmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnrollmentsBadRequest creates a GetEnrollmentsBadRequest with default headers values
func NewGetEnrollmentsBadRequest() *GetEnrollmentsBadRequest {
	return &GetEnrollmentsBadRequest{}
}

/*GetEnrollmentsBadRequest handles this case with default header values.

Invalid request query string. The message will vary depending on the cause.
*/
type GetEnrollmentsBadRequest struct {
}

func (o *GetEnrollmentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}/enrollments][%d] getEnrollmentsBadRequest ", 400)
}

func (o *GetEnrollmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnrollmentsUnauthorized creates a GetEnrollmentsUnauthorized with default headers values
func NewGetEnrollmentsUnauthorized() *GetEnrollmentsUnauthorized {
	return &GetEnrollmentsUnauthorized{}
}

/*GetEnrollmentsUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetEnrollmentsUnauthorized struct {
}

func (o *GetEnrollmentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}/enrollments][%d] getEnrollmentsUnauthorized ", 401)
}

func (o *GetEnrollmentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnrollmentsForbidden creates a GetEnrollmentsForbidden with default headers values
func NewGetEnrollmentsForbidden() *GetEnrollmentsForbidden {
	return &GetEnrollmentsForbidden{}
}

/*GetEnrollmentsForbidden handles this case with default header values.

Insufficient scope, expected any of: read:users,read:current_user
*/
type GetEnrollmentsForbidden struct {
}

func (o *GetEnrollmentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}/enrollments][%d] getEnrollmentsForbidden ", 403)
}

func (o *GetEnrollmentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnrollmentsNotFound creates a GetEnrollmentsNotFound with default headers values
func NewGetEnrollmentsNotFound() *GetEnrollmentsNotFound {
	return &GetEnrollmentsNotFound{}
}

/*GetEnrollmentsNotFound handles this case with default header values.

The user does not exist.
*/
type GetEnrollmentsNotFound struct {
}

func (o *GetEnrollmentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}/enrollments][%d] getEnrollmentsNotFound ", 404)
}

func (o *GetEnrollmentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnrollmentsTooManyRequests creates a GetEnrollmentsTooManyRequests with default headers values
func NewGetEnrollmentsTooManyRequests() *GetEnrollmentsTooManyRequests {
	return &GetEnrollmentsTooManyRequests{}
}

/*GetEnrollmentsTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetEnrollmentsTooManyRequests struct {
}

func (o *GetEnrollmentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{id}/enrollments][%d] getEnrollmentsTooManyRequests ", 429)
}

func (o *GetEnrollmentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
