// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PostRotateSecretReader is a Reader for the PostRotateSecret structure.
type PostRotateSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRotateSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostRotateSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostRotateSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostRotateSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostRotateSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostRotateSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostRotateSecretTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostRotateSecretOK creates a PostRotateSecretOK with default headers values
func NewPostRotateSecretOK() *PostRotateSecretOK {
	return &PostRotateSecretOK{}
}

/*PostRotateSecretOK handles this case with default header values.

The secret was rotated. See <strong>Response Class</strong> below for schema.
*/
type PostRotateSecretOK struct {
	Payload *models.PostRotateSecretResponse
}

func (o *PostRotateSecretOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/clients/{id}/rotate-secret][%d] postRotateSecretOK  %+v", 200, o.Payload)
}

func (o *PostRotateSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostRotateSecretResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRotateSecretBadRequest creates a PostRotateSecretBadRequest with default headers values
func NewPostRotateSecretBadRequest() *PostRotateSecretBadRequest {
	return &PostRotateSecretBadRequest{}
}

/*PostRotateSecretBadRequest handles this case with default header values.

Invalid request body. The message will vary depending on the cause.
*/
type PostRotateSecretBadRequest struct {
}

func (o *PostRotateSecretBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/clients/{id}/rotate-secret][%d] postRotateSecretBadRequest ", 400)
}

func (o *PostRotateSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRotateSecretUnauthorized creates a PostRotateSecretUnauthorized with default headers values
func NewPostRotateSecretUnauthorized() *PostRotateSecretUnauthorized {
	return &PostRotateSecretUnauthorized{}
}

/*PostRotateSecretUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type PostRotateSecretUnauthorized struct {
}

func (o *PostRotateSecretUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/clients/{id}/rotate-secret][%d] postRotateSecretUnauthorized ", 401)
}

func (o *PostRotateSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRotateSecretForbidden creates a PostRotateSecretForbidden with default headers values
func NewPostRotateSecretForbidden() *PostRotateSecretForbidden {
	return &PostRotateSecretForbidden{}
}

/*PostRotateSecretForbidden handles this case with default header values.

Some fields cannot be updated with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes.
*/
type PostRotateSecretForbidden struct {
}

func (o *PostRotateSecretForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/clients/{id}/rotate-secret][%d] postRotateSecretForbidden ", 403)
}

func (o *PostRotateSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRotateSecretNotFound creates a PostRotateSecretNotFound with default headers values
func NewPostRotateSecretNotFound() *PostRotateSecretNotFound {
	return &PostRotateSecretNotFound{}
}

/*PostRotateSecretNotFound handles this case with default header values.

The client does not exist.
*/
type PostRotateSecretNotFound struct {
}

func (o *PostRotateSecretNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/clients/{id}/rotate-secret][%d] postRotateSecretNotFound ", 404)
}

func (o *PostRotateSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRotateSecretTooManyRequests creates a PostRotateSecretTooManyRequests with default headers values
func NewPostRotateSecretTooManyRequests() *PostRotateSecretTooManyRequests {
	return &PostRotateSecretTooManyRequests{}
}

/*PostRotateSecretTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type PostRotateSecretTooManyRequests struct {
}

func (o *PostRotateSecretTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v2/clients/{id}/rotate-secret][%d] postRotateSecretTooManyRequests ", 429)
}

func (o *PostRotateSecretTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
