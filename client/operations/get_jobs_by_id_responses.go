// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetJobsByIDReader is a Reader for the GetJobsByID structure.
type GetJobsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJobsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetJobsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetJobsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetJobsByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetJobsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetJobsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetJobsByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetJobsByIDOK creates a GetJobsByIDOK with default headers values
func NewGetJobsByIDOK() *GetJobsByIDOK {
	return &GetJobsByIDOK{}
}

/*GetJobsByIDOK handles this case with default header values.

The job was retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetJobsByIDOK struct {
	Payload *models.GetJobsByIDResponse
}

func (o *GetJobsByIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{id}][%d] getJobsByIdOK  %+v", 200, o.Payload)
}

func (o *GetJobsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetJobsByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJobsByIDBadRequest creates a GetJobsByIDBadRequest with default headers values
func NewGetJobsByIDBadRequest() *GetJobsByIDBadRequest {
	return &GetJobsByIDBadRequest{}
}

/*GetJobsByIDBadRequest handles this case with default header values.

Invalid request URI. The message will vary depending on the cause.
*/
type GetJobsByIDBadRequest struct {
}

func (o *GetJobsByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{id}][%d] getJobsByIdBadRequest ", 400)
}

func (o *GetJobsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetJobsByIDUnauthorized creates a GetJobsByIDUnauthorized with default headers values
func NewGetJobsByIDUnauthorized() *GetJobsByIDUnauthorized {
	return &GetJobsByIDUnauthorized{}
}

/*GetJobsByIDUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetJobsByIDUnauthorized struct {
}

func (o *GetJobsByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{id}][%d] getJobsByIdUnauthorized ", 401)
}

func (o *GetJobsByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetJobsByIDForbidden creates a GetJobsByIDForbidden with default headers values
func NewGetJobsByIDForbidden() *GetJobsByIDForbidden {
	return &GetJobsByIDForbidden{}
}

/*GetJobsByIDForbidden handles this case with default header values.

Insufficient scope, expected any of: create:users
*/
type GetJobsByIDForbidden struct {
}

func (o *GetJobsByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{id}][%d] getJobsByIdForbidden ", 403)
}

func (o *GetJobsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetJobsByIDNotFound creates a GetJobsByIDNotFound with default headers values
func NewGetJobsByIDNotFound() *GetJobsByIDNotFound {
	return &GetJobsByIDNotFound{}
}

/*GetJobsByIDNotFound handles this case with default header values.

The job does not exist
*/
type GetJobsByIDNotFound struct {
}

func (o *GetJobsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{id}][%d] getJobsByIdNotFound ", 404)
}

func (o *GetJobsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetJobsByIDTooManyRequests creates a GetJobsByIDTooManyRequests with default headers values
func NewGetJobsByIDTooManyRequests() *GetJobsByIDTooManyRequests {
	return &GetJobsByIDTooManyRequests{}
}

/*GetJobsByIDTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetJobsByIDTooManyRequests struct {
}

func (o *GetJobsByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{id}][%d] getJobsByIdTooManyRequests ", 429)
}

func (o *GetJobsByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
