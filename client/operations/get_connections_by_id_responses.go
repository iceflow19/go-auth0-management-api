// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetConnectionsByIDReader is a Reader for the GetConnectionsByID structure.
type GetConnectionsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectionsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetConnectionsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetConnectionsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetConnectionsByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetConnectionsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetConnectionsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetConnectionsByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetConnectionsByIDOK creates a GetConnectionsByIDOK with default headers values
func NewGetConnectionsByIDOK() *GetConnectionsByIDOK {
	return &GetConnectionsByIDOK{}
}

/*GetConnectionsByIDOK handles this case with default header values.

The connection was retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetConnectionsByIDOK struct {
	Payload *models.GetConnectionsByIDResponse
}

func (o *GetConnectionsByIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/connections/{id}][%d] getConnectionsByIdOK  %+v", 200, o.Payload)
}

func (o *GetConnectionsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetConnectionsByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionsByIDBadRequest creates a GetConnectionsByIDBadRequest with default headers values
func NewGetConnectionsByIDBadRequest() *GetConnectionsByIDBadRequest {
	return &GetConnectionsByIDBadRequest{}
}

/*GetConnectionsByIDBadRequest handles this case with default header values.

Invalid request query string. The message will vary depending on the cause.
*/
type GetConnectionsByIDBadRequest struct {
}

func (o *GetConnectionsByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/connections/{id}][%d] getConnectionsByIdBadRequest ", 400)
}

func (o *GetConnectionsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectionsByIDUnauthorized creates a GetConnectionsByIDUnauthorized with default headers values
func NewGetConnectionsByIDUnauthorized() *GetConnectionsByIDUnauthorized {
	return &GetConnectionsByIDUnauthorized{}
}

/*GetConnectionsByIDUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetConnectionsByIDUnauthorized struct {
}

func (o *GetConnectionsByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/connections/{id}][%d] getConnectionsByIdUnauthorized ", 401)
}

func (o *GetConnectionsByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectionsByIDForbidden creates a GetConnectionsByIDForbidden with default headers values
func NewGetConnectionsByIDForbidden() *GetConnectionsByIDForbidden {
	return &GetConnectionsByIDForbidden{}
}

/*GetConnectionsByIDForbidden handles this case with default header values.

Insufficient scope, expected any of: read:connections
*/
type GetConnectionsByIDForbidden struct {
}

func (o *GetConnectionsByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/connections/{id}][%d] getConnectionsByIdForbidden ", 403)
}

func (o *GetConnectionsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectionsByIDNotFound creates a GetConnectionsByIDNotFound with default headers values
func NewGetConnectionsByIDNotFound() *GetConnectionsByIDNotFound {
	return &GetConnectionsByIDNotFound{}
}

/*GetConnectionsByIDNotFound handles this case with default header values.

The connection does not exist.
*/
type GetConnectionsByIDNotFound struct {
}

func (o *GetConnectionsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/connections/{id}][%d] getConnectionsByIdNotFound ", 404)
}

func (o *GetConnectionsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectionsByIDTooManyRequests creates a GetConnectionsByIDTooManyRequests with default headers values
func NewGetConnectionsByIDTooManyRequests() *GetConnectionsByIDTooManyRequests {
	return &GetConnectionsByIDTooManyRequests{}
}

/*GetConnectionsByIDTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetConnectionsByIDTooManyRequests struct {
}

func (o *GetConnectionsByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/connections/{id}][%d] getConnectionsByIdTooManyRequests ", 429)
}

func (o *GetConnectionsByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
