// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetFactorsReader is a Reader for the GetFactors structure.
type GetFactorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFactorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFactorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFactorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetFactorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFactorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFactorsOK creates a GetFactorsOK with default headers values
func NewGetFactorsOK() *GetFactorsOK {
	return &GetFactorsOK{}
}

/*GetFactorsOK handles this case with default header values.

Succeed.
*/
type GetFactorsOK struct {
	Payload []*models.GetFactorsResponse
}

func (o *GetFactorsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors][%d] getFactorsOK  %+v", 200, o.Payload)
}

func (o *GetFactorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFactorsBadRequest creates a GetFactorsBadRequest with default headers values
func NewGetFactorsBadRequest() *GetFactorsBadRequest {
	return &GetFactorsBadRequest{}
}

/*GetFactorsBadRequest handles this case with default header values.

Invalid input based on schemas.
*/
type GetFactorsBadRequest struct {
}

func (o *GetFactorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors][%d] getFactorsBadRequest ", 400)
}

func (o *GetFactorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFactorsUnauthorized creates a GetFactorsUnauthorized with default headers values
func NewGetFactorsUnauthorized() *GetFactorsUnauthorized {
	return &GetFactorsUnauthorized{}
}

/*GetFactorsUnauthorized handles this case with default header values.

Token has expired or signature is invalid
*/
type GetFactorsUnauthorized struct {
}

func (o *GetFactorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors][%d] getFactorsUnauthorized ", 401)
}

func (o *GetFactorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFactorsForbidden creates a GetFactorsForbidden with default headers values
func NewGetFactorsForbidden() *GetFactorsForbidden {
	return &GetFactorsForbidden{}
}

/*GetFactorsForbidden handles this case with default header values.

Insufficient scope
*/
type GetFactorsForbidden struct {
}

func (o *GetFactorsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors][%d] getFactorsForbidden ", 403)
}

func (o *GetFactorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
