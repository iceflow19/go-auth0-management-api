// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetRulesByIDReader is a Reader for the GetRulesByID structure.
type GetRulesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRulesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRulesByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRulesByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetRulesByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRulesByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRulesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetRulesByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRulesByIDOK creates a GetRulesByIDOK with default headers values
func NewGetRulesByIDOK() *GetRulesByIDOK {
	return &GetRulesByIDOK{}
}

/*GetRulesByIDOK handles this case with default header values.

The rule was retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetRulesByIDOK struct {
	Payload *models.GetRulesByIDResponse
}

func (o *GetRulesByIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules/{id}][%d] getRulesByIdOK  %+v", 200, o.Payload)
}

func (o *GetRulesByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetRulesByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRulesByIDBadRequest creates a GetRulesByIDBadRequest with default headers values
func NewGetRulesByIDBadRequest() *GetRulesByIDBadRequest {
	return &GetRulesByIDBadRequest{}
}

/*GetRulesByIDBadRequest handles this case with default header values.

Invalid request query string. The message will vary depending on the cause.
*/
type GetRulesByIDBadRequest struct {
}

func (o *GetRulesByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules/{id}][%d] getRulesByIdBadRequest ", 400)
}

func (o *GetRulesByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesByIDUnauthorized creates a GetRulesByIDUnauthorized with default headers values
func NewGetRulesByIDUnauthorized() *GetRulesByIDUnauthorized {
	return &GetRulesByIDUnauthorized{}
}

/*GetRulesByIDUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetRulesByIDUnauthorized struct {
}

func (o *GetRulesByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules/{id}][%d] getRulesByIdUnauthorized ", 401)
}

func (o *GetRulesByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesByIDForbidden creates a GetRulesByIDForbidden with default headers values
func NewGetRulesByIDForbidden() *GetRulesByIDForbidden {
	return &GetRulesByIDForbidden{}
}

/*GetRulesByIDForbidden handles this case with default header values.

Insufficient scope, expected any of: read:rules
*/
type GetRulesByIDForbidden struct {
}

func (o *GetRulesByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules/{id}][%d] getRulesByIdForbidden ", 403)
}

func (o *GetRulesByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesByIDNotFound creates a GetRulesByIDNotFound with default headers values
func NewGetRulesByIDNotFound() *GetRulesByIDNotFound {
	return &GetRulesByIDNotFound{}
}

/*GetRulesByIDNotFound handles this case with default header values.

The rule does not exist.
*/
type GetRulesByIDNotFound struct {
}

func (o *GetRulesByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules/{id}][%d] getRulesByIdNotFound ", 404)
}

func (o *GetRulesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesByIDTooManyRequests creates a GetRulesByIDTooManyRequests with default headers values
func NewGetRulesByIDTooManyRequests() *GetRulesByIDTooManyRequests {
	return &GetRulesByIDTooManyRequests{}
}

/*GetRulesByIDTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetRulesByIDTooManyRequests struct {
}

func (o *GetRulesByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/rules/{id}][%d] getRulesByIdTooManyRequests ", 429)
}

func (o *GetRulesByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
