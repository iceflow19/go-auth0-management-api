// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	strfmt "github.com/go-openapi/strfmt"
	"golang.org/x/net/context"
)

// NewPutEmailTemplatesByTemplateNameParams creates a new PutEmailTemplatesByTemplateNameParams object
// with the default values initialized.
func NewPutEmailTemplatesByTemplateNameParams() *PutEmailTemplatesByTemplateNameParams {
	var ()
	return &PutEmailTemplatesByTemplateNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutEmailTemplatesByTemplateNameParamsWithTimeout creates a new PutEmailTemplatesByTemplateNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutEmailTemplatesByTemplateNameParamsWithTimeout(timeout time.Duration) *PutEmailTemplatesByTemplateNameParams {
	var ()
	return &PutEmailTemplatesByTemplateNameParams{

		timeout: timeout,
	}
}

// NewPutEmailTemplatesByTemplateNameParamsWithContext creates a new PutEmailTemplatesByTemplateNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutEmailTemplatesByTemplateNameParamsWithContext(ctx context.Context) *PutEmailTemplatesByTemplateNameParams {
	var ()
	return &PutEmailTemplatesByTemplateNameParams{

		Context: ctx,
	}
}

// NewPutEmailTemplatesByTemplateNameParamsWithHTTPClient creates a new PutEmailTemplatesByTemplateNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutEmailTemplatesByTemplateNameParamsWithHTTPClient(client *http.Client) *PutEmailTemplatesByTemplateNameParams {
	var ()
	return &PutEmailTemplatesByTemplateNameParams{
		HTTPClient: client,
	}
}

/*PutEmailTemplatesByTemplateNameParams contains all the parameters to send to the API endpoint
for the put email templates by template name operation typically these are written to a http.Request
*/
type PutEmailTemplatesByTemplateNameParams struct {

	/*Body*/
	Body *models.PutEmailTemplatesByTemplateNameBody
	/*TemplateName
	  The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy)).

	*/
	TemplateName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) WithTimeout(timeout time.Duration) *PutEmailTemplatesByTemplateNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) WithContext(ctx context.Context) *PutEmailTemplatesByTemplateNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) WithHTTPClient(client *http.Client) *PutEmailTemplatesByTemplateNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) WithBody(body *models.PutEmailTemplatesByTemplateNameBody) *PutEmailTemplatesByTemplateNameParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) SetBody(body *models.PutEmailTemplatesByTemplateNameBody) {
	o.Body = body
}

// WithTemplateName adds the templateName to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) WithTemplateName(templateName string) *PutEmailTemplatesByTemplateNameParams {
	o.SetTemplateName(templateName)
	return o
}

// SetTemplateName adds the templateName to the put email templates by template name params
func (o *PutEmailTemplatesByTemplateNameParams) SetTemplateName(templateName string) {
	o.TemplateName = templateName
}

// WriteToRequest writes these params to a swagger request
func (o *PutEmailTemplatesByTemplateNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param templateName
	if err := r.SetPathParam("templateName", o.TemplateName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
