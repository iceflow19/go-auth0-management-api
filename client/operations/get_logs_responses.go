// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetLogsReader is a Reader for the GetLogs structure.
type GetLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetLogsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLogsOK creates a GetLogsOK with default headers values
func NewGetLogsOK() *GetLogsOK {
	return &GetLogsOK{}
}

/*GetLogsOK handles this case with default header values.

The log was retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetLogsOK struct {
	Payload []*models.GetLogsResponse
}

func (o *GetLogsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/logs][%d] getLogsOK  %+v", 200, o.Payload)
}

func (o *GetLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogsBadRequest creates a GetLogsBadRequest with default headers values
func NewGetLogsBadRequest() *GetLogsBadRequest {
	return &GetLogsBadRequest{}
}

/*GetLogsBadRequest handles this case with default header values.

Invalid request URI. The message will vary depending on the cause.
*/
type GetLogsBadRequest struct {
}

func (o *GetLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/logs][%d] getLogsBadRequest ", 400)
}

func (o *GetLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLogsUnauthorized creates a GetLogsUnauthorized with default headers values
func NewGetLogsUnauthorized() *GetLogsUnauthorized {
	return &GetLogsUnauthorized{}
}

/*GetLogsUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetLogsUnauthorized struct {
}

func (o *GetLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/logs][%d] getLogsUnauthorized ", 401)
}

func (o *GetLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLogsForbidden creates a GetLogsForbidden with default headers values
func NewGetLogsForbidden() *GetLogsForbidden {
	return &GetLogsForbidden{}
}

/*GetLogsForbidden handles this case with default header values.

Insufficient scope, expected any of: read:logs
*/
type GetLogsForbidden struct {
}

func (o *GetLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/logs][%d] getLogsForbidden ", 403)
}

func (o *GetLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLogsTooManyRequests creates a GetLogsTooManyRequests with default headers values
func NewGetLogsTooManyRequests() *GetLogsTooManyRequests {
	return &GetLogsTooManyRequests{}
}

/*GetLogsTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetLogsTooManyRequests struct {
}

func (o *GetLogsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/logs][%d] getLogsTooManyRequests ", 429)
}

func (o *GetLogsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
