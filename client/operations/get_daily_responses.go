// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetDailyReader is a Reader for the GetDaily structure.
type GetDailyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDailyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDailyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDailyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetDailyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetDailyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetDailyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDailyOK creates a GetDailyOK with default headers values
func NewGetDailyOK() *GetDailyOK {
	return &GetDailyOK{}
}

/*GetDailyOK handles this case with default header values.

The stats were retrieved. See <strong>Response Class</strong> below for schema.
*/
type GetDailyOK struct {
	Payload []*models.GetDailyResponse
}

func (o *GetDailyOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/daily][%d] getDailyOK  %+v", 200, o.Payload)
}

func (o *GetDailyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDailyBadRequest creates a GetDailyBadRequest with default headers values
func NewGetDailyBadRequest() *GetDailyBadRequest {
	return &GetDailyBadRequest{}
}

/*GetDailyBadRequest handles this case with default header values.

'from' date cannot be greater than 'to' date
*/
type GetDailyBadRequest struct {
}

func (o *GetDailyBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/daily][%d] getDailyBadRequest ", 400)
}

func (o *GetDailyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDailyUnauthorized creates a GetDailyUnauthorized with default headers values
func NewGetDailyUnauthorized() *GetDailyUnauthorized {
	return &GetDailyUnauthorized{}
}

/*GetDailyUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetDailyUnauthorized struct {
}

func (o *GetDailyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/daily][%d] getDailyUnauthorized ", 401)
}

func (o *GetDailyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDailyForbidden creates a GetDailyForbidden with default headers values
func NewGetDailyForbidden() *GetDailyForbidden {
	return &GetDailyForbidden{}
}

/*GetDailyForbidden handles this case with default header values.

Insufficient scope, expected any of: read:stats
*/
type GetDailyForbidden struct {
}

func (o *GetDailyForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/daily][%d] getDailyForbidden ", 403)
}

func (o *GetDailyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDailyTooManyRequests creates a GetDailyTooManyRequests with default headers values
func NewGetDailyTooManyRequests() *GetDailyTooManyRequests {
	return &GetDailyTooManyRequests{}
}

/*GetDailyTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetDailyTooManyRequests struct {
}

func (o *GetDailyTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/daily][%d] getDailyTooManyRequests ", 429)
}

func (o *GetDailyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
