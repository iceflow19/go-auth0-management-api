// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetResultsReader is a Reader for the GetResults structure.
type GetResultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetResultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetResultsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetResultsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetResultsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetResultsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetResultsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetResultsOK creates a GetResultsOK with default headers values
func NewGetResultsOK() *GetResultsOK {
	return &GetResultsOK{}
}

/*GetResultsOK handles this case with default header values.

The job results were retrieved.
*/
type GetResultsOK struct {
	Payload *models.GetResultsResponse
}

func (o *GetResultsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{job_id}/results][%d] getResultsOK  %+v", 200, o.Payload)
}

func (o *GetResultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetResultsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResultsBadRequest creates a GetResultsBadRequest with default headers values
func NewGetResultsBadRequest() *GetResultsBadRequest {
	return &GetResultsBadRequest{}
}

/*GetResultsBadRequest handles this case with default header values.

Invalid request URI. The message will vary depending on the cause.
*/
type GetResultsBadRequest struct {
}

func (o *GetResultsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{job_id}/results][%d] getResultsBadRequest ", 400)
}

func (o *GetResultsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResultsUnauthorized creates a GetResultsUnauthorized with default headers values
func NewGetResultsUnauthorized() *GetResultsUnauthorized {
	return &GetResultsUnauthorized{}
}

/*GetResultsUnauthorized handles this case with default header values.

Invalid signature received for JSON Web Token validation
*/
type GetResultsUnauthorized struct {
}

func (o *GetResultsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{job_id}/results][%d] getResultsUnauthorized ", 401)
}

func (o *GetResultsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResultsForbidden creates a GetResultsForbidden with default headers values
func NewGetResultsForbidden() *GetResultsForbidden {
	return &GetResultsForbidden{}
}

/*GetResultsForbidden handles this case with default header values.

Insufficient scope, expected any of: create:passwords_checking_job
*/
type GetResultsForbidden struct {
}

func (o *GetResultsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{job_id}/results][%d] getResultsForbidden ", 403)
}

func (o *GetResultsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResultsNotFound creates a GetResultsNotFound with default headers values
func NewGetResultsNotFound() *GetResultsNotFound {
	return &GetResultsNotFound{}
}

/*GetResultsNotFound handles this case with default header values.

The job results do not exist
*/
type GetResultsNotFound struct {
}

func (o *GetResultsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{job_id}/results][%d] getResultsNotFound ", 404)
}

func (o *GetResultsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResultsTooManyRequests creates a GetResultsTooManyRequests with default headers values
func NewGetResultsTooManyRequests() *GetResultsTooManyRequests {
	return &GetResultsTooManyRequests{}
}

/*GetResultsTooManyRequests handles this case with default header values.

Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers.
*/
type GetResultsTooManyRequests struct {
}

func (o *GetResultsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/jobs/{job_id}/results][%d] getResultsTooManyRequests ", 429)
}

func (o *GetResultsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
