// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	models "bitbucket.org/troyko/go-auth0-management-api/models"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// GetTemplatesReader is a Reader for the GetTemplates structure.
type GetTemplatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTemplatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTemplatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetTemplatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetTemplatesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetTemplatesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTemplatesOK creates a GetTemplatesOK with default headers values
func NewGetTemplatesOK() *GetTemplatesOK {
	return &GetTemplatesOK{}
}

/*GetTemplatesOK handles this case with default header values.

Succeed.
*/
type GetTemplatesOK struct {
	Payload *models.GetTemplatesResponse
}

func (o *GetTemplatesOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors/sms/templates][%d] getTemplatesOK  %+v", 200, o.Payload)
}

func (o *GetTemplatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetTemplatesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplatesBadRequest creates a GetTemplatesBadRequest with default headers values
func NewGetTemplatesBadRequest() *GetTemplatesBadRequest {
	return &GetTemplatesBadRequest{}
}

/*GetTemplatesBadRequest handles this case with default header values.

Invalid input based on schemas.
*/
type GetTemplatesBadRequest struct {
}

func (o *GetTemplatesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors/sms/templates][%d] getTemplatesBadRequest ", 400)
}

func (o *GetTemplatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTemplatesUnauthorized creates a GetTemplatesUnauthorized with default headers values
func NewGetTemplatesUnauthorized() *GetTemplatesUnauthorized {
	return &GetTemplatesUnauthorized{}
}

/*GetTemplatesUnauthorized handles this case with default header values.

Token has expired or signature is invalid
*/
type GetTemplatesUnauthorized struct {
}

func (o *GetTemplatesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors/sms/templates][%d] getTemplatesUnauthorized ", 401)
}

func (o *GetTemplatesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTemplatesForbidden creates a GetTemplatesForbidden with default headers values
func NewGetTemplatesForbidden() *GetTemplatesForbidden {
	return &GetTemplatesForbidden{}
}

/*GetTemplatesForbidden handles this case with default header values.

Insufficient scope
*/
type GetTemplatesForbidden struct {
}

func (o *GetTemplatesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/guardian/factors/sms/templates][%d] getTemplatesForbidden ", 403)
}

func (o *GetTemplatesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
