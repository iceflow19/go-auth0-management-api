{
  "swagger": "2.0",
  "info": {
    "title": "management.auth0.com",
    "version": "2"
  },
  "host": "management.auth0.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/v2/emails/provider": {
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "<strong>USE WITH CAUTION</strong>",
        "operationId": "delete_provider",
        "summary": "Delete the email provider"
      },
      "get": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve: name, enabled, settings fields",
            "in": "query",
            "name": "fields",
            "type": "string"
          },
          {
            "description": "<code>true</code> if the fields specified are to be excluded from the result, <code>false</code> otherwise (defaults to <code>true</code>)",
            "in": "query",
            "name": "include_fields",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The email provider was retrieved. See <strong>Response Class</strong> below for schema.",
            "schema": {
              "$ref": "#/definitions/get_provider_response"
            }
          },
          "400": {
            "description": "Invalid request query string. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: read:email_provider"
          },
          "404": {
            "description": "There is not a configured email provider"
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "This endpoint can be used to retrieve the name of the email provider.",
        "operationId": "get_provider",
        "summary": "Get the email provider"
      },
      "patch": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patch_provider_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The email provider was updated. See <strong>Response Class</strong> below for schema.",
            "schema": {
              "$ref": "#/definitions/patch_provider_response"
            }
          },
          "400": {
            "description": "Invalid request body. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: update:email_provider"
          },
          "404": {
            "description": "There is not a configured email provider"
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "Can be used to change details for an email provider.\n\nDepending on the type of provider, the <code>credentials</code> object requires different attributes:\n<ul><li><code>mandrill</code> requires <code>api_key</code></li><li><code>sendgrid</code> requires <code>api_key</code></li><li><code>sparkpost</code> requires <code>api_key</code></li><li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code> and <code>region</code></li><li><code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code> and <code>smtp_pass</code></li></ul>\n<a href=\"https://auth0.com/docs/email/providers\">Learn more about SMTP Email Providers</a>\n",
        "operationId": "patch_provider",
        "summary": "Update the email provider"
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post_provider_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The email provider was retrieved. See <strong>Response Class</strong> below for schema.",
            "schema": {
              "$ref": "#/definitions/post_provider_response"
            }
          },
          "400": {
            "description": "Invalid request body. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: create:email_provider"
          },
          "409": {
            "description": "An email provider is already configured"
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "To be used to set a new email provider.\n\nDepending on the type of provider, the <code>credentials</code> object requires different attributes:\n<ul><li><code>mandrill</code> requires <code>api_key</code></li><li><code>sendgrid</code> requires <code>api_key</code></li><li><code>sparkpost</code> requires <code>api_key</code></li><li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code> and <code>region</code></li><li><code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code> and <code>smtp_pass</code></li></ul>\n<a href=\"https://auth0.com/docs/email/providers\">Learn more about SMTP Email Providers</a>\n",
        "operationId": "post_provider",
        "summary": "Configure the email provider"
      }
    }
  },
  "definitions": {
    "get_provider_response": {
      "properties": {
        "credentials": {
          "$ref": "#/definitions/get_provider_response_credentials"
        },
        "default_from_address": {
          "description": "The default from address",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise",
          "type": "boolean"
        },
        "name": {
          "default": "sendgrid",
          "description": "The name of the email provider",
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/get_provider_response_settings"
        }
      },
      "type": "object"
    },
    "get_provider_response_credentials": {
      "description": "Provider credentials",
      "properties": {
        "accessKeyId": {
          "description": "AWS Access Key ID",
          "type": "string"
        },
        "api_key": {
          "default": "your_api_key",
          "description": "API Key",
          "type": "string"
        },
        "api_user": {
          "description": "API User",
          "type": "string"
        },
        "region": {
          "description": "AWS default region",
          "type": "string"
        },
        "secretAccessKey": {
          "description": "AWS Secret Access Key",
          "type": "string"
        },
        "smtp_host": {
          "description": "SMTP host",
          "type": "string"
        },
        "smtp_pass": {
          "description": "SMTP password",
          "type": "string"
        },
        "smtp_port": {
          "description": "SMTP port",
          "type": "integer"
        },
        "smtp_user": {
          "description": "SMTP user",
          "type": "string"
        }
      },
      "type": "object"
    },
    "get_provider_response_settings": {
      "description": "Specific provider setting",
      "type": "object"
    },
    "patch_provider_body": {
      "properties": {
        "credentials": {
          "$ref": "#/definitions/patch_provider_body_credentials"
        },
        "default_from_address": {
          "description": "The default from address",
          "type": "string"
        },
        "enabled": {
          "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the email provider",
          "enum": [
            "mandrill",
            "sendgrid",
            "sparkpost",
            "ses",
            "smtp"
          ],
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/patch_provider_body_settings"
        }
      },
      "type": "object"
    },
    "patch_provider_body_credentials": {
      "properties": {
        "api_key": {
          "description": "API Key",
          "type": "string"
        }
      },
      "required": [
        "api_key"
      ]
    },
    "patch_provider_body_settings": {
      "description": "Specific provider setting",
      "type": "object"
    },
    "patch_provider_response": {
      "properties": {
        "credentials": {
          "$ref": "#/definitions/patch_provider_response_credentials"
        },
        "default_from_address": {
          "description": "The default from address",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise",
          "type": "boolean"
        },
        "name": {
          "default": "sendgrid",
          "description": "The name of the email provider",
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/patch_provider_response_settings"
        }
      },
      "type": "object"
    },
    "patch_provider_response_credentials": {
      "description": "Provider credentials",
      "properties": {
        "accessKeyId": {
          "description": "AWS Access Key ID",
          "type": "string"
        },
        "api_key": {
          "default": "your_api_key",
          "description": "API Key",
          "type": "string"
        },
        "api_user": {
          "description": "API User",
          "type": "string"
        },
        "region": {
          "description": "AWS default region",
          "type": "string"
        },
        "secretAccessKey": {
          "description": "AWS Secret Access Key",
          "type": "string"
        },
        "smtp_host": {
          "description": "SMTP host",
          "type": "string"
        },
        "smtp_pass": {
          "description": "SMTP password",
          "type": "string"
        },
        "smtp_port": {
          "description": "SMTP port",
          "type": "integer"
        },
        "smtp_user": {
          "description": "SMTP user",
          "type": "string"
        }
      },
      "type": "object"
    },
    "patch_provider_response_settings": {
      "description": "Specific provider setting",
      "type": "object"
    },
    "post_provider_body": {
      "properties": {
        "credentials": {
          "$ref": "#/definitions/post_provider_body_credentials"
        },
        "default_from_address": {
          "description": "The default from address",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise (defaults to <code>true</code>)",
          "type": "boolean"
        },
        "name": {
          "default": "mandrill",
          "description": "The name of the email provider",
          "enum": [
            "mandrill",
            "sendgrid",
            "sparkpost",
            "ses",
            "smtp"
          ],
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/post_provider_body_settings"
        }
      },
      "required": [
        "name",
        "credentials"
      ],
      "type": "object"
    },
    "post_provider_body_credentials": {
      "properties": {
        "api_key": {
          "description": "API Key",
          "type": "string"
        }
      },
      "required": [
        "api_key"
      ]
    },
    "post_provider_body_settings": {
      "description": "Specific provider setting",
      "type": "object"
    },
    "post_provider_response": {
      "properties": {
        "credentials": {
          "$ref": "#/definitions/post_provider_response_credentials"
        },
        "default_from_address": {
          "description": "The default from address",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise",
          "type": "boolean"
        },
        "name": {
          "default": "sendgrid",
          "description": "The name of the email provider",
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/post_provider_response_settings"
        }
      },
      "type": "object"
    },
    "post_provider_response_credentials": {
      "description": "Provider credentials",
      "properties": {
        "accessKeyId": {
          "description": "AWS Access Key ID",
          "type": "string"
        },
        "api_key": {
          "default": "your_api_key",
          "description": "API Key",
          "type": "string"
        },
        "api_user": {
          "description": "API User",
          "type": "string"
        },
        "region": {
          "description": "AWS default region",
          "type": "string"
        },
        "secretAccessKey": {
          "description": "AWS Secret Access Key",
          "type": "string"
        },
        "smtp_host": {
          "description": "SMTP host",
          "type": "string"
        },
        "smtp_pass": {
          "description": "SMTP password",
          "type": "string"
        },
        "smtp_port": {
          "description": "SMTP port",
          "type": "integer"
        },
        "smtp_user": {
          "description": "SMTP user",
          "type": "string"
        }
      },
      "type": "object"
    },
    "post_provider_response_settings": {
      "description": "Specific provider setting",
      "type": "object"
    }
  }
}
