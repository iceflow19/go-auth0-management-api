{
  "swagger": "2.0",
  "info": {
    "title": "management.auth0.com",
    "version": "2"
  },
  "host": "management.auth0.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/v2/user-blocks": {
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Should be any of: username, phone_number, email.",
            "in": "query",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "The user was unblocked. See <strong>Response Class</strong> below for schema."
          },
          "400": {
            "description": "Invalid request body. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: update:users"
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "This endpoint can be used to unblock a given key that was blocked due to an excessive amount of incorrectly provided credentials.",
        "operationId": "delete_user-blocks",
        "summary": "Unblock by identifier"
      },
      "get": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Should be any of: username, phone_number, email.",
            "in": "query",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was retrieved. See <strong>Response Class</strong> below for schema.",
            "schema": {
              "$ref": "#/definitions/get_user-blocks_response"
            }
          },
          "400": {
            "description": "Invalid request query string. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: read:users"
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of blocked IP addresses for a given key.",
        "operationId": "get_user-blocks",
        "summary": "Get blocks by identifier"
      }
    },
    "/api/v2/user-blocks/{id}": {
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The user_id of the user to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "The user was unblocked. See <strong>Response Class</strong> below for schema."
          },
          "400": {
            "description": "Invalid request body. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: update:users"
          },
          "404": {
            "description": "The user does not exist."
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "This endpoint can be used to unblock a user that was blocked due to an excessive amount of incorrectly provided credentials.\n\nThis endpoint does not unblock users that were blocked by admins. <a href=\"https://auth0.com/docs/user-profile#block-and-unblock-a-user\">Click here</a> for more information on how to unblock a user that was blocked by an admin.",
        "operationId": "delete_user-blocks_by_id",
        "summary": "Unblock a user"
      },
      "get": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The user_id of the user to retrieve",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was retrieved. See <strong>Response Class</strong> below for schema.",
            "schema": {
              "$ref": "#/definitions/get_user-blocks_by_id_response"
            }
          },
          "400": {
            "description": "Invalid request query string. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: read:users"
          },
          "404": {
            "description": "The user does not exist."
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "This endpoint can be used to retrieve a list of blocked IP addresses of a particular user given a <code>user_id</code>.",
        "operationId": "get_user-blocks_by_id",
        "summary": "Get a user's blocks"
      }
    }
  },
  "definitions": {
    "get_user-blocks_by_id_response": {
      "properties": {
        "blocked_for": {
          "default": [
            {
              "identifier": "john.doe@gmail.com",
              "ip": "10.0.0.1"
            }
          ],
          "description": "Array of identifier + ip pairs",
          "items": {
            "properties": {
              "connection": {
                "description": "Connection identifier",
                "type": "string"
              },
              "identifier": {
                "default": "john.doe@gmail.com",
                "description": "Identifier (can be the user's `email`, `username` or `phone_number`)",
                "type": "string"
              },
              "ip": {
                "default": "10.0.0.1",
                "description": "IP Address",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "get_user-blocks_response": {
      "properties": {
        "blocked_for": {
          "default": [
            {
              "identifier": "john.doe@gmail.com",
              "ip": "10.0.0.1"
            }
          ],
          "description": "Array of identifier + ip pairs",
          "items": {
            "properties": {
              "connection": {
                "description": "Connection identifier",
                "type": "string"
              },
              "identifier": {
                "default": "john.doe@gmail.com",
                "description": "Identifier (can be the user's `email`, `username` or `phone_number`)",
                "type": "string"
              },
              "ip": {
                "default": "10.0.0.1",
                "description": "IP Address",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  }
}
