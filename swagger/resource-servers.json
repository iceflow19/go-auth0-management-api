{
  "swagger": "2.0",
  "info": {
    "title": "management.auth0.com",
    "version": "2"
  },
  "host": "management.auth0.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/v2/resource-servers": {
      "get": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The page number. Zero based.",
            "in": "query",
            "minimum": 0,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "The amount of entries per page. Default: <code>50</code>. Max value: <code>100</code>. If not present, pagination will be disabled",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "true if a query summary must be included in the result, false otherwise. Default <code>false</code>.",
            "in": "query",
            "name": "include_totals",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource servers were retrieved. See <strong>Response Class</strong> below for schema.",
            "schema": {
              "items": {
                "$ref": "#/definitions/get_resource-servers_response"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid request query string. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: read:resource_servers"
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "Manage your Resource Servers. These host protected resources that you can access by interfacing with its <a href=\"https://auth0.com/docs/apis\">APIs</a>.\n",
        "operationId": "get_resource-servers",
        "summary": "Get all resource servers"
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post_resource-servers_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "201": {
            "description": "The resource server was created."
          },
          "400": {
            "description": "The selected identifier is reserved."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: create:resource_servers"
          },
          "409": {
            "description": "A resource server with the same identifier already exists."
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "operationId": "post_resource-servers",
        "summary": "Create a resource server"
      }
    },
    "/api/v2/resource-servers/{id}": {
      "delete": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The id or the audience of the resource server to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "The resource server no longer exists."
          },
          "400": {
            "description": "System resource servers cannot be deleted."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: delete:resource_servers"
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "operationId": "delete_resource-servers_by_id",
        "summary": "Delete a resource server"
      },
      "get": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The id or audience of the resource server to retrieve",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource server was retrieved. See <strong>Response Class</strong> below for schema.",
            "schema": {
              "$ref": "#/definitions/get_resource-servers_by_id_response"
            }
          },
          "400": {
            "description": "Invalid request query string. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."
          },
          "404": {
            "description": "The resource server does not exist."
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "operationId": "get_resource-servers_by_id",
        "summary": "Get a resource server by its id or audience"
      },
      "patch": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The id or audience of the resource server to update",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patch_resource-servers_by_id_body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "201": {
            "description": "The resource server was updated."
          },
          "400": {
            "description": "System resource servers cannot be patched."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: update:resource_servers"
          },
          "409": {
            "description": "A resource server with the same identifier already exists."
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "operationId": "patch_resource-servers_by_id",
        "summary": "Update a resource server"
      }
    }
  },
  "definitions": {
    "get_resource-servers_by_id_response": {
      "properties": {
        "allow_offline_access": {
          "description": "Allows issuance of refresh tokens for this entity",
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the resource server",
          "type": "string"
        },
        "identifier": {
          "description": "The identifier of the resource server.",
          "type": "string"
        },
        "is_system": {
          "description": "Whether this API is a system API",
          "type": "boolean"
        },
        "name": {
          "description": "A friendly name for the resource server.",
          "type": "string"
        },
        "scopes": {
          "items": {
            "properties": {
              "description": {
                "description": "A user-friendly description of the scope.",
                "type": "string"
              },
              "value": {
                "description": "The scope value.",
                "type": "string"
              }
            },
            "required": [
              "value"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "signing_alg": {
          "description": "The algorithm used to sign tokens",
          "enum": [
            "HS256",
            "RS256"
          ],
          "type": "string"
        },
        "signing_secret": {
          "description": "The secret used to sign tokens when using symmetric algorithms",
          "type": "string"
        },
        "skip_consent_for_verifiable_first_party_clients": {
          "description": "Flag this entity as capable of skipping consent",
          "type": "boolean"
        },
        "token_lifetime": {
          "description": "The amount of time (in seconds) that the token will be valid after being issued",
          "type": "integer"
        },
        "token_lifetime_for_web": {
          "description": "The amount of time (in seconds) that the token will be valid after being issued from browser based flows. Value cannot be larger than token_lifetime.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "get_resource-servers_response": {
      "properties": {
        "allow_offline_access": {
          "description": "Allows issuance of refresh tokens for this entity",
          "type": "boolean"
        },
        "id": {
          "description": "The ID of the resource server",
          "type": "string"
        },
        "identifier": {
          "description": "The identifier of the resource server.",
          "type": "string"
        },
        "is_system": {
          "description": "Whether this API is a system API",
          "type": "boolean"
        },
        "name": {
          "description": "A friendly name for the resource server.",
          "type": "string"
        },
        "scopes": {
          "items": {
            "properties": {
              "description": {
                "description": "A user-friendly description of the scope.",
                "type": "string"
              },
              "value": {
                "description": "The scope value.",
                "type": "string"
              }
            },
            "required": [
              "value"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "signing_alg": {
          "description": "The algorithm used to sign tokens",
          "enum": [
            "HS256",
            "RS256"
          ],
          "type": "string"
        },
        "signing_secret": {
          "description": "The secret used to sign tokens when using symmetric algorithms",
          "type": "string"
        },
        "skip_consent_for_verifiable_first_party_clients": {
          "description": "Flag this entity as capable of skipping consent",
          "type": "boolean"
        },
        "token_lifetime": {
          "description": "The amount of time (in seconds) that the token will be valid after being issued",
          "type": "integer"
        },
        "token_lifetime_for_web": {
          "description": "The amount of time (in seconds) that the token will be valid after being issued from browser based flows. Value cannot be larger than token_lifetime.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "patch_resource-servers_by_id_body": {
      "properties": {
        "allow_offline_access": {
          "description": "Allows issuance of refresh tokens for this entity",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the resource server. Must contain at least one character. Does not allow '<' or '>'",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/patch_resource-servers_by_id_body_options"
        },
        "scopes": {
          "items": {
            "properties": {
              "description": {
                "description": "A user-friendly description of the scope.",
                "type": "string"
              },
              "value": {
                "description": "The scope value.",
                "type": "string"
              }
            },
            "required": [
              "value"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "signing_alg": {
          "description": "The algorithm used to sign tokens",
          "enum": [
            "HS256",
            "RS256"
          ],
          "type": "string"
        },
        "signing_secret": {
          "description": "The secret used to sign tokens when using symmetric algorithms",
          "type": "string"
        },
        "skip_consent_for_verifiable_first_party_clients": {
          "description": "Flag this entity as capable of skipping consent",
          "type": "boolean"
        },
        "token_lifetime": {
          "description": "The amount of time (in seconds) that the token will be valid after being issued",
          "maximum": 2592000,
          "minimum": 0,
          "type": "integer"
        },
        "verificationLocation": {
          "description": "A uri from which to retrieve JWKs for this resource server used for verifying the JWT sent to Auth0 for token introspection.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "patch_resource-servers_by_id_body_options": {
      "description": "External API specific settings.",
      "type": "object"
    },
    "post_resource-servers_body": {
      "properties": {
        "allow_offline_access": {
          "description": "Allows issuance of refresh tokens for this entity",
          "type": "boolean"
        },
        "identifier": {
          "description": "The identifier of the resource server.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource server. Must contain at least one character. Does not allow '<' or '>'",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/post_resource-servers_body_options"
        },
        "scopes": {
          "items": {
            "properties": {
              "description": {
                "description": "A user-friendly description of the scope.",
                "type": "string"
              },
              "value": {
                "description": "The scope value.",
                "type": "string"
              }
            },
            "required": [
              "value"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "signing_alg": {
          "description": "The algorithm used to sign tokens",
          "enum": [
            "HS256",
            "RS256"
          ],
          "type": "string"
        },
        "signing_secret": {
          "description": "The secret used to sign tokens when using symmetric algorithms",
          "type": "string"
        },
        "skip_consent_for_verifiable_first_party_clients": {
          "description": "Flag this entity as capable of skipping consent",
          "type": "boolean"
        },
        "token_lifetime": {
          "description": "The amount of time (in seconds) that the token will be valid after being issued",
          "maximum": 2592000,
          "minimum": 0,
          "type": "integer"
        },
        "verificationLocation": {
          "description": "A uri from which to retrieve JWKs for this resource server used for verifying the JWT sent to Auth0 for token introspection.",
          "type": "string"
        }
      },
      "required": [
        "identifier"
      ],
      "type": "object"
    },
    "post_resource-servers_body_options": {
      "description": "External API specific settings.",
      "type": "object"
    }
  }
}
