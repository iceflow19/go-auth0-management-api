{
  "swagger": "2.0",
  "info": {
    "title": "management.auth0.com",
    "version": "2"
  },
  "host": "management.auth0.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/v2/users-by-email": {
      "get": {
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise. Defaults to <code>true</code>",
            "in": "query",
            "name": "include_fields",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The users were retrieved. See <strong>Response Class</strong> below for schema.",
            "schema": {
              "items": {
                "$ref": "#/definitions/get_users-by-email_response"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid request query string. The message will vary depending on the cause."
          },
          "401": {
            "description": "Invalid signature received for JSON Web Token validation"
          },
          "403": {
            "description": "Insufficient scope, expected any of: read:users"
          },
          "429": {
            "description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."
          }
        },
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "The email address associated with a user is saved in lower case, regardless of how you initially provided it. For example, if you register a user as <b>JohnSmith@example.com</b>, Auth0 saves the user's email as <b>johnsmith@example.com</b>.\n\nWhen using this endpoint, make sure that you are searching for users via email addresses in lowercase only.",
        "operationId": "get_users-by-email",
        "summary": "Search users by email"
      }
    }
  },
  "definitions": {
    "get_users-by-email_response": {
      "properties": {
        "app_metadata": {
          "$ref": "#/definitions/get_users-by-email_response_app_metadata"
        },
        "blocked": {
          "description": "Indicates whether the user was blocked by an administrator or not",
          "type": "boolean"
        },
        "created_at": {
          "description": "The date when the user was created",
          "type": "string"
        },
        "email": {
          "default": "john.doe@gmail.com",
          "description": "The user's email",
          "format": "email",
          "type": "string"
        },
        "email_verified": {
          "default": false,
          "description": "<code>true</code> if the user's email is verified, <code>false</code> otherwise",
          "type": "boolean"
        },
        "family_name": {
          "description": "The user's family name",
          "type": "string"
        },
        "given_name": {
          "description": "The user's given name",
          "type": "string"
        },
        "identities": {
          "default": {
            "connection": "Initial-Connection",
            "isSocial": false,
            "provider": "auth0",
            "user_id": "5457edea1b8f22891a000004"
          },
          "description": "An array of objects with information about the user's identities. More than one will exists in case accounts are linked",
          "items": {
            "properties": {
              "access_token": {
                "description": "IDP access token returned only if scope read:user_idp_token is defined",
                "type": "string"
              },
              "connection": {
                "description": "The name of the connection for the identity",
                "type": "string"
              },
              "isSocial": {
                "description": "<code>true</code> if the identity provider is a social provider, <code>false</code>s otherwise",
                "type": "boolean"
              },
              "profileData": {
                "properties": {
                  "email": {
                    "description": "The user's email",
                    "type": "string"
                  },
                  "email_verified": {
                    "description": "Indicates whether the user's email is verified or not",
                    "type": "boolean"
                  },
                  "family_name": {
                    "description": "The user's family name",
                    "type": "string"
                  },
                  "given_name": {
                    "description": "The user's given name",
                    "type": "string"
                  },
                  "name": {
                    "description": "The user's name",
                    "type": "string"
                  },
                  "phone_number": {
                    "description": "The user's phone number",
                    "type": "string"
                  },
                  "phone_verified": {
                    "description": "Indicates whether the user's phone is verified or not",
                    "type": "boolean"
                  },
                  "username": {
                    "default": "johndoe",
                    "description": "The user's username",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "provider": {
                "description": "The type of identity provider",
                "type": "string"
              },
              "user_id": {
                "description": "The unique identifier for the user for the identity",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "last_ip": {
          "description": "The last login IP address",
          "type": "string"
        },
        "last_login": {
          "description": "The last login date for this user",
          "type": "string"
        },
        "logins_count": {
          "description": "The number of logins for this user",
          "type": "integer"
        },
        "multifactor": {
          "description": "The list of multifactor providers that the user has enrolled to",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The user's name",
          "type": "string"
        },
        "nickname": {
          "description": "The user's nickname",
          "type": "string"
        },
        "phone_number": {
          "default": "+199999999999999",
          "description": "The user's phone number (following the E.164 recommendation), only valid for users from SMS connections",
          "type": "string"
        },
        "phone_verified": {
          "default": false,
          "description": "<code>true</code> if the user's phone_number is verified, <code>false</code> otherwise, only valid for users from SMS connections",
          "type": "boolean"
        },
        "picture": {
          "description": "The user's picture",
          "type": "string"
        },
        "updated_at": {
          "description": "The date when the user was last updated (modified)",
          "type": "string"
        },
        "user_id": {
          "default": "usr_5457edea1b8f33391a000004",
          "description": "The user's unique identifier",
          "type": "string"
        },
        "user_metadata": {
          "$ref": "#/definitions/get_users-by-email_response_user_metadata"
        },
        "username": {
          "default": "johndoe",
          "description": "The user's username",
          "type": "string"
        }
      },
      "type": "object"
    },
    "get_users-by-email_response_app_metadata": {
      "description": "Data related to the user that does affect the application's core functionality.",
      "type": "object"
    },
    "get_users-by-email_response_user_metadata": {
      "description": "Data related to the user that does not affect the application's core functionality.",
      "type": "object"
    }
  }
}
