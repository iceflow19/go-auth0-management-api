// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetClientsByIDResponseJwtConfiguration Configuration related to JWTs for the client
// swagger:model get_clients_by_id_response_jwt_configuration
type GetClientsByIDResponseJwtConfiguration struct {

	// Algorithm uses to sign JWTs
	// Enum: [HS256 RS256]
	Alg *string `json:"alg,omitempty"`

	// The amount of seconds the JWT will be valid (affects <code>exp</code> claim)
	LifetimeInSeconds *int64 `json:"lifetime_in_seconds,omitempty"`

	// scopes
	Scopes interface{} `json:"scopes,omitempty"`

	// <code>true</code> if the client secret is base64 encoded, <code>false</code> otherwise. Defaults to <code>true</code>
	SecretEncoded *bool `json:"secret_encoded,omitempty"`
}

// Validate validates this get clients by id response jwt configuration
func (m *GetClientsByIDResponseJwtConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlg(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getClientsByIdResponseJwtConfigurationTypeAlgPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HS256","RS256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getClientsByIdResponseJwtConfigurationTypeAlgPropEnum = append(getClientsByIdResponseJwtConfigurationTypeAlgPropEnum, v)
	}
}

const (

	// GetClientsByIDResponseJwtConfigurationAlgHS256 captures enum value "HS256"
	GetClientsByIDResponseJwtConfigurationAlgHS256 string = "HS256"

	// GetClientsByIDResponseJwtConfigurationAlgRS256 captures enum value "RS256"
	GetClientsByIDResponseJwtConfigurationAlgRS256 string = "RS256"
)

// prop value enum
func (m *GetClientsByIDResponseJwtConfiguration) validateAlgEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getClientsByIdResponseJwtConfigurationTypeAlgPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetClientsByIDResponseJwtConfiguration) validateAlg(formats strfmt.Registry) error {

	if swag.IsZero(m.Alg) { // not required
		return nil
	}

	// value enum
	if err := m.validateAlgEnum("alg", "body", *m.Alg); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetClientsByIDResponseJwtConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetClientsByIDResponseJwtConfiguration) UnmarshalBinary(b []byte) error {
	var res GetClientsByIDResponseJwtConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
