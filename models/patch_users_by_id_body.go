// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchUsersByIDBody patch users by id body
// swagger:model patch_users_by_id_body
type PatchUsersByIDBody struct {

	// app metadata
	AppMetadata PatchUsersByIDBodyAppMetadata `json:"app_metadata,omitempty"`

	// <code>true</code> if the user should be blocked, <code>false</code> if the user should be unblocked
	Blocked *bool `json:"blocked,omitempty"`

	// The Auth0 clientID. Only useful when updating the email
	ClientID *string `json:"client_id,omitempty"`

	// The connection name. This field is not itself updateable but is needed when updating email, email_verified, username or password.
	Connection *string `json:"connection,omitempty"`

	// The new email.
	// Format: email
	Email *strfmt.Email `json:"email,omitempty"`

	// <code>true</code> if the user's email address was already verified, <code>false</code> otherwise
	EmailVerified *bool `json:"email_verified,omitempty"`

	// The new password.
	Password *string `json:"password,omitempty"`

	// The user's phone number (following the E.164 recommendation), only valid for users from SMS connections
	PhoneNumber *string `json:"phone_number,omitempty"`

	// <code>true</code> if the user's phone_number was already verified, <code>false</code> otherwise. Only valid for SMS users
	PhoneVerified *bool `json:"phone_verified,omitempty"`

	// user metadata
	UserMetadata PatchUsersByIDBodyUserMetadata `json:"user_metadata,omitempty"`

	// The user's username. Only valid if the connection requires a username
	Username *string `json:"username,omitempty"`

	// <code>true</code> if the email change needs to be verified, <code>false</code> otherwise. Only allowed if changing the email
	VerifyEmail *bool `json:"verify_email,omitempty"`

	// <code>true</code> if the <code>phone_number</code> change needs to be verified, <code>false</code> otherwise. Only allowed if changing the phone number
	VerifyPhoneNumber *bool `json:"verify_phone_number,omitempty"`
}

// Validate validates this patch users by id body
func (m *PatchUsersByIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PatchUsersByIDBody) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(m.Email) { // not required
		return nil
	}

	if err := validate.FormatOf("email", "body", "email", m.Email.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PatchUsersByIDBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchUsersByIDBody) UnmarshalBinary(b []byte) error {
	var res PatchUsersByIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
