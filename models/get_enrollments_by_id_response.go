// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetEnrollmentsByIDResponse get enrollments by id response
// swagger:model get_enrollments_by_id_response
type GetEnrollmentsByIDResponse struct {

	// Enrollment date
	EnrolledAt *string `json:"enrolled_at,omitempty"`

	// Enrollment generated id
	// Required: true
	ID *string `json:"id"`

	// Device identifier (usually phone identifier)
	Identifier *string `json:"identifier,omitempty"`

	// Last authentication date
	LastAuth *string `json:"last_auth,omitempty"`

	// Device name (only Guardian)
	Name *string `json:"name,omitempty"`

	// Phone number
	PhoneNumber *string `json:"phone_number,omitempty"`

	// status
	// Enum: [pending confirmed]
	Status *string `json:"status,omitempty"`
}

// Validate validates this get enrollments by id response
func (m *GetEnrollmentsByIDResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetEnrollmentsByIDResponse) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

var getEnrollmentsByIdResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pending","confirmed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getEnrollmentsByIdResponseTypeStatusPropEnum = append(getEnrollmentsByIdResponseTypeStatusPropEnum, v)
	}
}

const (

	// GetEnrollmentsByIDResponseStatusPending captures enum value "pending"
	GetEnrollmentsByIDResponseStatusPending string = "pending"

	// GetEnrollmentsByIDResponseStatusConfirmed captures enum value "confirmed"
	GetEnrollmentsByIDResponseStatusConfirmed string = "confirmed"
)

// prop value enum
func (m *GetEnrollmentsByIDResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getEnrollmentsByIdResponseTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetEnrollmentsByIDResponse) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetEnrollmentsByIDResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetEnrollmentsByIDResponse) UnmarshalBinary(b []byte) error {
	var res GetEnrollmentsByIDResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
