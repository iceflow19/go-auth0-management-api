// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostEmailVerificationBody post email verification body
// swagger:model post_email-verification_body
type PostEmailVerificationBody struct {

	// The user will be redirected to this endpoint once the ticket is used
	ResultURL *string `json:"result_url,omitempty"`

	// The ticket's lifetime in seconds starting from the moment of creation. After expiration, the ticket cannot be used to verify the user's email. If not specified or if you send 0, the Auth0 default lifetime of five days will be applied
	// Minimum: 0
	TTLSec *int64 `json:"ttl_sec,omitempty"`

	// The user_id of for which the ticket is to be created
	// Required: true
	UserID *string `json:"user_id"`
}

// Validate validates this post email verification body
func (m *PostEmailVerificationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTTLSec(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostEmailVerificationBody) validateTTLSec(formats strfmt.Registry) error {

	if swag.IsZero(m.TTLSec) { // not required
		return nil
	}

	if err := validate.MinimumInt("ttl_sec", "body", int64(*m.TTLSec), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *PostEmailVerificationBody) validateUserID(formats strfmt.Registry) error {

	if err := validate.Required("user_id", "body", m.UserID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PostEmailVerificationBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostEmailVerificationBody) UnmarshalBinary(b []byte) error {
	var res PostEmailVerificationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
