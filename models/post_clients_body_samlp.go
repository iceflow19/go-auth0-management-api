// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostClientsBodySamlp post clients body samlp
// swagger:model post_clients_body_samlp
type PostClientsBodySamlp struct {

	// audience
	Audience string `json:"audience,omitempty"`

	// authn context class ref
	AuthnContextClassRef string `json:"authnContextClassRef,omitempty"`

	// create upn claim
	CreateUpnClaim bool `json:"createUpnClaim,omitempty"`

	// destination
	Destination string `json:"destination,omitempty"`

	// digest algorithm
	DigestAlgorithm string `json:"digestAlgorithm,omitempty"`

	// issuer
	Issuer string `json:"issuer,omitempty"`

	// lifetime in seconds
	LifetimeInSeconds int64 `json:"lifetimeInSeconds,omitempty"`

	// map identities
	MapIdentities bool `json:"mapIdentities,omitempty"`

	// map unknown claims as is
	MapUnknownClaimsAsIs bool `json:"mapUnknownClaimsAsIs,omitempty"`

	// mappings
	Mappings interface{} `json:"mappings,omitempty"`

	// name identifier format
	NameIdentifierFormat string `json:"nameIdentifierFormat,omitempty"`

	// name identifier probes
	// Unique: true
	NameIdentifierProbes []string `json:"nameIdentifierProbes"`

	// passthrough claims with no mapping
	PassthroughClaimsWithNoMapping bool `json:"passthroughClaimsWithNoMapping,omitempty"`

	// recipient
	Recipient string `json:"recipient,omitempty"`

	// sign response
	SignResponse bool `json:"signResponse,omitempty"`

	// signature algorithm
	SignatureAlgorithm string `json:"signatureAlgorithm,omitempty"`
}

// Validate validates this post clients body samlp
func (m *PostClientsBodySamlp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNameIdentifierProbes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostClientsBodySamlp) validateNameIdentifierProbes(formats strfmt.Registry) error {

	if swag.IsZero(m.NameIdentifierProbes) { // not required
		return nil
	}

	if err := validate.UniqueItems("nameIdentifierProbes", "body", m.NameIdentifierProbes); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PostClientsBodySamlp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostClientsBodySamlp) UnmarshalBinary(b []byte) error {
	var res PostClientsBodySamlp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
