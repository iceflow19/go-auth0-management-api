// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostConnectionsBody post connections body
// swagger:model post_connections_body
type PostConnectionsBody struct {

	// The identifiers of the clients for which the connection is to be enabled. If the array is empty or the property is not specified, no clients are enabled
	EnabledClients []string `json:"enabled_clients"`

	// metadata
	Metadata PostConnectionsBodyMetadata `json:"metadata,omitempty"`

	// The name of the connection. Must start and end with an alphanumeric character and can only contain alphanumeric characters and '-'. Max length 128
	// Required: true
	Name *string `json:"name"`

	// options
	Options *PostConnectionsBodyOptions `json:"options,omitempty"`

	// Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm
	// Max Items: 10
	Realms []string `json:"realms"`

	// The identity provider identifier for the connection
	// Required: true
	// Enum: [ad adfs amazon dropbox bitbucket aol auth0-adldap auth0-oidc auth0 baidu bitly box custom daccount dwolla email evernote-sandbox evernote exact facebook fitbit flickr github google-apps google-oauth2 guardian instagram ip linkedin miicard oauth1 oauth2 office365 paypal paypal-sandbox pingfederate planningcenter renren salesforce-community salesforce-sandbox salesforce samlp sharepoint shopify sms soundcloud thecity-sandbox thecity thirtysevensignals twitter untappd vkontakte waad weibo windowslive wordpress yahoo yammer yandex]
	Strategy *string `json:"strategy"`
}

// Validate validates this post connections body
func (m *PostConnectionsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOptions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRealms(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStrategy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostConnectionsBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *PostConnectionsBody) validateOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.Options) { // not required
		return nil
	}

	if m.Options != nil {
		if err := m.Options.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("options")
			}
			return err
		}
	}

	return nil
}

func (m *PostConnectionsBody) validateRealms(formats strfmt.Registry) error {

	if swag.IsZero(m.Realms) { // not required
		return nil
	}

	iRealmsSize := int64(len(m.Realms))

	if err := validate.MaxItems("realms", "body", iRealmsSize, 10); err != nil {
		return err
	}

	return nil
}

var postConnectionsBodyTypeStrategyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ad","adfs","amazon","dropbox","bitbucket","aol","auth0-adldap","auth0-oidc","auth0","baidu","bitly","box","custom","daccount","dwolla","email","evernote-sandbox","evernote","exact","facebook","fitbit","flickr","github","google-apps","google-oauth2","guardian","instagram","ip","linkedin","miicard","oauth1","oauth2","office365","paypal","paypal-sandbox","pingfederate","planningcenter","renren","salesforce-community","salesforce-sandbox","salesforce","samlp","sharepoint","shopify","sms","soundcloud","thecity-sandbox","thecity","thirtysevensignals","twitter","untappd","vkontakte","waad","weibo","windowslive","wordpress","yahoo","yammer","yandex"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postConnectionsBodyTypeStrategyPropEnum = append(postConnectionsBodyTypeStrategyPropEnum, v)
	}
}

const (

	// PostConnectionsBodyStrategyAd captures enum value "ad"
	PostConnectionsBodyStrategyAd string = "ad"

	// PostConnectionsBodyStrategyAdfs captures enum value "adfs"
	PostConnectionsBodyStrategyAdfs string = "adfs"

	// PostConnectionsBodyStrategyAmazon captures enum value "amazon"
	PostConnectionsBodyStrategyAmazon string = "amazon"

	// PostConnectionsBodyStrategyDropbox captures enum value "dropbox"
	PostConnectionsBodyStrategyDropbox string = "dropbox"

	// PostConnectionsBodyStrategyBitbucket captures enum value "bitbucket"
	PostConnectionsBodyStrategyBitbucket string = "bitbucket"

	// PostConnectionsBodyStrategyAol captures enum value "aol"
	PostConnectionsBodyStrategyAol string = "aol"

	// PostConnectionsBodyStrategyAuth0Adldap captures enum value "auth0-adldap"
	PostConnectionsBodyStrategyAuth0Adldap string = "auth0-adldap"

	// PostConnectionsBodyStrategyAuth0Oidc captures enum value "auth0-oidc"
	PostConnectionsBodyStrategyAuth0Oidc string = "auth0-oidc"

	// PostConnectionsBodyStrategyAuth0 captures enum value "auth0"
	PostConnectionsBodyStrategyAuth0 string = "auth0"

	// PostConnectionsBodyStrategyBaidu captures enum value "baidu"
	PostConnectionsBodyStrategyBaidu string = "baidu"

	// PostConnectionsBodyStrategyBitly captures enum value "bitly"
	PostConnectionsBodyStrategyBitly string = "bitly"

	// PostConnectionsBodyStrategyBox captures enum value "box"
	PostConnectionsBodyStrategyBox string = "box"

	// PostConnectionsBodyStrategyCustom captures enum value "custom"
	PostConnectionsBodyStrategyCustom string = "custom"

	// PostConnectionsBodyStrategyDaccount captures enum value "daccount"
	PostConnectionsBodyStrategyDaccount string = "daccount"

	// PostConnectionsBodyStrategyDwolla captures enum value "dwolla"
	PostConnectionsBodyStrategyDwolla string = "dwolla"

	// PostConnectionsBodyStrategyEmail captures enum value "email"
	PostConnectionsBodyStrategyEmail string = "email"

	// PostConnectionsBodyStrategyEvernoteSandbox captures enum value "evernote-sandbox"
	PostConnectionsBodyStrategyEvernoteSandbox string = "evernote-sandbox"

	// PostConnectionsBodyStrategyEvernote captures enum value "evernote"
	PostConnectionsBodyStrategyEvernote string = "evernote"

	// PostConnectionsBodyStrategyExact captures enum value "exact"
	PostConnectionsBodyStrategyExact string = "exact"

	// PostConnectionsBodyStrategyFacebook captures enum value "facebook"
	PostConnectionsBodyStrategyFacebook string = "facebook"

	// PostConnectionsBodyStrategyFitbit captures enum value "fitbit"
	PostConnectionsBodyStrategyFitbit string = "fitbit"

	// PostConnectionsBodyStrategyFlickr captures enum value "flickr"
	PostConnectionsBodyStrategyFlickr string = "flickr"

	// PostConnectionsBodyStrategyGithub captures enum value "github"
	PostConnectionsBodyStrategyGithub string = "github"

	// PostConnectionsBodyStrategyGoogleApps captures enum value "google-apps"
	PostConnectionsBodyStrategyGoogleApps string = "google-apps"

	// PostConnectionsBodyStrategyGoogleOauth2 captures enum value "google-oauth2"
	PostConnectionsBodyStrategyGoogleOauth2 string = "google-oauth2"

	// PostConnectionsBodyStrategyGuardian captures enum value "guardian"
	PostConnectionsBodyStrategyGuardian string = "guardian"

	// PostConnectionsBodyStrategyInstagram captures enum value "instagram"
	PostConnectionsBodyStrategyInstagram string = "instagram"

	// PostConnectionsBodyStrategyIP captures enum value "ip"
	PostConnectionsBodyStrategyIP string = "ip"

	// PostConnectionsBodyStrategyLinkedin captures enum value "linkedin"
	PostConnectionsBodyStrategyLinkedin string = "linkedin"

	// PostConnectionsBodyStrategyMiicard captures enum value "miicard"
	PostConnectionsBodyStrategyMiicard string = "miicard"

	// PostConnectionsBodyStrategyOauth1 captures enum value "oauth1"
	PostConnectionsBodyStrategyOauth1 string = "oauth1"

	// PostConnectionsBodyStrategyOauth2 captures enum value "oauth2"
	PostConnectionsBodyStrategyOauth2 string = "oauth2"

	// PostConnectionsBodyStrategyOffice365 captures enum value "office365"
	PostConnectionsBodyStrategyOffice365 string = "office365"

	// PostConnectionsBodyStrategyPaypal captures enum value "paypal"
	PostConnectionsBodyStrategyPaypal string = "paypal"

	// PostConnectionsBodyStrategyPaypalSandbox captures enum value "paypal-sandbox"
	PostConnectionsBodyStrategyPaypalSandbox string = "paypal-sandbox"

	// PostConnectionsBodyStrategyPingfederate captures enum value "pingfederate"
	PostConnectionsBodyStrategyPingfederate string = "pingfederate"

	// PostConnectionsBodyStrategyPlanningcenter captures enum value "planningcenter"
	PostConnectionsBodyStrategyPlanningcenter string = "planningcenter"

	// PostConnectionsBodyStrategyRenren captures enum value "renren"
	PostConnectionsBodyStrategyRenren string = "renren"

	// PostConnectionsBodyStrategySalesforceCommunity captures enum value "salesforce-community"
	PostConnectionsBodyStrategySalesforceCommunity string = "salesforce-community"

	// PostConnectionsBodyStrategySalesforceSandbox captures enum value "salesforce-sandbox"
	PostConnectionsBodyStrategySalesforceSandbox string = "salesforce-sandbox"

	// PostConnectionsBodyStrategySalesforce captures enum value "salesforce"
	PostConnectionsBodyStrategySalesforce string = "salesforce"

	// PostConnectionsBodyStrategySamlp captures enum value "samlp"
	PostConnectionsBodyStrategySamlp string = "samlp"

	// PostConnectionsBodyStrategySharepoint captures enum value "sharepoint"
	PostConnectionsBodyStrategySharepoint string = "sharepoint"

	// PostConnectionsBodyStrategyShopify captures enum value "shopify"
	PostConnectionsBodyStrategyShopify string = "shopify"

	// PostConnectionsBodyStrategySms captures enum value "sms"
	PostConnectionsBodyStrategySms string = "sms"

	// PostConnectionsBodyStrategySoundcloud captures enum value "soundcloud"
	PostConnectionsBodyStrategySoundcloud string = "soundcloud"

	// PostConnectionsBodyStrategyThecitySandbox captures enum value "thecity-sandbox"
	PostConnectionsBodyStrategyThecitySandbox string = "thecity-sandbox"

	// PostConnectionsBodyStrategyThecity captures enum value "thecity"
	PostConnectionsBodyStrategyThecity string = "thecity"

	// PostConnectionsBodyStrategyThirtysevensignals captures enum value "thirtysevensignals"
	PostConnectionsBodyStrategyThirtysevensignals string = "thirtysevensignals"

	// PostConnectionsBodyStrategyTwitter captures enum value "twitter"
	PostConnectionsBodyStrategyTwitter string = "twitter"

	// PostConnectionsBodyStrategyUntappd captures enum value "untappd"
	PostConnectionsBodyStrategyUntappd string = "untappd"

	// PostConnectionsBodyStrategyVkontakte captures enum value "vkontakte"
	PostConnectionsBodyStrategyVkontakte string = "vkontakte"

	// PostConnectionsBodyStrategyWaad captures enum value "waad"
	PostConnectionsBodyStrategyWaad string = "waad"

	// PostConnectionsBodyStrategyWeibo captures enum value "weibo"
	PostConnectionsBodyStrategyWeibo string = "weibo"

	// PostConnectionsBodyStrategyWindowslive captures enum value "windowslive"
	PostConnectionsBodyStrategyWindowslive string = "windowslive"

	// PostConnectionsBodyStrategyWordpress captures enum value "wordpress"
	PostConnectionsBodyStrategyWordpress string = "wordpress"

	// PostConnectionsBodyStrategyYahoo captures enum value "yahoo"
	PostConnectionsBodyStrategyYahoo string = "yahoo"

	// PostConnectionsBodyStrategyYammer captures enum value "yammer"
	PostConnectionsBodyStrategyYammer string = "yammer"

	// PostConnectionsBodyStrategyYandex captures enum value "yandex"
	PostConnectionsBodyStrategyYandex string = "yandex"
)

// prop value enum
func (m *PostConnectionsBody) validateStrategyEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, postConnectionsBodyTypeStrategyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PostConnectionsBody) validateStrategy(formats strfmt.Registry) error {

	if err := validate.Required("strategy", "body", m.Strategy); err != nil {
		return err
	}

	// value enum
	if err := m.validateStrategyEnum("strategy", "body", *m.Strategy); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PostConnectionsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostConnectionsBody) UnmarshalBinary(b []byte) error {
	var res PostConnectionsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
