// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PutEmailTemplatesByTemplateNameResponse put email templates by template name response
// swagger:model put_email-templates_by_templateName_response
type PutEmailTemplatesByTemplateNameResponse struct {

	// The body of the template.
	// Required: true
	Body *string `json:"body"`

	// Whether or not the template is enabled.
	// Required: true
	Enabled *bool `json:"enabled"`

	// The sender of the email.
	// Required: true
	From *string `json:"from"`

	// Whether or not we include the email as part of the returnUrl in the reset_email
	IncludeEmailInRedirect bool `json:"includeEmailInRedirect,omitempty"`

	// The URL to redirect the user to after a successful action.
	ResultURL string `json:"resultUrl,omitempty"`

	// The subject of the email.
	// Required: true
	Subject *string `json:"subject"`

	// The syntax of the template body.
	// Required: true
	Syntax *string `json:"syntax"`

	// The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy)).
	// Required: true
	// Enum: [verify_email reset_email welcome_email blocked_account stolen_credentials enrollment_email mfa_oob_code change_password password_reset]
	Template *string `json:"template"`

	// The lifetime in seconds that the link within the email will be valid for.
	URLLifetimeInSeconds float64 `json:"urlLifetimeInSeconds,omitempty"`
}

// Validate validates this put email templates by template name response
func (m *PutEmailTemplatesByTemplateNameResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBody(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFrom(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubject(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSyntax(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTemplate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PutEmailTemplatesByTemplateNameResponse) validateBody(formats strfmt.Registry) error {

	if err := validate.Required("body", "body", m.Body); err != nil {
		return err
	}

	return nil
}

func (m *PutEmailTemplatesByTemplateNameResponse) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

func (m *PutEmailTemplatesByTemplateNameResponse) validateFrom(formats strfmt.Registry) error {

	if err := validate.Required("from", "body", m.From); err != nil {
		return err
	}

	return nil
}

func (m *PutEmailTemplatesByTemplateNameResponse) validateSubject(formats strfmt.Registry) error {

	if err := validate.Required("subject", "body", m.Subject); err != nil {
		return err
	}

	return nil
}

func (m *PutEmailTemplatesByTemplateNameResponse) validateSyntax(formats strfmt.Registry) error {

	if err := validate.Required("syntax", "body", m.Syntax); err != nil {
		return err
	}

	return nil
}

var putEmailTemplatesByTemplateNameResponseTypeTemplatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["verify_email","reset_email","welcome_email","blocked_account","stolen_credentials","enrollment_email","mfa_oob_code","change_password","password_reset"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putEmailTemplatesByTemplateNameResponseTypeTemplatePropEnum = append(putEmailTemplatesByTemplateNameResponseTypeTemplatePropEnum, v)
	}
}

const (

	// PutEmailTemplatesByTemplateNameResponseTemplateVerifyEmail captures enum value "verify_email"
	PutEmailTemplatesByTemplateNameResponseTemplateVerifyEmail string = "verify_email"

	// PutEmailTemplatesByTemplateNameResponseTemplateResetEmail captures enum value "reset_email"
	PutEmailTemplatesByTemplateNameResponseTemplateResetEmail string = "reset_email"

	// PutEmailTemplatesByTemplateNameResponseTemplateWelcomeEmail captures enum value "welcome_email"
	PutEmailTemplatesByTemplateNameResponseTemplateWelcomeEmail string = "welcome_email"

	// PutEmailTemplatesByTemplateNameResponseTemplateBlockedAccount captures enum value "blocked_account"
	PutEmailTemplatesByTemplateNameResponseTemplateBlockedAccount string = "blocked_account"

	// PutEmailTemplatesByTemplateNameResponseTemplateStolenCredentials captures enum value "stolen_credentials"
	PutEmailTemplatesByTemplateNameResponseTemplateStolenCredentials string = "stolen_credentials"

	// PutEmailTemplatesByTemplateNameResponseTemplateEnrollmentEmail captures enum value "enrollment_email"
	PutEmailTemplatesByTemplateNameResponseTemplateEnrollmentEmail string = "enrollment_email"

	// PutEmailTemplatesByTemplateNameResponseTemplateMfaOobCode captures enum value "mfa_oob_code"
	PutEmailTemplatesByTemplateNameResponseTemplateMfaOobCode string = "mfa_oob_code"

	// PutEmailTemplatesByTemplateNameResponseTemplateChangePassword captures enum value "change_password"
	PutEmailTemplatesByTemplateNameResponseTemplateChangePassword string = "change_password"

	// PutEmailTemplatesByTemplateNameResponseTemplatePasswordReset captures enum value "password_reset"
	PutEmailTemplatesByTemplateNameResponseTemplatePasswordReset string = "password_reset"
)

// prop value enum
func (m *PutEmailTemplatesByTemplateNameResponse) validateTemplateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putEmailTemplatesByTemplateNameResponseTypeTemplatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PutEmailTemplatesByTemplateNameResponse) validateTemplate(formats strfmt.Registry) error {

	if err := validate.Required("template", "body", m.Template); err != nil {
		return err
	}

	// value enum
	if err := m.validateTemplateEnum("template", "body", *m.Template); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PutEmailTemplatesByTemplateNameResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PutEmailTemplatesByTemplateNameResponse) UnmarshalBinary(b []byte) error {
	var res PutEmailTemplatesByTemplateNameResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
