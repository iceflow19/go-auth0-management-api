// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetConnectionsResponse get connections response
// swagger:model get_connections_response
type GetConnectionsResponse struct {

	// The connection's identifier
	ID *string `json:"id,omitempty"`

	// True if the connection is domain level
	IsDomainConnection bool `json:"is_domain_connection,omitempty"`

	// metadata
	Metadata GetConnectionsResponseMetadata `json:"metadata,omitempty"`

	// The name of the connection
	Name *string `json:"name,omitempty"`

	// options
	Options GetConnectionsResponseOptions `json:"options,omitempty"`

	// Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm
	// Max Items: 10
	Realms []string `json:"realms"`

	// The type of the connection, related to the identity provider
	Strategy *string `json:"strategy,omitempty"`
}

// Validate validates this get connections response
func (m *GetConnectionsResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRealms(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetConnectionsResponse) validateRealms(formats strfmt.Registry) error {

	if swag.IsZero(m.Realms) { // not required
		return nil
	}

	iRealmsSize := int64(len(m.Realms))

	if err := validate.MaxItems("realms", "body", iRealmsSize, 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetConnectionsResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetConnectionsResponse) UnmarshalBinary(b []byte) error {
	var res GetConnectionsResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
