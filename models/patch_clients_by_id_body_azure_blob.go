// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchClientsByIDBodyAzureBlob patch clients by id body azure blob
// swagger:model patch_clients_by_id_body_azure_blob
type PatchClientsByIDBodyAzureBlob struct {

	// Your Azure storage account name. Just enter the first segment of the storage URL: http://<strong>YOUR ACCOUNT NAME</strong>.blob.core.windows.net
	AccountName string `json:"accountName,omitempty"`

	// The entity you want to request a token for: e.g. 'my-blob'. If left blank, the computed SAS will apply to the entire storage container
	BlobName string `json:"blobName,omitempty"`

	// Indicates that the issued token has permission to delete the blob
	BlobDelete bool `json:"blob_delete,omitempty"`

	// Indicates that the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation
	BlobRead bool `json:"blob_read,omitempty"`

	// Indicates that the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account
	BlobWrite bool `json:"blob_write,omitempty"`

	// The container you want to request a token for: e.g. 'my-container'
	ContainerName string `json:"containerName,omitempty"`

	// Indicates that the issued token has permission to delete any blob in the container
	ContainerDelete bool `json:"container_delete,omitempty"`

	// Indicates that the issued token has permission to list blobs in the container
	ContainerList bool `json:"container_list,omitempty"`

	// Indicates that the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation
	ContainerRead bool `json:"container_read,omitempty"`

	// Indicates that for any blob in the container the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account
	ContainerWrite bool `json:"container_write,omitempty"`

	// Expiration in minutes for the generated token. Default: 5 minutes
	// Minimum: 0
	Expiration *int64 `json:"expiration,omitempty"`

	// The shared access policy identifier defined in your storage account resource
	SignedIdentifier string `json:"signedIdentifier,omitempty"`

	// The storage account access key associated storage account
	StorageAccessKey string `json:"storageAccessKey,omitempty"`
}

// Validate validates this patch clients by id body azure blob
func (m *PatchClientsByIDBodyAzureBlob) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExpiration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PatchClientsByIDBodyAzureBlob) validateExpiration(formats strfmt.Registry) error {

	if swag.IsZero(m.Expiration) { // not required
		return nil
	}

	if err := validate.MinimumInt("expiration", "body", int64(*m.Expiration), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PatchClientsByIDBodyAzureBlob) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchClientsByIDBodyAzureBlob) UnmarshalBinary(b []byte) error {
	var res PatchClientsByIDBodyAzureBlob
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
