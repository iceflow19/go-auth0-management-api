// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchConnectionsByIDBodyPasswordComplexityOptions Password complexity options
// swagger:model patch_connections_by_id_body_password_complexity_options
type PatchConnectionsByIDBodyPasswordComplexityOptions struct {

	// Minimum password length
	// Maximum: 128
	// Minimum: 1
	MinLength int64 `json:"min_length,omitempty"`
}

// Validate validates this patch connections by id body password complexity options
func (m *PatchConnectionsByIDBodyPasswordComplexityOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMinLength(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PatchConnectionsByIDBodyPasswordComplexityOptions) validateMinLength(formats strfmt.Registry) error {

	if swag.IsZero(m.MinLength) { // not required
		return nil
	}

	if err := validate.MinimumInt("min_length", "body", int64(m.MinLength), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("min_length", "body", int64(m.MinLength), 128, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PatchConnectionsByIDBodyPasswordComplexityOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchConnectionsByIDBodyPasswordComplexityOptions) UnmarshalBinary(b []byte) error {
	var res PatchConnectionsByIDBodyPasswordComplexityOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
