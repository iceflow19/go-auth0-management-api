{"info": {"version": "2", "title": "management.auth0.com"}, "paths": {"/api/v2/users/{id}/identities/{provider}/{user_id}": {"delete": {"description": "Unlinks an identity from the target user, and it becomes a separated user again.\n", "parameters": [{"required": true, "type": "string", "description": "The user_id of the primary user account.", "name": "id", "in": "path"}, {"enum": ["ad", "adfs", "amazon", "dropbox", "bitbucket", "aol", "auth0-adldap", "auth0-oidc", "auth0", "baidu", "bitly", "box", "custom", "daccount", "dwolla", "email", "evernote-sandbox", "evernote", "exact", "facebook", "fitbit", "flickr", "github", "google-apps", "google-oauth2", "guardian", "instagram", "ip", "linkedin", "miicard", "oauth1", "oauth2", "office365", "paypal", "paypal-sandbox", "pingfederate", "planningcenter", "renren", "salesforce-community", "salesforce-sandbox", "salesforce", "samlp", "sharepoint", "shopify", "sms", "soundcloud", "thecity-sandbox", "thecity", "thirtysevensignals", "twitter", "untappd", "vkontakte", "waad", "weibo", "windowslive", "wordpress", "yahoo", "yammer", "yandex"], "description": "The identity provider of the secondary linked account. (Ex: 'google-oauth2' in <code>google-oauth2|123456789081523216417</code>)", "required": true, "in": "path", "type": "string", "name": "provider"}, {"required": true, "type": "string", "description": "The unique identifier of the secondary linked account. (Only the id after the '|' pipe. Ex: '123456789081523216417' in <code>google-oauth2|123456789081523216417</code>)", "name": "user_id", "in": "path"}], "produces": ["application/json"], "summary": "Unlink a user identity", "security": [{"jwt": []}], "operationId": "delete_user_identity_by_user_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The identity was removed from identities array. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/delete_user_identity_by_user_id_response"}, "type": "array"}}, "403": {"description": "User to be acted on does not match subject in bearer token."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "Main identity cannot be removed."}}}}, "/api/v2/user-blocks": {"get": {"description": "This endpoint can be used to retrieve a list of blocked IP addresses for a given key.", "parameters": [{"required": true, "type": "string", "description": "Should be any of: username, phone_number, email.", "name": "identifier", "in": "query"}], "produces": ["application/json"], "summary": "Get blocks by identifier", "security": [{"jwt": []}], "operationId": "get_user-blocks", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The user was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_user-blocks_response"}}, "403": {"description": "Insufficient scope, expected any of: read:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}, "delete": {"description": "This endpoint can be used to unblock a given key that was blocked due to an excessive amount of incorrectly provided credentials.", "parameters": [{"required": true, "type": "string", "description": "Should be any of: username, phone_number, email.", "name": "identifier", "in": "query"}], "produces": ["application/json"], "summary": "Unblock by identifier", "security": [{"jwt": []}], "operationId": "delete_user-blocks", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The user was unblocked. See <strong>Response Class</strong> below for schema."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: update:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}}}, "/api/v2/guardian/enrollments/ticket": {"post": {"description": "Generate an email with a link to start the Guardian enrollment process.", "parameters": [{"schema": {"$ref": "#/definitions/post_ticket_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a Guardian enrollment ticket", "security": [{"jwt": []}], "operationId": "post_ticket", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_ticket_response"}}, "204": {"description": "Ticket created"}, "404": {"description": "The user does not exist."}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas."}}}}, "/api/v2/grants/{id": {"delete": {"responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "No response was specified"}, "403": {"description": "Insufficient scope, expected any of: delete:grants"}, "204": {"description": "The user grant no longer exists."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}}, "parameters": [{"required": true, "type": "string", "description": "The id of the grant to delete", "name": "id", "in": "path"}, {"type": "string", "description": "The user_id of the grants to delete", "name": "user_id", "in": "query"}], "produces": ["application/json"], "summary": "Delete a grant", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "delete_grants_by_id?"}}, "/api/v2/custom-domains": {"post": {"description": "Creates a new custom domain and returns it.\n\nThe custom domain will need to be verified before it starts accepting requests.\n\n<a href=\"https://auth0.com/docs/custom-domains\">Learn more about Custom Domains</a>", "parameters": [{"schema": {"$ref": "#/definitions/post_custom-domains_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Configure a new custom domain", "security": [{"jwt": []}], "operationId": "post_custom-domains", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The custom domain was created (but verification is pending). See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_custom-domains_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "The account is not allowed to perform this operation."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "You reached the maximum number of custom domains for your account."}}}, "get": {"description": "Retrieves the status of every custom domain.\n", "produces": ["application/json"], "summary": "Get custom domains configurations", "security": [{"jwt": []}], "operationId": "get_custom-domains", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The custom domains configurations were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_custom-domains_response"}, "type": "array"}}, "403": {"description": "The account is not allowed to perform this operation."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}}}}, "/api/v2/jobs/verification-email": {"post": {"description": "Send an email to the specified user that asks them to click a link to verify their email address.\n\n<a href=\"https://auth0.com/docs/email/custom#verification-email\">Learn more about Verification Emails</a> \n\nPlease note that you must have the `Status` toggle enabled for the verification email template for the email to be sent.\n", "parameters": [{"schema": {"$ref": "#/definitions/post_verification-email_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Send a \"verify email address\" email", "security": [{"jwt": []}], "operationId": "post_verification-email", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The job was created. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_verification-email_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: update:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "The connection does not exist"}}}}, "/api/v2/jobs/{id}": {"get": {"description": "Retrieves a job. Useful to check its status.", "parameters": [{"required": true, "type": "string", "description": "The id of the job", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Get a job", "security": [{"jwt": []}], "operationId": "get_jobs_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded", "multipart/form-data"], "responses": {"200": {"description": "The job was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_jobs_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The job does not exist"}, "403": {"description": "Insufficient scope, expected any of: create:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/emails/provider": {"patch": {"description": "Can be used to change details for an email provider.\n\nDepending on the type of provider, the <code>credentials</code> object requires different attributes:\n<ul><li><code>mandrill</code> requires <code>api_key</code></li><li><code>sendgrid</code> requires <code>api_key</code></li><li><code>sparkpost</code> requires <code>api_key</code></li><li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code> and <code>region</code></li><li><code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code> and <code>smtp_pass</code></li></ul>\n<a href=\"https://auth0.com/docs/email/providers\">Learn more about SMTP Email Providers</a>\n", "parameters": [{"schema": {"$ref": "#/definitions/patch_provider_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update the email provider", "security": [{"jwt": []}], "operationId": "patch_provider", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The email provider was updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/patch_provider_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "There is not a configured email provider"}, "403": {"description": "Insufficient scope, expected any of: update:email_provider"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}}, "post": {"description": "To be used to set a new email provider.\n\nDepending on the type of provider, the <code>credentials</code> object requires different attributes:\n<ul><li><code>mandrill</code> requires <code>api_key</code></li><li><code>sendgrid</code> requires <code>api_key</code></li><li><code>sparkpost</code> requires <code>api_key</code></li><li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code> and <code>region</code></li><li><code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code> and <code>smtp_pass</code></li></ul>\n<a href=\"https://auth0.com/docs/email/providers\">Learn more about SMTP Email Providers</a>\n", "parameters": [{"schema": {"$ref": "#/definitions/post_provider_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Configure the email provider", "security": [{"jwt": []}], "operationId": "post_provider", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The email provider was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/post_provider_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: create:email_provider"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "An email provider is already configured"}}}, "get": {"description": "This endpoint can be used to retrieve the name of the email provider.", "parameters": [{"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve: name, enabled, settings fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be excluded from the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}], "produces": ["application/json"], "summary": "Get the email provider", "security": [{"jwt": []}], "operationId": "get_provider", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The email provider was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_provider_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "There is not a configured email provider"}, "403": {"description": "Insufficient scope, expected any of: read:email_provider"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}, "delete": {"description": "<strong>USE WITH CAUTION</strong>", "produces": ["application/json"], "summary": "Delete the email provider", "security": [{"jwt": []}], "operationId": "delete_provider", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}}}}, "/api/v2/users/{id}/identities": {"post": {"description": "Links the account specified in the body (<strong>secondary account</strong>) to the account specified by the <code>id</code> param of the URL (<strong>primary account</strong>).<br>There are two ways of invoking the endpoint:<br><ul><li>With the authenticated primary account's JWT in the Authorization header, which has the <code>update:current_user_identities</code> scope:\n<pre>\nPOST /api/v2/users/PRIMARY_ACCOUNT_USER_ID/identities\nAuthorization: \"Bearer PRIMARY_ACCOUNT_JWT\"\n{\n  \"link_with\": \"SECONDARY_ACCOUNT_JWT\"\n}\n</pre>In this case only the <code>link_with</code> param is required in the body, containing the JWT obtained upon the secondary account's authentication.</li><li>With an API V2 generated token with <code>update:users</code> scope:\n<pre>\nPOST /api/v2/users/PRIMARY_ACCOUNT_USER_ID/identities\nAuthorization: \"Bearer YOUR_API_V2_TOKEN\"\n{\n  \"provider\": \"SECONDARY_ACCOUNT_PROVIDER\",\n  \"connection_id\": \"SECONDARY_ACCOUNT_CONNECTION_ID(OPTIONAL)\",\n  \"user_id\": \"SECONDARY_ACCOUNT_USER_ID\"\n}\n</pre>In this case you need to send <code>provider</code> and <code>user_id</code> in the body. Optionally you can also send the <code>connection_id</code> param which is suitable for identifying a particular database connection for the 'auth0' provider.</li></ul>On successful linking, the endpoint returns the new array of the primary account identities.", "parameters": [{"required": true, "type": "string", "description": "The user_id of the primary identity where you are linking the secondary account to.", "name": "id", "in": "path"}, {"schema": {"$ref": "#/definitions/post_identities_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Link a user account", "security": [{"jwt": []}], "operationId": "post_identities", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The identity was added. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"items": {"$ref": "#/definitions/post_identities_response"}, "type": "array"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "User to be acted on does not match subject in bearer token."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "JWT (link_with) must have an aud claim that matches that of the calling token's azp."}, "409": {"description": "Specified identity already exists."}}}}, "/api/v2/clients/{id}/rotate-secret": {"post": {"description": "Rotate a client secret. The generated secret is <strong>NOT</strong> base64 encoded.\n", "parameters": [{"required": true, "type": "string", "description": "The id of the client to rotate secrets", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Rotate a client secret", "security": [{"jwt": []}], "operationId": "post_rotate-secret", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The secret was rotated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/post_rotate-secret_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The client does not exist."}, "403": {"description": "Some fields cannot be updated with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}}}, "/api/v2/connections/{id}": {"patch": {"description": "<b>Note:</b> if you use the options parameter, the whole options object will be overridden, so ensure that all parameters are present\n", "parameters": [{"required": true, "type": "string", "description": "The id of the connection to retrieve", "name": "id", "in": "path"}, {"schema": {"$ref": "#/definitions/patch_connections_by_id_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update a connection", "security": [{"jwt": []}], "operationId": "patch_connections_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The connection was updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/patch_connections_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The connection does not exist"}, "403": {"description": "Insufficient scope, expected any of: update:connections"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "This database contains X users. You cannot change \"options.enabledDatabaseCustomization\" setting."}, "409": {"description": "The name/client_id tuple has already been used for another connection"}}}, "get": {"description": "Retrieves a connection by its <code>ID</code>.\n", "parameters": [{"required": true, "type": "string", "description": "The id of the connection to retrieve", "name": "id", "in": "path"}, {"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}], "produces": ["application/json"], "summary": "Get a connection", "security": [{"jwt": []}], "operationId": "get_connections_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The connection was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_connections_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The connection does not exist."}, "403": {"description": "Insufficient scope, expected any of: read:connections"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}, "delete": {"description": "Deletes a connection and all its users.\n", "parameters": [{"required": true, "type": "string", "description": "The id of the connection to delete", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete a connection", "security": [{"jwt": []}], "operationId": "delete_connections_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The connection no longer exists."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: delete:connections"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/users/{id}": {"patch": {"description": "Updates a user with the object's properties received in the request's body (the object should be a JSON object).<br/>These are the attributes that can be updated at the root level:<ul><li>blocked</li><li>email_verified</li><li>email</li><li>verify_email</li><li>password</li><li>phone_number</li><li>phone_verified</li><li>user_metadata</li><li>app_metadata</li><li>username</li></ul>Some considerations:<ul><li>The properties of the new object will replace the old ones.</li><li>The metadata fields are an exception to this rule (<code>user_metadata</code> and <code>app_metadata</code>). These properties are merged instead of being replaced but be careful, the merge only occurs on the first level.</li><li>If you are updating <code>email_verified</code>, <code>phone_verified</code>, <code>username</code> or <code>password</code> you need to specify the <code>connection</code> property too.</li><li>If your are updating <code>email</code> or <code>phone_number</code> you need to specify the <code>connection</code> and the <code>client_id</code> properties.</li><li>Updating the <code>blocked</code> to <code>false</code> does not affect the user's blocked state from an excessive amount of incorrectly provided credentials. Use the \"Unblock a user\" endpoint from the \"User Blocks\" API for that.</li></ul><h5>Updating a field (non-metadata property)</h5>To mark the email address of a user as verified, the body to send should be:<pre><code>{ \"email_verified\": true }</code></pre><h5>Updating a user metadata root property</h5>Let's assume that our test user has the following <code>user_metadata</code>:<pre><code>{ \"user_metadata\" : { \"profileCode\": 1479 } }</code></pre>To add the field <code>addresses</code> the body to send should be:<pre><code>{ \"user_metadata\" : { \"addresses\": {\"work_address\": \"100 Industrial Way\"} }}</code></pre>The modified object ends up with the following <code>user_metadata</code> property:<pre><code>{\n  \"user_metadata\": {\n    \"profileCode\": 1479,\n    \"addresses\": { \"work_address\": \"100 Industrial Way\" }\n  }\n}</code></pre><h5>Updating an inner user metadata property</h5>Starting from previous user metadata, if we want to add the field <code>\"home_address\": \"742 Evergreen Terrace\"</code> in <code>addresses</code> we should send the whole addresses object (since this object is on the first level, it will be merged in, but it's own properties won't). The body to send should be:\n<pre><code>{\n  \"user_metadata\": {\n    \"addresses\": {\n      \"work_address\": \"100 Industrial Way\",\n      \"home_address\": \"742 Evergreen Terrace\"\n    }\n  }\n}</code></pre>The modified object ends up with the following <code>user_metadata</code> property:<pre><code>{\n  \"user_metadata\": {\n    \"profileCode\": 1479,\n    \"addresses\": {\n      \"work_address\": \"100 Industrial Way\",\n      \"home_address\": \"742 Evergreen Terrace\"\n    }\n  }\n}</code></pre>\n", "parameters": [{"required": true, "type": "string", "description": "The user_id of the user to update.", "name": "id", "in": "path"}, {"schema": {"$ref": "#/definitions/patch_users_by_id_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update a user", "security": [{"jwt": []}], "operationId": "patch_users_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The user was updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/patch_users_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The user does not exist."}, "403": {"description": "Insufficient scope, expected any of: update:users,update:users_app_metadata,update:current_user_metadata"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "The verify_email and email_verified parameters can't be true at same time"}}}, "get": {"description": "This endpoint can be used to retrieve user details given the <code>user_id</code>.", "parameters": [{"required": true, "type": "string", "description": "The user_id of the user to retrieve", "name": "id", "in": "path"}, {"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise. Defaults to <code>true</code>", "name": "include_fields", "in": "query"}], "produces": ["application/json"], "summary": "Get a user", "security": [{"jwt": []}], "operationId": "get_users_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The user was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_users_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The user does not exist."}, "403": {"description": "Insufficient scope, expected any of: read:users,read:current_user"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}, "delete": {"description": "This endpoint can be used to delete a single user based on the <code>id</code>.", "parameters": [{"required": true, "type": "string", "description": "The user_id of the user to delete", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete a user", "security": [{"jwt": []}], "operationId": "delete_users_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The user no longer exists."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: delete:users,delete:current_user"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/email-templates": {"post": {"responses": {"200": {"description": "The template was created. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/post_email-templates_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected: create:email_templates."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "Template (templateName) already exists."}}, "parameters": [{"schema": {"$ref": "#/definitions/post_email-templates_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create an email template", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "post_email-templates"}}, "/api/v2/clients": {"post": {"description": "Creates a new client application. The samples on the right show most attributes that can be used. \n\nWe recommend to let us to generate a safe secret for you, but you can also provide your own with the <code>client_secret</code> parameter\n", "parameters": [{"schema": {"$ref": "#/definitions/post_clients_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a client", "security": [{"jwt": []}], "operationId": "post_clients", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The client was created. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_clients_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: create:clients"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "There is another client with the same alias."}}}, "get": {"description": "Retrieves a list of all client applications. Accepts a list of fields to include or exclude.\n\n<strong>Important:</strong> The <code>client_secret</code> and <code>encryption_key</code> attributes can only be retrieved with the <code>read:client_keys</code> scope.\n", "parameters": [{"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}, {"minimum": 0, "type": "integer", "description": "The page number. Zero based.", "name": "page", "in": "query"}, {"name": "per_page", "maximum": 100, "minimum": 0, "in": "query", "type": "integer", "description": "The amount of entries per page. Default: <code>50</code>. Max value: <code>100</code>. If not present, pagination will be disabled"}, {"type": "boolean", "description": "true if a query summary must be included in the result", "name": "include_totals", "in": "query"}, {"type": "boolean", "description": "Optionally filter on the global client parameter", "name": "is_global", "in": "query"}, {"type": "boolean", "description": "Filter on whether or not a client is a first party client", "name": "is_first_party", "in": "query"}, {"type": "string", "description": "A comma separated list of application types used to filter the returned clients (native, spa, regular_web, non_interactive, rms, box, cloudbees, concur, dropbox, mscrm, echosign, egnyte, newrelic, office365, salesforce, sentry, sharepoint, slack, springcm, zendesk, zoom)", "name": "app_type", "in": "query"}], "produces": ["application/json"], "summary": "Get all clients", "security": [{"jwt": []}], "operationId": "get_clients", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The clients were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_clients_response"}, "type": "array"}}, "403": {"description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/users/{id}/multifactor/{provider}": {"delete": {"description": "This endpoint can be used to delete the multifactor provider settings for a particular user. This will force user to re-configure the multifactor provider.\n\n<a href=\"https://auth0.com/docs/multifactor-authentication\">Click here to learn more about Multifactor Authentication</a>\n\n", "parameters": [{"required": true, "type": "string", "description": "The user_id of the user to delete", "name": "id", "in": "path"}, {"enum": ["duo", "google-authenticator"], "description": "The multifactor provider. Supported values 'duo' or 'google-authenticator'", "required": true, "in": "path", "type": "string", "name": "provider"}], "produces": ["application/json"], "summary": "Delete a user's multifactor provider", "security": [{"jwt": []}], "operationId": "delete_multifactor_by_provider", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The multifactor provider no longer exists for the user."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The user does not exist."}, "403": {"description": "Insufficient scope, expected any of: update:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/rules-configs": {"get": {"description": "Returns only rules config variable keys.  For security, config variable values cannot be retrieved outside rule execution", "produces": ["application/json"], "summary": "Lists the config variable keys for rules", "security": [{"jwt": []}], "operationId": "get_rules-configs", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The rules configs keys were retrieved.", "schema": {"items": {"$ref": "#/definitions/get_rules-configs_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:rules_configs"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}}}}, "/api/v2/tickets/password-change": {"post": {"description": "This endpoint can be used to create a password change ticket for a user.\n\nLearn more about different ways to <a href=\"https://auth0.com/docs/connections/database/password-change\">Change a User's Password.</a> ", "parameters": [{"schema": {"$ref": "#/definitions/post_password-change_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a password change ticket", "security": [{"jwt": []}], "operationId": "post_password-change", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The ticket was created."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_password-change_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The user does not exist"}, "403": {"description": "Insufficient scope, expected any of: create:user_tickets"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "The connection with id {connection_id} does not exist"}}}}, "/api/v2/users/{id}/enrollments": {"get": {"description": "Retrieves all Guardian enrollments.\n\n<a href=\"https://auth0.com/docs/multifactor-authentication/guardian\">Click here to learn more about Guardian</a>", "parameters": [{"required": true, "type": "string", "description": "The user_id of the user to retrieve", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Get a list of Guardian enrollments", "security": [{"jwt": []}], "operationId": "get_enrollments", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The enrollments for user was retrieved.", "schema": {"items": {"$ref": "#/definitions/get_enrollments_response"}, "type": "array"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The user does not exist."}, "403": {"description": "Insufficient scope, expected any of: read:users,read:current_user"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/device-credentials": {"post": {"description": "Manage the devices that are recognized and authenticated. You can use the device-credentials endpoint using Basic authentication with username and password from a database connection<br />The Authorization header should be <code>Authorization: Basic base64(\"{db_conn_name}\\{user}:{password}\")</code>\n\nPlease note that Device Credentials endpoints are designed for ad hoc administrative use only.", "parameters": [{"schema": {"$ref": "#/definitions/post_device-credentials_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a device public key", "security": [{"jwt": []}], "operationId": "post_device-credentials", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The credential was created. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_device-credentials_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: create:current_user_device_credentials"}, "401": {"description": "Bad username or password."}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "A public key already exists for the device"}}}, "get": {"description": "Manage the devices that are recognized and authenticated. You can use the device-credentials endpoint using Basic authentication with username and password from a database connection<br />The Authorization header should be <code>Authorization: Basic base64(\"{db_conn_name}\\{user}:{password}\")</code>\n\nPlease note that Device Credentials endpoints are designed for ad hoc administrative use only.", "parameters": [{"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be excluded from the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}, {"type": "string", "description": "The user_id of the devices to retrieve", "name": "user_id", "in": "query"}, {"type": "string", "description": "The client_id of the devices to retrieve", "name": "client_id", "in": "query"}, {"enum": ["public_key", "refresh_token"], "type": "string", "description": "The type of credentials", "name": "type", "in": "query"}], "produces": ["application/json"], "summary": "List device credentials", "security": [{"jwt": []}], "operationId": "get_device-credentials", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The devices were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_device-credentials_response"}, "type": "array"}}, "403": {"description": "Must provide client_id parameter"}, "401": {"description": "Bad username or password."}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/resource-servers/{id}": {"patch": {"responses": {"201": {"description": "The resource server was updated."}, "200": {"description": "No response was specified"}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: update:resource_servers"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "System resource servers cannot be patched."}, "409": {"description": "A resource server with the same identifier already exists."}}, "parameters": [{"required": true, "type": "string", "description": "The id or audience of the resource server to update", "name": "id", "in": "path"}, {"schema": {"$ref": "#/definitions/patch_resource-servers_by_id_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update a resource server", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "patch_resource-servers_by_id"}, "get": {"responses": {"200": {"description": "The resource server was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_resource-servers_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The resource server does not exist."}, "403": {"description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}, "parameters": [{"required": true, "type": "string", "description": "The id or audience of the resource server to retrieve", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Get a resource server by its id or audience", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "get_resource-servers_by_id"}, "delete": {"responses": {"200": {"description": "No response was specified"}, "204": {"description": "The resource server no longer exists."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: delete:resource_servers"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "System resource servers cannot be deleted."}}, "parameters": [{"required": true, "type": "string", "description": "The id or the audience of the resource server to delete", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete a resource server", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "delete_resource-servers_by_id"}}, "/api/v2/rules/{id}": {"patch": {"description": "Use this endpoint to update an existing rule.\n\n<a href=\"https://auth0.com/docs/rules\">Learn more about rules</a>", "parameters": [{"required": true, "type": "string", "description": "The id of the rule to retrieve", "name": "id", "in": "path"}, {"schema": {"$ref": "#/definitions/patch_rules_by_id_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update a rule", "security": [{"jwt": []}], "operationId": "patch_rules_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The rule was updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/patch_rules_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The rule does not exist."}, "403": {"description": "Insufficient scope, expected any of: update:rules"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "A rule with the same name already exists"}}}, "get": {"description": "Retrieves a rule by its ID. Accepts a list of fields to include or exclude in the result.\n\n<a href=\"https://auth0.com/docs/rules\">Learn more about rules</a>", "parameters": [{"required": true, "type": "string", "description": "The id of the rule to retrieve", "name": "id", "in": "path"}, {"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}], "produces": ["application/json"], "summary": "Get a rule", "security": [{"jwt": []}], "operationId": "get_rules_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The rule was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_rules_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The rule does not exist."}, "403": {"description": "Insufficient scope, expected any of: read:rules"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}, "delete": {"description": "To be used to delete a rule.\n\n<a href=\"https://auth0.com/docs/rules\">Learn more about rules</a>", "parameters": [{"required": true, "type": "string", "description": "The id of the rule to delete", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete a rule", "security": [{"jwt": []}], "operationId": "delete_rules_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The rule no longer exists."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: delete:rules"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/blacklists/tokens": {"post": {"description": "Adds the token identified by the <code>jti</code> to a blacklist for the tenant.\n\nThe <a href=\"https://auth0.com/docs/jwt\">JWT spec</a> provides the <code>jti</code> field as a way to prevent replay attacks. Though Auth0 tokens do not currently return a <code>jti</code>, you can blacklist a <code>jti</code> to prevent a token being used more than X times. In this way you are kind of implementing a nonce (think of the token's signature as the nonce). If a token gets stolen, it should be blacklisted (or the nth token that has been issued after it) and wait for it to expire.", "parameters": [{"schema": {"$ref": "#/definitions/post_tokens_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Blacklist a token", "security": [{"jwt": []}], "operationId": "post_tokens", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The token was blacklisted."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "You cannot blacklist tokens for the specified audience. You must own the client."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}}, "get": {"description": "Retrieves the <code>jti</code> and <code>aud</code> of all tokens that are blacklisted.\n\nThe <a href=\"https://auth0.com/docs/jwt\">JWT spec</a> provides the <code>jti</code> field as a way to prevent replay attacks. Though Auth0 tokens do not currently return a <code>jti</code>, you can blacklist a <code>jti</code> to prevent a token being used more than X times. In this way you are kind of implementing a nonce (think of the token's signature as the nonce). If a token gets stolen, it should be blacklisted (or the nth token that has been issued after it) and wait for it to expire.\n\n", "parameters": [{"type": "string", "description": "The JWT's aud claim. The client_id of the client for which it was issued", "name": "aud", "in": "query"}], "produces": ["application/json"], "summary": "Get all blacklisted tokens", "security": [{"jwt": []}], "operationId": "get_tokens", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The tokens were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_tokens_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: blacklist:tokens"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/stats/active-users": {"get": {"description": "The amount of active users", "produces": ["application/json"], "summary": "Get active users count", "security": [{"jwt": []}], "operationId": "get_active-users", "consumes": [], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The amount of active users was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"default": 100, "type": "number"}}, "403": {"description": "Insufficient scope, expected any of: read:stats"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}}}}, "/api/v2/guardian/factors/{name}": {"put": {"description": "Useful to enable / disable factor.", "parameters": [{"required": true, "enum": ["push-notification", "sms", "email", "duo", "otp"], "type": "string", "name": "name", "in": "path"}, {"schema": {"$ref": "#/definitions/put_factors_by_name_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update Guardian Factor", "security": [{"jwt": []}], "operationId": "put_factors_by_name", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "Factor was updated", "schema": {"$ref": "#/definitions/put_factors_by_name_response"}}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas."}}}}, "/api/v2/grants": {"get": {"description": "Manage the <a href=\"https://auth0.com/docs/api-auth/which-oauth-flow-to-use\">grants</a> associated with your account. \n", "parameters": [{"name": "per_page", "maximum": 100, "minimum": 1, "in": "query", "type": "integer", "description": "The amount of entries per page. Default: no paging is used, all grants are returned"}, {"minimum": 0, "type": "integer", "description": "The page number. Zero based", "name": "page", "in": "query"}, {"type": "boolean", "description": "true if a query summary must be included in the result, false otherwise. Default <code>false</code>.", "name": "include_totals", "in": "query"}, {"type": "string", "description": "The user_id of the grants to retrieve", "name": "user_id", "in": "query"}, {"type": "string", "description": "The client_id of the grants to retrieve", "name": "client_id", "in": "query"}, {"type": "string", "description": "The audience of the grants to retrieve", "name": "audience", "in": "query"}], "produces": ["application/json"], "summary": "Get grants", "security": [{"jwt": []}], "operationId": "get_grants", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The grants were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_grants_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:grants"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}}}}, "/api/v2/users/{id}/recovery-code-regeneration": {"post": {"description": "This endpoint removes the current Guardian recovery code then generates and returns a new one.\n\n<a href=\"https://auth0.com/docs/multifactor-authentication/guardian\">Click here to learn more about Guardian</a>", "parameters": [{"required": true, "type": "string", "description": "The user_id of the user which guardian code will be regenerated", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Generate new Guardian recovery code", "security": [{"jwt": []}], "operationId": "post_recovery-code-regeneration", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "New recovery code.", "schema": {"$ref": "#/definitions/post_recovery-code-regeneration_response"}}, "404": {"description": "Enrollment not found"}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas."}}}}, "/api/v2/guardian/enrollments/{id}": {"get": {"description": "Retrieves an enrollment. Useful to check its type and related metadata. Note that phone number data is partially obfuscated.", "parameters": [{"required": true, "type": "string", "description": "The id of the enrollment that is going to be updated", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Get a Guardian enrollment", "security": [{"jwt": []}], "operationId": "get_enrollments_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "Succeed.", "schema": {"$ref": "#/definitions/get_enrollments_by_id_response"}}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas."}}}, "delete": {"description": "Deletes an enrollment. Useful when you want to force the user to re-enroll with Guardian.", "parameters": [{"required": true, "type": "string", "description": "The id of the enrollment that is going to be updated", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete a Guardian enrollment", "security": [{"jwt": []}], "operationId": "delete_enrollments_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "403": {"description": "Insufficient scope (expected delete:enrollment)"}, "204": {"description": "The enrollment no longer exist."}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas."}}}}, "/api/v2/user-blocks/{id}": {"get": {"description": "This endpoint can be used to retrieve a list of blocked IP addresses of a particular user given a <code>user_id</code>.", "parameters": [{"required": true, "type": "string", "description": "The user_id of the user to retrieve", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Get a user's blocks", "security": [{"jwt": []}], "operationId": "get_user-blocks_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The user was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_user-blocks_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The user does not exist."}, "403": {"description": "Insufficient scope, expected any of: read:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}, "delete": {"description": "This endpoint can be used to unblock a user that was blocked due to an excessive amount of incorrectly provided credentials.\n\nThis endpoint does not unblock users that were blocked by admins. <a href=\"https://auth0.com/docs/user-profile#block-and-unblock-a-user\">Click here</a> for more information on how to unblock a user that was blocked by an admin.", "parameters": [{"required": true, "type": "string", "description": "The user_id of the user to update.", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Unblock a user", "security": [{"jwt": []}], "operationId": "delete_user-blocks_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The user was unblocked. See <strong>Response Class</strong> below for schema."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The user does not exist."}, "403": {"description": "Insufficient scope, expected any of: update:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}}}, "/api/v2/jobs/users-exports": {"post": {"description": "Export all users to a file using a long running job.", "parameters": [{"schema": {"$ref": "#/definitions/post_users-exports_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create job to export users.", "security": [{"jwt": []}], "operationId": "post_users-exports", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The job was created. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_users-exports_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: read:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "The connection does not exist"}}}}, "/api/v2/resource-servers": {"post": {"responses": {"201": {"description": "The resource server was created."}, "200": {"description": "No response was specified"}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: create:resource_servers"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "The selected identifier is reserved."}, "409": {"description": "A resource server with the same identifier already exists."}}, "parameters": [{"schema": {"$ref": "#/definitions/post_resource-servers_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a resource server", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "post_resource-servers"}, "get": {"description": "Manage your Resource Servers. These host protected resources that you can access by interfacing with its <a href=\"https://auth0.com/docs/apis\">APIs</a>.\n", "parameters": [{"minimum": 0, "type": "integer", "description": "The page number. Zero based.", "name": "page", "in": "query"}, {"name": "per_page", "maximum": 100, "minimum": 1, "in": "query", "type": "integer", "description": "The amount of entries per page. Default: <code>50</code>. Max value: <code>100</code>. If not present, pagination will be disabled"}, {"type": "boolean", "description": "true if a query summary must be included in the result, false otherwise. Default <code>false</code>.", "name": "include_totals", "in": "query"}], "produces": ["application/json"], "summary": "Get all resource servers", "security": [{"jwt": []}], "operationId": "get_resource-servers", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The resource servers were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_resource-servers_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:resource_servers"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/device-credentials/{id}": {"delete": {"description": "Manage the devices that are recognized and authenticated. You can use the device-credentials endpoint using Basic authentication with username and password from a database connection<br />The Authorization header should be <code>Authorization: Basic base64(\"{db_conn_name}\\{user}:{password}\")</code>\n\nPlease note that Device Credentials endpoints are designed for ad hoc administrative use only.", "parameters": [{"required": true, "type": "string", "description": "The id of the credential to delete", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete a device credential", "security": [{"jwt": []}], "operationId": "delete_device-credentials_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The credential no longer exists"}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: delete:device_credentials,update:current_user, delete:current_user_device_credentials"}, "401": {"description": "Bad username or password."}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/client-grants/{id}": {"patch": {"responses": {"200": {"description": "The client grant was updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/patch_client-grants_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The client grant does not exist."}, "403": {"description": "Insufficient scope, expected any of: update:client_grants"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}, "parameters": [{"required": true, "type": "string", "description": "The id of the client grant to modify", "name": "id", "in": "path"}, {"schema": {"$ref": "#/definitions/patch_client-grants_by_id_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update a client grant", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "patch_client-grants_by_id"}, "delete": {"responses": {"200": {"description": "No response was specified"}, "204": {"description": "The client grant no longer exists."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: delete:client_grants"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}, "parameters": [{"required": true, "type": "string", "description": "The id of the client grant to delete", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete a client grant", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "delete_client-grants_by_id"}}, "/api/v2/users-by-email": {"get": {"description": "The email address associated with a user is saved in lower case, regardless of how you initially provided it. For example, if you register a user as <b>JohnSmith@example.com</b>, Auth0 saves the user's email as <b>johnsmith@example.com</b>.\n\nWhen using this endpoint, make sure that you are searching for users via email addresses in lowercase only.", "parameters": [{"required": false, "type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"required": false, "type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise. Defaults to <code>true</code>", "name": "include_fields", "in": "query"}, {"required": true, "type": "string", "name": "email", "in": "query"}], "produces": ["application/json"], "summary": "Search users by email", "security": [{"jwt": []}], "operationId": "get_users-by-email", "consumes": [], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The users were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_users-by-email_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/rules-configs/{key}": {"put": {"description": "Rules config keys must be of the format <code>^[A-Za-z0-9_\\-@*+:]*$</code>.", "parameters": [{"required": true, "type": "string", "description": "The key of the rules config to set (Max length: <code>127</code>)", "name": "key", "in": "path"}, {"schema": {"$ref": "#/definitions/put_rules-configs_by_key_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Sets the rules config for a given key", "security": [{"jwt": []}], "operationId": "put_rules-configs_by_key", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The rules config was set.", "schema": {"$ref": "#/definitions/put_rules-configs_by_key_response"}}, "403": {"description": "Insufficient scope, expected any of: update:rules_configs"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}}}, "delete": {"description": "Config keys must be of the format <code>^[A-Za-z0-9_\\-@*+:]*$</code>", "parameters": [{"required": true, "type": "string", "description": "The key of the rules config to remove (Max length: <code>127</code>)", "name": "key", "in": "path"}], "produces": ["application/json"], "summary": "Removes the rules config for a given key", "security": [{"jwt": []}], "operationId": "delete_rules-configs_by_key", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "No response was specified"}, "403": {"description": "Insufficient scope, expected any of: update:rules_configs"}, "204": {"description": "The rules config was removed."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}}}}, "/api/v2/email-templates/{templateName}": {"put": {"responses": {"200": {"description": "The template was updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/put_email-templates_by_templateName_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The template does not exist and cannot be updated."}, "403": {"description": "Insufficient scope, expected: update:email_templates."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}, "parameters": [{"enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy)).", "required": true, "in": "path", "type": "string", "name": "templateName"}, {"schema": {"$ref": "#/definitions/put_email-templates_by_templateName_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update an email template", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "put_email-templates_by_templateName"}, "patch": {"responses": {"200": {"description": "The template was updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/patch_email-templates_by_templateName_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The template does not exist and cannot be updated."}, "403": {"description": "Insufficient scope, expected: update:email_templates."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}, "parameters": [{"enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy)).", "required": true, "in": "path", "type": "string", "name": "templateName"}, {"schema": {"$ref": "#/definitions/patch_email-templates_by_templateName_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Patch an email template", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "patch_email-templates_by_templateName"}, "get": {"responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The template was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_email-templates_by_templateName_response"}}, "403": {"description": "Insufficient scope, expected: read:email_templates."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}, "parameters": [{"enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy)).", "required": true, "in": "path", "type": "string", "name": "templateName"}], "produces": ["application/json"], "summary": "Get an email template", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "get_email-templates_by_templateName"}}, "/api/v2/rules": {"post": {"description": "Creates a new rule according to the JSON object received in <code>body</code>\n\nThe samples on the right show you every attribute that could be used. Mandatory attributes are <code>name</code> and <code>script</code>\n\n<a href=\"https://auth0.com/docs/rules#create-a-new-rule-using-the-management-api\">Learn more about creating a rule</a>\n\nNote: Changing a rule's stage of execution from the default <code>login_success</code> can change the rule's function signature to have user omitted.", "parameters": [{"schema": {"$ref": "#/definitions/post_rules_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a rule", "security": [{"jwt": []}], "operationId": "post_rules", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The rule was created. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_rules_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: read:rules"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "A rule with the same execution stage already exists"}}}, "get": {"description": "Retrieves a list of all rules. Accepts a list of fields to include or exclude.<br/>\nThe <code>enabled</code> parameter can be specified to get enabled or disabled rules.\nThe rule's stage of executing could be set to the following values <code>login_success</code>, <code>login_failure</code> or <code>pre_authorize</code>\n\n<a href=\"https://auth0.com/docs/rules\">Learn more about rules</a>", "parameters": [{"minimum": 0, "type": "integer", "description": "The page number. Zero based.", "name": "page", "in": "query"}, {"name": "per_page", "maximum": 100, "minimum": 0, "in": "query", "type": "integer", "description": "The amount of entries per page. Default: <code>50</code>. Max value: <code>100</code>. If not present, pagination will be disabled"}, {"type": "boolean", "description": "true if a query summary must be included in the result", "name": "include_totals", "in": "query"}, {"type": "boolean", "description": "If provided retrieves rules that match the value, otherwise all rules are retrieved", "name": "enabled", "in": "query"}, {"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}], "produces": ["application/json"], "summary": "Get all rules", "security": [{"jwt": []}], "operationId": "get_rules", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The rule was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_rules_response"}, "type": "array"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The rule does not exist."}, "403": {"description": "Insufficient scope, expected any of: read:rules"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/guardian/factors": {"get": {"description": "Retrieves all factors. Useful to check factor enablement and trial status.", "produces": ["application/json"], "summary": "Get a list of factors and statuses", "security": [{"jwt": []}], "operationId": "get_factors", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "Succeed.", "schema": {"items": {"$ref": "#/definitions/get_factors_response"}, "type": "array"}}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas."}}}}, "/api/v2/logs/{id}": {"get": {"description": "Retrieves the data related to the log entry identified by id. This returns a single log entry representation as specified in the schema.", "parameters": [{"required": true, "type": "string", "description": "The log_id of the log to retrieve", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Get a log event by id", "security": [{"jwt": []}], "operationId": "get_logs_by_id", "consumes": [], "responses": {"200": {"description": "The log was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_logs_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The log does not exist."}, "403": {"description": "Insufficient scope, expected any of: read:logs"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/custom-domains/{id}/verify": {"post": {"description": "Run the verification process for the custom domain. Check the <code>status</code> field to see its verification status.\n\nOnce the verification is complete, it might take up to 10 minutes before the custom domain can start accepting requests.\n\nFor <code>self_managed_certs</code>, when the custom domain is verified for the first time, the response will also include the <code>cname_api_key</code> which you will need to configure your proxy. This key must be kept secret, and is used to validate the proxy requests.\n\n<a href=\"https://auth0.com/docs/custom-domains#step-2-verify-ownership\">Learn more</a> about verifying custom domains that use Auth0 Managed certificates.\n<a href=\"https://auth0.com/docs/custom-domains/self-managed-certificates#step-2-verify-ownership\">Learn more</a> about verifying custom domains that use Self Managed certificates.\n\n\n", "parameters": [{"required": true, "type": "string", "description": "The id of the custom domain to verify", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Verify a custom domain", "security": [{"jwt": []}], "operationId": "post_verify", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The custom domain verification failed.", "schema": {"$ref": "#/definitions/post_verify_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The custom domain does not exist."}, "403": {"description": "The account is not allowed to perform this operation."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "The specified custom domain is already verified."}}}}, "/api/v2/jobs/{id}/errors": {"get": {"description": "Use this endpoint to retrieve error details based on the id of the job. See below for possible responses.", "parameters": [{"required": true, "type": "string", "description": "The id of the job", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Get failed job error details", "security": [{"jwt": []}], "operationId": "get_errors", "consumes": ["application/json", "application/x-www-form-urlencoded", "multipart/form-data"], "responses": {"200": {"description": "The job was retrieved. See <strong>Response Class</strong> below for schema."}, "204": {"description": "The job was retrieved, but no errors were found."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The job does not exist"}, "403": {"description": "Insufficient scope, expected any of: create:users, create:passwords_checking_job"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/clients/{id}": {"patch": {"description": "<strong>Important:</strong> The <code>client_secret</code> and <code>encryption_key</code> attributes can only be updated with the <code>update:client_keys</code> scope.\n", "parameters": [{"required": true, "type": "string", "description": "The id of the client to retrieve", "name": "id", "in": "path"}, {"schema": {"$ref": "#/definitions/patch_clients_by_id_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update a client", "security": [{"jwt": []}], "operationId": "patch_clients_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The client was updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/patch_clients_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The client does not exist."}, "403": {"description": "Some fields cannot be updated with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}}, "get": {"description": "Retrieves a client by its id.\n\n<strong>Important:</strong> The <code>client_secret</code> <code>encryption_key</code> and <code>signing_keys</code> attributes can only be retrieved with the <code>read:client_keys</code> scope.\n", "parameters": [{"required": true, "type": "string", "description": "The id of the client to retrieve", "name": "id", "in": "path"}, {"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}], "produces": ["application/json"], "summary": "Get a client", "security": [{"jwt": []}], "operationId": "get_clients_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The client was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_clients_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The client does not exist."}, "403": {"description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}, "delete": {"description": "Deletes a client and all its related assets (like rules, connections, etc) given its id.", "parameters": [{"required": true, "type": "string", "description": "The id of the client to delete", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete a client", "security": [{"jwt": []}], "operationId": "delete_clients_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The client was deleted."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: delete:clients"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Global client cannot be deleted"}}}}, "/api/v2/tenants/settings": {"patch": {"description": "Use this endpoint to update various fields for a tenant. Enter the new settings in a JSON string in the body parameter.", "parameters": [{"schema": {"$ref": "#/definitions/patch_settings_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update tenant settings", "security": [{"jwt": []}], "operationId": "patch_settings", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The tenant settings were updated. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/patch_settings_response"}}, "403": {"description": "Insufficient scope, expected any of: update:tenant_settings"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}}}, "get": {"description": "Use this endpoint to retrieve various settings for a tenant.", "parameters": [{"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}], "produces": ["application/json"], "summary": "Get tenant settings", "security": [{"jwt": []}], "operationId": "get_settings", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The tenant settings were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_settings_response"}}, "403": {"description": "Insufficient scope, expected any of: read:tenant_settings"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/jobs/users-imports": {"post": {"description": "Imports users to a connection from a file using a long running job. <strong>Important:</strong> The documentation for the file format is <a href=https://docs.auth0.com/bulk-import>here</a>.", "parameters": [{"required": true, "type": "file", "description": "A file containing the users to import", "name": "users", "in": "formData"}, {"required": true, "type": "string", "description": "The connection id of the connection to which users will be inserted", "name": "connection_id", "in": "formData"}, {"required": false, "type": "boolean", "description": "Update the user if already exists", "name": "upsert", "in": "formData"}, {"required": false, "type": "string", "description": "Customer defined id", "name": "external_id", "in": "formData"}, {"required": false, "type": "boolean", "description": "if true, send the completion email to all tenant owners when the job is finished", "name": "send_completion_email", "in": "formData"}], "produces": ["application/json"], "summary": "Create job to import users.", "security": [{"jwt": []}], "operationId": "post_users-imports", "consumes": ["multipart/form-data"], "responses": {"201": {"description": "The job was created. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_users-imports_response"}}, "400": {"description": "The connection does not exist"}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: create:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "413": {"description": "Payload content length greater than maximum allowed: 512000"}}}}, "/api/v2/stats/daily": {"get": {"description": "Retrieves the number of logins that occurred in the entered date range.", "parameters": [{"type": "string", "description": "The first day of the period (inclusive) in YYYYMMDD format.", "name": "from", "in": "query"}, {"type": "string", "description": "The last day of the period (inclusive) in YYYYMMDD format.", "name": "to", "in": "query"}], "produces": ["application/json"], "summary": "Get daily stats", "security": [{"jwt": []}], "operationId": "get_daily", "consumes": [], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The stats were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_daily_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:stats"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "'from' date cannot be greater than 'to' date"}}}}, "/api/v2/custom-domains/{id}": {"get": {"description": "Retrieves a custom domain status by its <code>ID</code>.\n", "parameters": [{"required": true, "type": "string", "description": "The id of the custom domain to retrieve", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Get custom domain configuration", "security": [{"jwt": []}], "operationId": "get_custom-domains_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "The custom domain was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"$ref": "#/definitions/get_custom-domains_by_id_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The custom domain does not exist."}, "403": {"description": "The account is not allowed to perform this operation."}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}, "delete": {"description": "Deletes a custom domain by its <code>ID</code>. We will stop serving requests for this domain.\n", "parameters": [{"required": true, "type": "string", "description": "The id of the custom domain to delete", "name": "id", "in": "path"}], "produces": ["application/json"], "summary": "Delete custom domain configuration", "security": [{"jwt": []}], "operationId": "delete_custom-domains_by_id", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The custom domain configuration was deleted."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "The account is not allowed to perform this operation."}, "401": {"description": "Invalid signature received for JSON Web Token validation."}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/tickets/email-verification": {"post": {"description": "This endpoint can be used to create a ticket to verify a user's email.\n\nLearn more about <a href=\"https://auth0.com/docs/email/custom#verification-email\">Verification Emails.</a> ", "parameters": [{"schema": {"$ref": "#/definitions/post_email-verification_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create an email verification ticket", "security": [{"jwt": []}], "operationId": "post_email-verification", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The ticket was created."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_email-verification_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The user does not exist"}, "403": {"description": "Insufficient scope, expected any of: create:user_tickets"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "The connection with id {connection_id} does not exist"}}}}, "/api/v2/jobs/{job_id}/results": {"get": {"responses": {"200": {"description": "The job results were retrieved.", "schema": {"$ref": "#/definitions/get_results_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "The job results do not exist"}, "403": {"description": "Insufficient scope, expected any of: create:passwords_checking_job"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}, "parameters": [{"required": true, "type": "string", "description": "The id of the job", "name": "job_id", "in": "path"}], "produces": ["application/json"], "summary": "Gets results of a job", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded", "multipart/form-data"], "operationId": "get_results"}}, "/api/v2/guardian/factors/push-notification/providers/sns": {"get": {"description": "Returns provider configuration for AWS SNS.\n\nLearn more about <a href=\"https://auth0.com/docs/multifactor-authentication/developer/sns-configuration\">Configuring Amazon SNS.</a> ", "produces": ["application/json"], "summary": "Get Guardian SNS factor provider configuration", "security": [{"jwt": []}], "operationId": "get_sns", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "Returns AWS SNS configuration data", "schema": {"$ref": "#/definitions/get_sns_response"}}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas"}}}}, "/api/v2/guardian/factors/sms/templates": {"put": {"description": "Useful to send custom messages on SMS enrollment and verification.", "parameters": [{"schema": {"$ref": "#/definitions/put_templates_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update enrollment and verification SMS templates", "security": [{"jwt": []}], "operationId": "put_templates", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "SMS templates was updated", "schema": {"$ref": "#/definitions/put_templates_response"}}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas."}}}, "get": {"description": "Retrieves enrollment and verification templates. You can use this to check the current values for your templates.", "produces": ["application/json"], "summary": "Get enrollment and verification templates", "security": [{"jwt": []}], "operationId": "get_templates", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "Succeed.", "schema": {"$ref": "#/definitions/get_templates_response"}}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas."}}}}, "/api/v2/connections": {"post": {"description": "Creates a new connection according to the JSON object received in <code>body</code>.<br/> The samples on the right show all available attributes. Mandatory attributes are <code>name</code> and <code>strategy</code>.<br/> Valid Strategy names are: <code>ad</code>, <code>adfs</code>, <code>amazon</code>, <code>dropbox</code>, <code>bitbucket</code>, <code>aol</code>, <code>auth0-adldap</code>, <code>auth0-oidc</code>, <code>auth0</code>, <code>baidu</code>, <code>bitly</code>, <code>box</code>, <code>custom</code>, <code>daccount</code>, <code>dwolla</code>, <code>email</code>, <code>evernote-sandbox</code>, <code>evernote</code>, <code>exact</code>, <code>facebook</code>, <code>fitbit</code>, <code>flickr</code>, <code>github</code>, <code>google-apps</code>, <code>google-oauth2</code>, <code>guardian</code>, <code>instagram</code>, <code>ip</code>, <code>linkedin</code>, <code>miicard</code>, <code>oauth1</code>, <code>oauth2</code>, <code>office365</code>, <code>paypal</code>, <code>paypal-sandbox</code>, <code>pingfederate</code>, <code>planningcenter</code>, <code>renren</code>, <code>salesforce-community</code>, <code>salesforce-sandbox</code>, <code>salesforce</code>, <code>samlp</code>, <code>sharepoint</code>, <code>shopify</code>, <code>sms</code>, <code>soundcloud</code>, <code>thecity-sandbox</code>, <code>thecity</code>, <code>thirtysevensignals</code>, <code>twitter</code>, <code>untappd</code>, <code>vkontakte</code>, <code>waad</code>, <code>weibo</code>, <code>windowslive</code>, <code>wordpress</code>, <code>yahoo</code>, <code>yammer</code>, <code>yandex</code>", "parameters": [{"schema": {"$ref": "#/definitions/post_connections_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a connection", "security": [{"jwt": []}], "operationId": "post_connections", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The connection was created. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_connections_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: create:connections"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "A connection with the same name already exists."}}}, "get": {"description": "Retrieves every connection matching the specified strategy. All connections are retrieved if no strategy is being specified. Accepts a list of fields to include or exclude in the resulting list of connection objects.\n", "parameters": [{"name": "per_page", "maximum": 100, "minimum": 1, "in": "query", "type": "integer", "description": "The amount of entries per page. Default: no paging is used, all connections are returned"}, {"minimum": 0, "type": "integer", "description": "The page number. Zero based", "name": "page", "in": "query"}, {"type": "boolean", "description": "true if a query summary must be included in the result, false otherwise. Default <code>false</code>.", "name": "include_totals", "in": "query"}, {"items": {"uniqueItems": true, "enum": ["ad", "adfs", "amazon", "dropbox", "bitbucket", "aol", "auth0-adldap", "auth0-oidc", "auth0", "baidu", "bitly", "box", "custom", "daccount", "dwolla", "email", "evernote-sandbox", "evernote", "exact", "facebook", "fitbit", "flickr", "github", "google-apps", "google-oauth2", "guardian", "instagram", "ip", "linkedin", "miicard", "oauth1", "oauth2", "office365", "paypal", "paypal-sandbox", "pingfederate", "planningcenter", "renren", "salesforce-community", "salesforce-sandbox", "salesforce", "samlp", "sharepoint", "shopify", "sms", "soundcloud", "thecity-sandbox", "thecity", "thirtysevensignals", "twitter", "untappd", "vkontakte", "waad", "weibo", "windowslive", "wordpress", "yahoo", "yammer", "yandex"], "type": "string"}, "type": "array", "description": "Provide strategies to only retrieve connections with such strategies", "name": "strategy", "in": "query"}, {"type": "string", "description": "Provide the name of the connection to retrieve", "name": "name", "in": "query"}, {"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise (defaults to <code>true</code>)", "name": "include_fields", "in": "query"}], "produces": ["application/json"], "summary": "Get all connections", "security": [{"jwt": []}], "operationId": "get_connections", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The conections were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_connections_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:connections"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request query string. The message will vary depending on the cause."}}}}, "/api/v2/users": {"post": {"description": "Creates a new user according to the JSON object received in <code>body</code>. It works <strong>only</strong> for <a href=\"https://auth0.com/docs/connections/database\">database</a> and <a href=\"https://auth0.com/docs/connections/passwordless\">passwordless</a> connections.<br/>\nThe samples on the right show you every attribute that could be used. The attribute <code>connection</code> is always mandatory but depending on the type of connection you are using there could be others too. For instance, database connections require <code>email</code> and <code>password</code>.\n", "parameters": [{"schema": {"$ref": "#/definitions/post_users_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a user", "security": [{"jwt": []}], "operationId": "post_users", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"201": {"description": "The user was created. See <strong>Response Class</strong> below for schema."}, "200": {"description": "No response was specified", "schema": {"$ref": "#/definitions/post_users_response"}}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: create:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "The connection is disabled"}, "409": {"description": "The user already exists."}}}, "get": {"description": "This endpoint can be used to retrieve a list of users. With this endpoint it is possible to:\n\n- Specify a search criteria for users\n- Sort the users to be returned\n- Select the fields to be returned\n- Specify the amount of users to retrieve per page and the page number\n <!-- both v2 and v3 are available -->\nThe <code>q</code> query parameter can be used to get users that match the specified criteria.\n\n- <a href=\"https://auth0.com/docs/users/search/v3/query-syntax\">Query string syntax for user search v3</a> (<code>search_engine=v3</code>).\n- <a href=\"https://auth0.com/docs/users/search/v2/query-syntax\">Query string syntax for user search v2</a> (<code>search_engine=v2</code>).\n\nLearn more about searching for users:\n\n- <a href=\"https://auth0.com/docs/users/search/v3\">User Search v3</a>\n- <a href=\"https://auth0.com/docs/users/search/v2\">User Search v2</a>\n- <a href=\"https://auth0.com/docs/users/search/best-practices\">User Search Best Practices</a>\n\nFor information on migrating from user search v2 to v3, see <a href=\"https://auth0.com/docs/users/search/v3#migrate-from-search-engine-v2-to-v3\">Migrate from search engine v2 to v3</a>.\n\nAuth0 limits the number of users you can return. If you exceed this threshold, please redefine your search, use the <a href=\"https://auth0.com/docs/api/management/v2#!/Jobs/post_users_exports\">export job</a>, or the <a href=\"https://auth0.com/docs/extensions/user-import-export\">User Import / Export</a> extension.", "parameters": [{"name": "per_page", "maximum": 100, "minimum": 0, "in": "query", "type": "integer", "description": "The amount of entries per page. Default: <code>50</code>. Max value: <code>100</code>"}, {"minimum": 0, "type": "integer", "description": "The page number. Zero based", "name": "page", "in": "query"}, {"type": "boolean", "description": "true if a query summary must be included in the result", "name": "include_totals", "in": "query"}, {"type": "string", "description": "The field to use for sorting. Use <code>field:order</code> where order is <code>1</code> for ascending and <code>-1</code> for descending. For example <code>created_at:1</code>", "name": "sort", "in": "query"}, {"type": "string", "description": "Connection filter. Only applies when using <code>search_engine=v1</code>. To filter by connection with <code>search_engine=v2|v3</code>, use <code>q=identities.connection:\"connection_name\"</code>", "name": "connection", "in": "query"}, {"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise. Defaults to <code>true</code>", "name": "include_fields", "in": "query"}, {"type": "string", "description": "Query in <a target='_new' href ='http://www.lucenetutorial.com/lucene-query-syntax.html'>Lucene query string syntax</a>. Not all metadata fields are searchable when using <code>search_engine=v2</code>, for details see <a href='https://auth0.com/docs/users/search/v2/query-syntax#searchable-fields'>Searchable Fields (v2)</a>. When using <code>search_engine=v3</code>, some query types cannot be used on metadata fields, for details see <a href='https://auth0.com/docs/users/search/v3/query-syntax#searchable-fields'>Searchable Fields (v3)</a>.", "name": "q", "in": "query"}, {"enum": ["v1", "v2", "v3"], "type": "string", "description": "The version of the search engine", "name": "search_engine", "in": "query"}], "produces": ["application/json"], "summary": "List or search users", "security": [{"jwt": []}], "operationId": "get_users", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The users were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_users_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:users"}, "401": {"description": "Invalid token."}, "400": {"description": "You can only page through the first 1000 records. See https://auth0.com/docs/users/search/v3#page-results"}}}}, "/api/v2/logs": {"get": {"description": "Retrieves log entries that match the specified search criteria (or list all entries if no criteria is used).<br/>You can search with a criteria using the <code>q</code> parameter or you can search by a specific log ID (search by checkpoint):<br/><br/><h5>The search by criteria can use the following parameters:</h5><ul> <li><b>q:</b> Search Criteria using <a href=\"https://auth0.com/docs/users/search/v2/query-syntax\">Query String Syntax</a></li><li><b>page:</b> The page number. Zero based</li><li><b>per_page:</b> The amount of entries per page</li><li><b>sort:</b> The field to use for sorting. Use <code>field:order</code>, where order is <code>1</code> for ascending and <code>-1</code> for descending. For example <code>date:-1</code></li><li><b>fields:</b> A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields</li><li><b>include_fields:</b> <code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise. Defaults to <code>true</code></li><li><b>include_totals:</b> <code>true</code> if a query summary must be included in the result, false otherwise. Default <code>false</code>.</li></ul><h5>The search by checkpoint use the following parameters:</h5><ul> <li><b>from:</b> Log Event Id to start retrieving logs. You can limit the amount of logs using the <code>take</code> parameter. If you use <code>from</code> at the same time as <code>q</code>, <code>from</code> takes precedence and <code>q</code> is ignored.</li><li><b>take:</b> The total amount of entries to retrieve when using the <code>from</code> parameter.</li></ul><p><strong>Important:</strong> When fetching logs by checkpoint, the order by date is not guaranteed</p>\n<h5>Event acronym mapping</h5><ul><li>s: Success Login </li><li>ssa: Success Silent Auth</li><li>fsa: Failed Silent Auth</li><li>seacft: Success Exchange (Authorization Code for Access Token)</li><li>feacft: Failed Exchange (Authorization Code for Access Token)</li><li>seccft: Success Exchange (Client Credentials for Access Token)</li><li>feccft: Failed Exchange (Client Credentials for Access Token)</li><li>sepft: Success Exchange (Password for Access Token)</li><li>fepft: Failed Exchange (Password for Access Token)</li><li>f: Failed Login </li><li>w: Warnings During Login </li><li>du: Deleted User </li><li>fu: Failed Login (invalid email/username) </li><li>fp: Failed Login (wrong password) </li><li>fc: Failed by Connector </li><li>fco: Failed by CORS </li><li>con: Connector Online </li><li>coff: Connector Offline </li><li>fcpro: Failed Connector Provisioning </li><li>ss: Success Signup </li><li>fs: Failed Signup </li><li>cs: Code Sent </li><li>cls: Code/Link Sent </li><li>sv: Success Verification Email </li><li>fv: Failed Verification Email </li><li>scp: Success Change Password </li><li>fcp: Failed Change Password </li><li>sce: Success Change Email </li><li>fce: Failed Change Email </li><li>scu: Success Change Username </li><li>fcu: Failed Change Username </li><li>scpn: Success Change Phone Number </li><li>fcpn: Failed Change Phone Number </li><li>svr: Success Verification Email Request </li><li>fvr: Failed Verification Email Request </li><li>scpr: Success Change Password Request </li><li>fcpr: Failed Change Password Request </li><li>fn: Failed Sending Notification </li><li>sapi: API Operation </li><li>fapi: Failed API Operation </li><li>limit_wc: Blocked Account </li><li>limit_mu: Blocked IP Address </li><li>limit_ui: Too Many Calls to /userinfo </li><li>api_limit: Rate Limit On API </li><li>sdu: Successful User Deletion </li><li>fdu: Failed User Deletion </li><li>slo: Success Logout</li><li>flo: Failed Logout</li><li>sd: Success Delegation</li><li>fd: Failed Delegation</li><li>fcoa: Failed Cross Origin Authentication</li><li>scoa: Success Cross Origin Authentication</li></ul>\n<h5>List of fields that can be used in fields and sort</h5><ul><li>date: The moment when the event occured.</li><li>connection: The connection related to the event.</li><li>client_id: The client id related to the event</li><li>client_name: The name of the client related to the event.</li><li>ip: The IP address from where the request that caused the log entry originated.</li><li>user_id: The user id related to the event.</li><li>user_name: The user name related to the event.</li><li>description: The description of the event.</li><li>user_agent: The user agent that is related to the event.</li><li>type: The event type. Refer to the event acronym mappings above for a list of possible event types.</li><li>details: The details object of the event.</li><li>strategy: The connection strategy related to the event.</li><li>strategy_type: The connection strategy type related to the event.</li></ul>", "parameters": [{"minimum": 0, "type": "integer", "description": "The page number. Zero based", "name": "page", "in": "query"}, {"name": "per_page", "maximum": 100, "minimum": 0, "in": "query", "type": "integer", "description": "The amount of entries per page. Default: <code>50</code>. Max value: <code>100</code>"}, {"type": "string", "description": "The field to use for sorting. Use <code>field:order</code> where order is <code>1</code> for ascending and <code>-1</code> for descending. For example <code>date:-1</code>", "name": "sort", "in": "query"}, {"type": "string", "description": "A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields", "name": "fields", "in": "query"}, {"type": "boolean", "description": "<code>true</code> if the fields specified are to be included in the result, <code>false</code> otherwise. Defaults to <code>true</code>", "name": "include_fields", "in": "query"}, {"type": "boolean", "description": "true if a query summary must be included in the result, false otherwise. Default <code>false</code>.", "name": "include_totals", "in": "query"}, {"type": "string", "description": "Log Event Id to start retrieving logs. You can limit the amount of logs using the <code>take</code> parameter.", "name": "from", "in": "query"}, {"name": "take", "type": "integer", "description": "The total amount of entries to retrieve when using the <code>from</code> parameter. Default: <code>50</code>. Max value: <code>100</code>", "maximum": 100, "in": "query"}, {"type": "string", "description": "Query in <a target='_new' href ='http://www.lucenetutorial.com/lucene-query-syntax.html'>Lucene query string syntax</a>.", "name": "q", "in": "query"}], "produces": ["application/json"], "summary": "Search log events", "security": [{"jwt": []}], "operationId": "get_logs", "consumes": [], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The log was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_logs_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:logs"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/guardian/factors/sms/providers/twilio": {"put": {"description": "Useful to configure SMS provider.\n\nLearn more about <a href=\"https://auth0.com/docs/multifactor-authentication/administrator/twilio-configuration\">Configuring Twilio for Guardian.</a> ", "parameters": [{"schema": {"$ref": "#/definitions/put_twilio_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Update Guardian's Twilio SMS factor provider", "security": [{"jwt": []}], "operationId": "put_twilio", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "Twilio configuration updated", "schema": {"$ref": "#/definitions/put_twilio_response"}}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas"}}}, "get": {"description": "Returns provider configuration.\n\nLearn more about <a href=\"https://auth0.com/docs/multifactor-authentication/administrator/twilio-configuration\">Configuring Twilio for Guardian.</a> ", "produces": ["application/json"], "summary": "Get Guardian Twilio factor provider configuration", "security": [{"jwt": []}], "operationId": "get_twilio", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "Returns Twilio configuration data", "schema": {"$ref": "#/definitions/get_twilio_response"}}, "403": {"description": "Insufficient scope"}, "401": {"description": "Token has expired or signature is invalid"}, "400": {"description": "Invalid input based on schemas"}}}}, "/api/v2/users/{user_id}/logs": {"get": {"description": "Retrieve every log event for a specific user id<br/><h5>Event acronym mapping</h5><ul><li>s: Success Login </li><li>ssa: Success Silent Auth</li><li>fsa: Failed Silent Auth</li><li>seacft: Success Exchange (Authorization Code for Access Token)</li><li>feacft: Failed Exchange (Authorization Code for Access Token)</li><li>seccft: Success Exchange (Client Credentials for Access Token)</li><li>feccft: Failed Exchange (Client Credentials for Access Token)</li><li>sepft: Success Exchange (Password for Access Token)</li><li>fepft: Failed Exchange (Password for Access Token)</li><li>f: Failed Login </li><li>w: Warnings During Login </li><li>du: Deleted User </li><li>fu: Failed Login (invalid email/username) </li><li>fp: Failed Login (wrong password) </li><li>fc: Failed by Connector </li><li>fco: Failed by CORS </li><li>con: Connector Online </li><li>coff: Connector Offline </li><li>fcpro: Failed Connector Provisioning </li><li>ss: Success Signup </li><li>fs: Failed Signup </li><li>cs: Code Sent </li><li>cls: Code/Link Sent </li><li>sv: Success Verification Email </li><li>fv: Failed Verification Email </li><li>scp: Success Change Password </li><li>fcp: Failed Change Password </li><li>sce: Success Change Email </li><li>fce: Failed Change Email </li><li>scu: Success Change Username </li><li>fcu: Failed Change Username </li><li>scpn: Success Change Phone Number </li><li>fcpn: Failed Change Phone Number </li><li>svr: Success Verification Email Request </li><li>fvr: Failed Verification Email Request </li><li>scpr: Success Change Password Request </li><li>fcpr: Failed Change Password Request </li><li>fn: Failed Sending Notification </li><li>sapi: API Operation </li><li>fapi: Failed API Operation </li><li>limit_wc: Blocked Account </li><li>limit_mu: Blocked IP Address </li><li>limit_ui: Too Many Calls to /userinfo </li><li>api_limit: Rate Limit On API </li><li>sdu: Successful User Deletion </li><li>fdu: Failed User Deletion </li><li>slo: Success Logout</li><li>flo: Failed Logout</li><li>sd: Success Delegation</li><li>fd: Failed Delegation</li><li>fcoa: Failed Cross Origin Authentication</li><li>scoa: Success Cross Origin Authentication</li></ul>\n<h5>List of fields that can be used in fields and sort</h5><ul><li>date: The moment when the event occured.</li><li>connection: The connection related to the event.</li><li>client_id: The client id related to the event</li><li>client_name: The name of the client related to the event.</li><li>ip: The IP address from where the request that caused the log entry originated.</li><li>user_id: The user id related to the event.</li><li>user_name: The user name related to the event.</li><li>description: The description of the event.</li><li>user_agent: The user agent that is related to the event.</li><li>type: The event type. Refer to the event acronym mappings above for a list of possible event types.</li><li>details: The details object of the event.</li><li>strategy: The connection strategy related to the event.</li><li>strategy_type: The connection strategy type related to the event.</li></ul>", "parameters": [{"required": true, "type": "string", "description": "The user_id of the logs to retrieve", "name": "user_id", "in": "path"}, {"type": "integer", "description": "The page number. Zero based", "name": "page", "in": "query"}, {"name": "per_page", "type": "integer", "description": "The amount of entries per page. Default: <code>50</code>. Max value: <code>100</code>", "maximum": 100, "in": "query"}, {"type": "string", "description": "The field to use for sorting. Use <code>field:order</code> where order is <code>1</code> for ascending and <code>-1</code> for descending. For example <code>date:-1</code>", "name": "sort", "in": "query"}, {"type": "boolean", "description": "true if a query summary must be included in the result, false otherwise. Default <code>false</code>.", "name": "include_totals", "in": "query"}], "produces": ["application/json"], "summary": "Get user's log events", "security": [{"jwt": []}], "operationId": "get_logs_by_user", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The log was retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_logs_by_user_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:logs"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/connections/{id}/users": {"delete": {"description": "Deletes a specified connection user by its email (you cannot delete all users from specific connection). Currently, only Database Connections are supported.\n", "parameters": [{"required": true, "type": "string", "description": "The id of the connection (currently only database connections are supported)", "name": "id", "in": "path"}, {"required": true, "type": "string", "description": "The email of the user to delete", "name": "email", "in": "query"}], "produces": ["application/json"], "summary": "Delete a connection user", "security": [{"jwt": []}], "operationId": "delete_users_by_email", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"200": {"description": "No response was specified"}, "204": {"description": "The user no longer exists."}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "403": {"description": "Insufficient scope, expected any of: delete:users"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request URI. The message will vary depending on the cause."}}}}, "/api/v2/client-grants": {"post": {"responses": {"201": {"description": "The client grant was created."}, "200": {"description": "No response was specified"}, "429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "404": {"description": "Client not found"}, "403": {"description": "Insufficient scope, expected any of: create:client_grants"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}, "400": {"description": "Invalid request body. The message will vary depending on the cause."}, "409": {"description": "A resource server with the same identifier already exists."}}, "parameters": [{"schema": {"$ref": "#/definitions/post_client-grants_body"}, "required": true, "name": "body", "in": "body"}], "produces": ["application/json"], "summary": "Create a client grant", "security": [{"jwt": []}], "consumes": ["application/json", "application/x-www-form-urlencoded"], "operationId": "post_client-grants"}, "get": {"description": "Manage your <a href='https://auth0.com/docs/api-auth/grant/client-credentials'>Client Grants</a> (also called Client Credentials Grants). Using Client Grants, your Client can request an Auth0 access token using its credentials (a Client ID and a Client Secret). The access token then represents your Client during API calls.\n\nRefer to <a href='https://auth0.com/docs/api-auth/config/using-the-management-api'>Using the Management API for Setting Up a Client Credentials Grant Scenario</a> for additional information.\n\n\n", "parameters": [{"name": "per_page", "maximum": 100, "minimum": 1, "in": "query", "type": "integer", "description": "The amount of entries per page."}, {"minimum": 0, "type": "integer", "description": "The page number. Zero based", "name": "page", "in": "query"}, {"type": "boolean", "description": "true if a query summary must be included in the result, false otherwise. Default <code>false</code>.", "name": "include_totals", "in": "query"}, {"type": "string", "description": "URL Encoded audience of a client grant to filter", "name": "audience", "in": "query"}, {"type": "string", "description": "id of a client to filter", "name": "client_id", "in": "query"}], "produces": ["application/json"], "summary": "Get all client grants", "security": [{"jwt": []}], "operationId": "get_client-grants", "consumes": ["application/json", "application/x-www-form-urlencoded"], "responses": {"429": {"description": "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining and X-RateLimit-Reset headers."}, "200": {"description": "The client grants were retrieved. See <strong>Response Class</strong> below for schema.", "schema": {"items": {"$ref": "#/definitions/get_client-grants_response"}, "type": "array"}}, "403": {"description": "Insufficient scope, expected any of: read:client_grants"}, "401": {"description": "Invalid signature received for JSON Web Token validation"}}}}}, "schemes": ["https"], "basePath": "/", "host": "management.auth0.com", "definitions": {"post_clients_body_egnyte": {"default": {}, "type": "object"}, "patch_clients_by_id_body_wams": {"default": {}, "type": "object", "properties": {"masterkey": {"type": "string", "description": "The Windows Azure Mobile Services's master key"}}}, "get_daily_response": {"type": "object", "properties": {"date": {"default": "2014-01-01T05:00:00.000Z", "type": "string", "description": "The date to which the stats belong"}, "logins": {"default": 100, "type": "number", "description": "The amount of logins on the date"}}}, "get_clients_response_scopes": {"default": {}, "type": "object"}, "patch_connections_by_id_body_password_dictionary": {"required": ["enable"], "type": "object", "description": "Options for password dictionary policy", "properties": {"enable": {"type": "boolean"}, "dictionary": {"items": {"type": "string", "description": "Custom Password Dictionary entry. 50 characters max."}, "type": "array", "description": "Custom Password Dictionary. An array of up to 200 entries.", "maxItems": 200}}}, "patch_provider_response": {"type": "object", "properties": {"credentials": {"$ref": "#/definitions/patch_provider_response_credentials"}, "default_from_address": {"type": "string", "description": "The default from address"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise"}, "name": {"default": "sendgrid", "type": "string", "description": "The name of the email provider"}, "settings": {"$ref": "#/definitions/patch_provider_response_settings"}}}, "get_rules_response": {"type": "object", "properties": {"name": {"default": "rule_1", "type": "string", "description": "The name of the rule"}, "script": {"default": "function (user, context, callback) {\n  callback(null, user, context);\n}", "type": "string", "description": "The code to be executed when the rule runs"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the connection is enabled, <code>false</code> otherwise"}, "id": {"default": "con_0000000000000001", "type": "string", "description": "The rule's identifier"}, "order": {"default": 1, "type": "number", "description": "The rule's order in relation to other rules. A rule with a lower order than another rule executes first"}, "stage": {"default": "login_success", "type": "string", "description": "The rule's execution stage"}}}, "get_enrollments_response": {"type": "object", "properties": {"phone_number": {"type": "string", "description": "Phone number"}, "status": {"enum": ["pending", "confirmed"], "type": "string", "description": "Enrollment status"}, "last_auth": {"type": "string", "description": "Last authentication", "format": "date-time"}, "name": {"type": "string", "description": "Enrollment name (usually phone number)"}, "enrolled_at": {"type": "string", "description": "Enrollment date", "format": "date-time"}, "id": {"type": "string", "description": "Enrollment generated id"}, "identifier": {"type": "string", "description": "Device identifier (usually phone identifier)"}, "type": {"type": "string", "description": "Enrollment type"}, "auth_method": {"enum": ["authenticator", "guardian", "sms"], "type": "string", "description": "Enrollment type"}}}, "get_resource-servers_response": {"type": "object", "properties": {"scopes": {"items": {"required": ["value"], "type": "object", "properties": {"description": {"type": "string", "description": "A user-friendly description of the scope."}, "value": {"type": "string", "description": "The scope value."}}}, "type": "array"}, "allow_offline_access": {"type": "boolean", "description": "Allows issuance of refresh tokens for this entity"}, "name": {"type": "string", "description": "The name of the resource server."}, "token_lifetime_for_web": {"type": "integer", "description": "The amount of time (in seconds) that the token will be valid after being issued from browser based flows. Value cannot be larger than token_lifetime."}, "token_lifetime": {"type": "integer", "description": "The amount of time (in seconds) that the token will be valid after being issued"}, "signing_secret": {"type": "string", "description": "The secret used to sign tokens when using symmetric algorithms"}, "is_system": {"type": "boolean", "description": "Whether this API is a system API"}, "signing_alg": {"enum": ["HS256", "RS256"], "type": "string", "description": "The algorithm used to sign tokens"}, "identifier": {"type": "string", "description": "The identifier of the resource server."}, "id": {"type": "string", "description": "The id of the resource server."}, "skip_consent_for_verifiable_first_party_clients": {"type": "boolean", "description": "Flag this entity as capable of skipping consent"}}}, "post_clients_response_client_metadata": {"type": "object", "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "patch_connections_by_id_response": {"type": "object", "properties": {"name": {"default": "My connection", "type": "string", "description": "The name of the connection"}, "is_domain_connection": {"type": "boolean", "description": "True if the connection is domain level"}, "id": {"default": "con_0000000000000001", "type": "string", "description": "The connection's identifier"}, "enabled_clients": {"default": ["avUAvH1pgnZGgAGlv8guZLPoaOnjVJsM", "ScKKdrpyUwfkhOQP6KXItH32INgZf7Rb"], "items": {"type": "string", "description": "The client id"}, "type": "array", "description": "The ids of the clients for which the connection is enabled"}, "realms": {"items": {"type": "string", "description": "The realm where this connection belongs", "format": "connection-realm"}, "type": "array", "description": "Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm", "maxItems": 10}, "strategy": {"default": "auth0", "type": "string", "description": "The type of the connection, related to the identity provider"}, "options": {"$ref": "#/definitions/patch_connections_by_id_response_options"}, "metadata": {"$ref": "#/definitions/patch_connections_by_id_response_metadata"}}}, "patch_clients_by_id_body_dropbox": {"default": {}, "type": "object"}, "get_clients_by_id_response_ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}, "post_rules_response": {"type": "object", "properties": {"name": {"default": "rule_1", "type": "string", "description": "The name of the rule"}, "script": {"default": "function (user, context, callback) {\n  callback(null, user, context);\n}", "type": "string", "description": "The code to be executed when the rule runs"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the connection is enabled, <code>false</code> otherwise"}, "id": {"default": "con_0000000000000001", "type": "string", "description": "The rule's identifier"}, "order": {"default": 1, "type": "number", "description": "The rule's order in relation to other rules. A rule with a lower order than another rule executes first"}, "stage": {"default": "login_success", "type": "string", "description": "The rule's execution stage"}}}, "delete_user_identity_by_user_id_response_profileData": {"type": "object", "properties": {"phone_number": {"type": "string", "description": "The user's phone number"}, "family_name": {"type": "string", "description": "The user's family name"}, "name": {"type": "string", "description": "The user's name"}, "email_verified": {"type": "boolean", "description": "Indicates whether the user's email is verified or not"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "given_name": {"type": "string", "description": "The user's given name"}, "email": {"type": "string", "description": "The user's email"}, "phone_verified": {"type": "boolean", "description": "Indicates whether the user's phone is verified or not"}}}, "get_user-blocks_response": {"type": "object", "properties": {"blocked_for": {"default": [{"ip": "10.0.0.1", "identifier": "john.doe@gmail.com"}], "items": {"type": "object", "properties": {"ip": {"default": "10.0.0.1", "type": "string", "description": "IP Address"}, "connection": {"type": "string", "description": "Connection identifier"}, "identifier": {"default": "john.doe@gmail.com", "type": "string", "description": "Identifier (can be the user's `email`, `username` or `phone_number`)"}}}, "type": "array", "description": "Array of identifier + ip pairs"}}}, "patch_connections_by_id_body": {"type": "object", "properties": {"options": {"$ref": "#/definitions/patch_connections_by_id_body_options"}, "enabled_clients": {"items": {"default": [], "type": "string", "description": "The client_id of the client to for which the connection is to be enabled", "format": "client-id"}, "type": "array", "description": "The identifiers of the clients for which the connection is to be enabled. If the array is empty or the property is not specified, no clients are enabled"}, "realms": {"items": {"type": "string", "description": "The realm where this connection belongs", "format": "connection-realm"}, "type": "array", "description": "Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm", "maxItems": 10}, "metadata": {"$ref": "#/definitions/patch_connections_by_id_body_metadata"}}}, "put_email-templates_by_templateName_body": {"required": ["template", "body", "from", "subject", "syntax", "enabled"], "type": "object", "properties": {"body": {"type": "string", "description": "The body of the template."}, "from": {"default": "sender@auth0.com", "type": "string", "description": "The sender of the email."}, "resultUrl": {"type": "string", "description": "The URL to redirect the user to after a successful action."}, "enabled": {"type": "boolean", "description": "Whether or not the template is enabled."}, "syntax": {"default": "liquid", "type": "string", "description": "The syntax of the template body."}, "template": {"default": "verify_email", "enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "type": "string", "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy))."}, "includeEmailInRedirect": {"type": "boolean", "description": "Whether or not we include the email as part of the returnUrl in the reset_email"}, "urlLifetimeInSeconds": {"minimum": 0, "type": "number", "description": "The lifetime in seconds that the link within the email will be valid for."}, "subject": {"type": "string", "description": "The subject of the email."}}}, "post_rotate-secret_response_client_metadata": {"type": "object", "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "post_email-templates_response": {"required": ["template", "body", "from", "subject", "syntax", "enabled"], "type": "object", "properties": {"body": {"type": "string", "description": "The body of the template."}, "from": {"default": "sender@auth0.com", "type": "string", "description": "The sender of the email."}, "resultUrl": {"type": "string", "description": "The URL to redirect the user to after a successful action."}, "enabled": {"type": "boolean", "description": "Whether or not the template is enabled."}, "syntax": {"default": "liquid", "type": "string", "description": "The syntax of the template body."}, "template": {"default": "verify_email", "enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "type": "string", "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy))."}, "includeEmailInRedirect": {"type": "boolean", "description": "Whether or not we include the email as part of the returnUrl in the reset_email"}, "urlLifetimeInSeconds": {"type": "number", "description": "The lifetime in seconds that the link within the email will be valid for."}, "subject": {"type": "string", "description": "The subject of the email."}}}, "post_tokens_body": {"required": ["jti"], "type": "object", "properties": {"jti": {"type": "string", "description": "The jti of the JWT to blacklist"}, "aud": {"type": "string", "description": "The JWT's aud claim. The client_id of the client for which it was issued", "format": "client-id"}}}, "get_clients_response_jwt_configuration": {"type": "object", "description": "Configuration related to JWTs for the client", "properties": {"lifetime_in_seconds": {"default": 36000, "type": "integer", "description": "The amount of seconds the JWT will be valid (affects <code>exp</code> claim)"}, "alg": {"default": "HS256", "enum": ["HS256", "RS256"], "type": "string", "description": "Algorithm uses to sign JWTs"}, "secret_encoded": {"default": true, "type": "boolean", "description": "<code>true</code> if the client secret is base64 encoded, <code>false</code> otherwise. Defaults to <code>true</code>"}, "scopes": {"default": {}, "type": "object"}}}, "get_clients_by_id_response_android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "post_custom-domains_response_verification": {"type": "object", "description": "The custom domain verification settings.", "properties": {"methods": {"minItems": 1, "items": {"required": ["name", "record"], "type": "object", "properties": {"record": {"default": "auth0-domain-verification=...", "type": "string", "description": "The value used to verify the custom domain."}, "name": {"default": "txt", "enum": ["cname", "txt"], "type": "string", "description": "The custom domain verification method."}}}, "type": "array", "description": "The custom domain verification methods."}}}, "patch_client-grants_by_id_body": {"type": "object", "properties": {"scope": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}}}, "post_device-credentials_response": {"required": ["id"], "type": "object", "properties": {"id": {"default": "dcr_0000000000000001", "type": "string", "description": "The credential's identifier"}}}, "patch_users_by_id_body_app_metadata": {"default": {"plan": "pro"}, "type": "object", "description": "Data related to the user that does affect the application's core functionality. Send <code>null</code> to delete."}, "get_users_by_id_response_app_metadata": {"type": "object", "description": "Data related to the user that does affect the application's core functionality."}, "post_clients_body_salesforce": {"default": {}, "type": "object", "properties": {"entity_id": {"type": "string", "description": "The arbitrary logical URL that identifies the Saleforce resource. The format has to be 'https://whatever.com'", "format": "url"}}}, "post_clients_response_addons": {"default": {}, "type": "object"}, "post_clients_body_newrelic": {"default": {}, "type": "object"}, "get_custom-domains_response_verification": {"type": "object", "description": "The custom domain verification settings.", "properties": {"methods": {"minItems": 1, "items": {"required": ["name", "record"], "type": "object", "properties": {"record": {"default": "auth0-domain-verification=...", "type": "string", "description": "The value used to verify the custom domain."}, "name": {"default": "txt", "enum": ["cname", "txt"], "type": "string", "description": "The custom domain verification method."}}}, "type": "array", "description": "The custom domain verification methods."}}}, "get_provider_response_settings": {"type": "object", "description": "Specific provider setting"}, "get_settings_response_change_password": {"type": "object", "description": "Change Password page customization", "properties": {"html": {"type": "string", "description": "Replace default change password page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "enabled": {"default": false, "type": "boolean", "description": "<code>true</code> to use the custom change password html, <code>false</code> otherwise (default: <code>false</code>)"}}}, "patch_clients_by_id_response_scopes": {"default": {}, "type": "object"}, "get_clients_response": {"type": "object", "properties": {"token_endpoint_auth_method": {"default": "none", "enum": ["none", "client_secret_post", "client_secret_basic"], "type": "string", "description": "Defines the requested authentication method for the token endpoint. Possible values are 'none' (public client without a client secret), 'client_secret_post' (client uses HTTP POST parameters) or 'client_secret_basic' (client uses HTTP Basic)"}, "client_aliases": {"items": {"type": "string"}, "type": "array"}, "cross_origin_auth": {"type": "boolean", "description": "<code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise (default: <code>false</code>)"}, "form_template": {"type": "string"}, "signing_keys": {"items": {"type": "object", "properties": {"cert": {"type": "string", "description": "Signing public key."}, "pkcs7": {"type": "string", "description": "Signing public key (PKCS#7 format)."}}}, "type": "array", "description": "Client signing keys."}, "custom_login_page_preview": {"type": "string"}, "allowed_clients": {"items": {"type": "string"}, "type": "array"}, "custom_login_page_on": {"default": true, "type": "boolean", "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise. Defaults to true"}, "app_type": {"type": "string", "description": "The type of application this client represents"}, "web_origins": {"items": {"type": "string"}, "type": "array", "description": "A set of URLs that represents valid web origins for use with web message response mode"}, "jwt_configuration": {"$ref": "#/definitions/get_clients_response_jwt_configuration"}, "oidc_conformant": {"default": false, "type": "boolean", "description": "Whether this client will conform to strict OIDC specifications"}, "logo_uri": {"type": "string", "description": "The URL of the client logo (recommended size: 150x150)"}, "cross_origin_loc": {"type": "string", "description": "Url fo the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page.", "format": "url"}, "description": {"type": "string", "description": "Free text description of the purpose of the Client. (Max character length: <code>140</code>)"}, "sso_disabled": {"default": false, "type": "boolean", "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "encryption_key": {"$ref": "#/definitions/get_clients_response_encryption_key"}, "callbacks": {"items": {"type": "string"}, "type": "array", "description": "The URLs that Auth0 can use to as a callback for the client"}, "sso": {"default": false, "type": "boolean"}, "client_id": {"default": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww", "type": "string", "description": "The id of the client"}, "custom_login_page": {"type": "string"}, "allowed_origins": {"items": {"type": "string"}, "type": "array"}, "allowed_logout_urls": {"items": {"type": "string"}, "type": "array"}, "name": {"default": "My application", "type": "string", "description": "The name of the client"}, "mobile": {"$ref": "#/definitions/get_clients_response_mobile"}, "client_metadata": {"$ref": "#/definitions/get_clients_response_client_metadata"}, "client_secret": {"default": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H", "type": "string", "description": "The client secret, it must not be public"}, "addons": {"$ref": "#/definitions/get_clients_response_addons"}, "is_first_party": {"default": false, "type": "boolean", "description": "Whether this client a first party client or not"}}}, "patch_clients_by_id_body_egnyte": {"default": {}, "type": "object"}, "get_users-by-email_response_app_metadata": {"type": "object", "description": "Data related to the user that does affect the application's core functionality."}, "post_users_body_app_metadata": {"default": {"plan": "pro"}, "type": "object", "description": "Data related to the user that does affect the application's core functionality."}, "patch_users_by_id_response": {"type": "object", "properties": {"phone_number": {"default": "+199999999999999", "type": "string", "description": "The user's phone number (following the E.164 recommendation), only valid for users from SMS connections"}, "family_name": {"type": "string", "description": "The user's family name"}, "user_id": {"default": "usr_5457edea1b8f33391a000004", "type": "string", "description": "The user's unique identifier"}, "name": {"type": "string", "description": "The user's name"}, "picture": {"type": "string", "description": "The user's picture"}, "email_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's email is verified, <code>false</code> otherwise"}, "created_at": {"type": "string", "description": "The date when the user was created"}, "last_ip": {"type": "string", "description": "The last login IP address"}, "updated_at": {"type": "string", "description": "The date when the user was last updated (modified)"}, "app_metadata": {"$ref": "#/definitions/patch_users_by_id_response_app_metadata"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "nickname": {"type": "string", "description": "The user's nickname"}, "last_login": {"type": "string", "description": "The last login date for this user"}, "given_name": {"type": "string", "description": "The user's given name"}, "phone_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's phone_number is verified, <code>false</code> otherwise, only valid for users from SMS connections"}, "multifactor": {"items": {"type": "string"}, "type": "array", "description": "The list of multifactor providers that the user has enrolled to"}, "user_metadata": {"$ref": "#/definitions/patch_users_by_id_response_user_metadata"}, "identities": {"default": {"isSocial": false, "connection": "Initial-Connection", "user_id": "5457edea1b8f22891a000004", "provider": "auth0"}, "items": {"type": "object", "properties": {"isSocial": {"type": "boolean", "description": "<code>true</code> if the identity provider is a social provider, <code>false</code>s otherwise"}, "user_id": {"type": "string", "description": "The unique identifier for the user for the identity"}, "access_token": {"type": "string", "description": "IDP access token returned only if scope read:user_idp_token is defined"}, "profileData": {"type": "object", "properties": {"phone_number": {"type": "string", "description": "The user's phone number"}, "family_name": {"type": "string", "description": "The user's family name"}, "name": {"type": "string", "description": "The user's name"}, "email_verified": {"type": "boolean", "description": "Indicates whether the user's email is verified or not"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "given_name": {"type": "string", "description": "The user's given name"}, "email": {"type": "string", "description": "The user's email"}, "phone_verified": {"type": "boolean", "description": "Indicates whether the user's phone is verified or not"}}}, "connection": {"type": "string", "description": "The name of the connection for the identity"}, "provider": {"type": "string", "description": "The type of identity provider"}}}, "type": "array", "description": "An array of objects with information about the user's identities. More than one will exists in case accounts are linked"}, "email": {"default": "john.doe@gmail.com", "type": "string", "description": "The user's email", "format": "email"}, "logins_count": {"type": "integer", "description": "The number of logins for this user"}, "blocked": {"type": "boolean", "description": "Indicates whether the user was blocked by an administrator or not"}}}, "patch_rules_by_id_response": {"type": "object", "properties": {"name": {"default": "rule_1", "type": "string", "description": "The name of the rule"}, "script": {"default": "function (user, context, callback) {\n  callback(null, user, context);\n}", "type": "string", "description": "The code to be executed when the rule runs"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the connection is enabled, <code>false</code> otherwise"}, "id": {"default": "con_0000000000000001", "type": "string", "description": "The rule's identifier"}, "order": {"default": 1, "type": "number", "description": "The rule's order in relation to other rules. A rule with a lower order than another rule executes first"}, "stage": {"default": "login_success", "type": "string", "description": "The rule's execution stage"}}}, "get_logs_by_user_response": {"type": "object", "properties": {"user_id": {"default": "auth0|56c75c4e42b6359e98374bc2", "type": "string", "description": "The user's unique identifier"}, "ip": {"default": "190.257.209.19", "type": "string", "description": "The IP of the log event source"}, "client_name": {"default": "My application Name", "type": "string", "description": "The name of the client"}, "location_info": {"$ref": "#/definitions/get_logs_by_user_response_location_info"}, "details": {"$ref": "#/definitions/get_logs_by_user_response_details"}, "client_id": {"default": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww", "type": "string", "description": "The id of the client"}, "date": {"default": "2016-02-23T19:57:29.532Z", "type": "string", "description": "The date when the event was created"}, "type": {"default": "sapi", "type": "string", "description": "The log event type"}}}, "get_settings_response_flags": {"type": "object", "description": "Tenant flags", "properties": {"enable_pipeline2": {"default": true, "type": "boolean", "description": "This flag enables advanced API Authorization scenarios."}, "enable_apis_section": {"default": false, "type": "boolean", "description": "This flag enables the APIs section."}, "enable_client_connections": {"default": true, "type": "boolean", "description": "This flag determines whether all current connections shall be enabled when a new <code>client</code> is created. Default value is <code>true</code>."}, "disable_impersonation": {"default": false, "type": "boolean", "description": "If set to <code>true</code> all Impersonation functionality is disabled for the Tenant. This is a read-only attribute."}, "change_pwd_flow_v1": {"default": false, "type": "boolean", "description": "Enables the first version of the Change Password flow. We've deprecated this option and recommending a safer flow. This flag is only for backwards compatibility"}}}, "get_settings_response": {"type": "object", "properties": {"sandbox_versions_available": {"default": ["8", "4"], "items": {"type": "string"}, "type": "array", "description": "A set of available sandbox versions for the extensibility environment"}, "session_lifetime": {"default": 168, "type": "number", "description": "Login session lifetime, how long the session will stay valid (unit: hours)"}, "support_url": {"default": "https://mycompany.org/support", "type": "string", "description": "User support url", "format": "absolute-uri-or-empty"}, "picture_url": {"default": "https://mycompany.org/logo.png", "type": "string", "description": "The URL of the tenant logo (recommended size: 150x150)", "format": "absolute-uri-or-empty"}, "friendly_name": {"default": "My Company", "type": "string", "description": "The friendly name of the tenant"}, "support_email": {"default": "support@mycompany.org", "type": "string", "description": "User support email", "format": "email-or-empty"}, "flags": {"$ref": "#/definitions/get_settings_response_flags"}, "guardian_mfa_page": {"$ref": "#/definitions/get_settings_response_guardian_mfa_page"}, "idle_session_lifetime": {"default": 72, "type": "number", "description": "Force a user to login after they have been inactive for the specified number (unit: hours)"}, "change_password": {"$ref": "#/definitions/get_settings_response_change_password"}, "error_page": {"$ref": "#/definitions/get_settings_response_error_page"}, "sandbox_version": {"default": "8", "type": "string", "description": "The selected sandbox version to be used for the extensibility environment"}, "default_audience": {"type": "string", "description": "Default audience for API Authorization"}, "allowed_logout_urls": {"items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that are valid to redirect to after logout from Auth0"}, "default_directory": {"type": "string", "description": "Name of the connection that will be used for password grants at the token endpoint. Only the following connection types are supported: LDAP, AD, Database Connections, Passwordless, Windows Azure Active Directory, ADFS"}}}, "post_connections_body_password_complexity_options": {"type": "object", "description": "Password complexity options", "properties": {"min_length": {"minimum": 1, "type": "integer", "description": "Minimum password length", "maximum": 128}}}, "post_provider_response_settings": {"type": "object", "description": "Specific provider setting"}, "post_provider_body_settings": {"type": "object", "description": "Specific provider setting"}, "post_ticket_response": {"type": "object", "properties": {"ticket_url": {"default": "https://{tenant}.guardian.auth0.com/enrollment?ticket_id={ticket_id}", "type": "string", "description": "The url you can use to start enrollment", "format": "url"}, "ticket_id": {"default": "u2x2-u2x2-u2x2-u2x2-u2x2-u2x2", "type": "string", "description": "The ticket_id used to identify the enrollment"}}}, "get_rules_by_id_response": {"type": "object", "properties": {"name": {"default": "rule_1", "type": "string", "description": "The name of the rule"}, "script": {"default": "function (user, context, callback) {\n  callback(null, user, context);\n}", "type": "string", "description": "The code to be executed when the rule runs"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the connection is enabled, <code>false</code> otherwise"}, "id": {"default": "con_0000000000000001", "type": "string", "description": "The rule's identifier"}, "order": {"default": 1, "type": "number", "description": "The rule's order in relation to other rules. A rule with a lower order than another rule executes first"}, "stage": {"default": "login_success", "type": "string", "description": "The rule's execution stage"}}}, "post_clients_body_concur": {"default": {}, "type": "object"}, "post_clients_body_firebase": {"default": {}, "type": "object", "properties": {"lifetime_in_seconds": {"type": "integer", "description": "Lifespan of the Token in seconds (SDK 3+)"}, "private_key": {"type": "string", "description": "The Private Key for signing the token. (SDK 3+)"}, "secret": {"type": "string", "description": "Firebase's secret"}, "client_email": {"type": "string", "description": "The ID of the Service Account you have created (SDK 3+)"}, "private_key_id": {"type": "string", "description": "Optional. ID of the private key (SDK 3+)"}}}, "patch_connections_by_id_body_password_no_personal_info": {"required": ["enable"], "type": "object", "description": "Options for password expiration policy", "properties": {"enable": {"type": "boolean"}}}, "post_users_response_user_metadata": {"type": "object", "description": "Data related to the user that does not affect the application's core functionality."}, "get_settings_response_error_page": {"type": "object", "description": "Tenant error page customization", "properties": {"url": {"default": "https://mycompany.org/error", "type": "string", "description": "Redirect to specified url instead of show the default error page", "format": "absolute-uri-or-empty"}, "html": {"type": "string", "description": "Replace default error page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "show_log_link": {"default": false, "type": "boolean", "description": "<code>true</code> to show link to log as part of the default error page, <code>false</code> otherwise (default: <code>true</code>)"}}}, "post_clients_body_dropbox": {"default": {}, "type": "object"}, "patch_connections_by_id_body_upstream_params": {"type": "object", "description": "Options for adding parameters in the request to the upstream IdP"}, "patch_clients_by_id_body_newrelic": {"default": {}, "type": "object"}, "post_provider_body_credentials": {"required": ["api_key"], "properties": {"api_key": {"type": "string", "description": "API Key"}}}, "post_rotate-secret_response_android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "patch_client-grants_by_id_response": {"type": "object", "properties": {"scope": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}, "audience": {"type": "string", "description": "The audience."}, "id": {"type": "string", "description": "The id of the client grant."}, "client_id": {"type": "string", "description": "The identifier of the client."}}}, "post_users_response_app_metadata": {"type": "object", "description": "Data related to the user that does affect the application's core functionality."}, "post_clients_body_box": {"default": {}, "type": "object"}, "post_connections_response_metadata": {"type": "object", "description": "Metadata associated with the connection, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "post_rotate-secret_response_jwt_configuration": {"type": "object", "description": "Configuration related to JWTs for the client", "properties": {"lifetime_in_seconds": {"default": 36000, "type": "integer", "description": "The amount of seconds the JWT will be valid (affects <code>exp</code> claim)"}, "alg": {"default": "HS256", "enum": ["HS256", "RS256"], "type": "string", "description": "Algorithm uses to sign JWTs"}, "secret_encoded": {"default": true, "type": "boolean", "description": "<code>true</code> if the client secret is base64 encoded, <code>false</code> otherwise. Defaults to <code>true</code>"}, "scopes": {"default": {}, "type": "object"}}}, "post_clients_body_aws": {"default": {}, "type": "object", "properties": {"role": {"type": "string", "description": "For example: 'arn:aws:iam::010616021751:role/foo'"}, "principal": {"type": "string", "description": "For example: 'arn:aws:iam::010616021751:saml-provider/idpname'"}}}, "patch_clients_by_id_body_ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}, "post_clients_body_sap_api": {"default": {}, "type": "object", "properties": {"servicePassword": {"type": "string", "description": "API calls to the token endpoint are authenticated with this password. Usually from a service account"}, "tokenEndpointUrl": {"type": "string", "description": "Your SAP OData server OAuth2 Token Endpoint URL", "format": "url"}, "clientid": {"type": "string", "description": "Your SAP client ID"}, "scope": {"type": "string", "description": "The requested scope for SAP APIs"}, "usernameAttribute": {"type": "string", "description": "The name of the property in the user object that maps to a SAP username, for example: 'email'"}, "nameIdentifierFormat": {"type": "string", "description": "The NameID element of the Subject can be used to express the user's identity"}}}, "post_clients_response_ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}, "put_email-templates_by_templateName_response": {"required": ["template", "body", "from", "subject", "syntax", "enabled"], "type": "object", "properties": {"body": {"type": "string", "description": "The body of the template."}, "from": {"default": "sender@auth0.com", "type": "string", "description": "The sender of the email."}, "resultUrl": {"type": "string", "description": "The URL to redirect the user to after a successful action."}, "enabled": {"type": "boolean", "description": "Whether or not the template is enabled."}, "syntax": {"default": "liquid", "type": "string", "description": "The syntax of the template body."}, "template": {"default": "verify_email", "enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "type": "string", "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy))."}, "includeEmailInRedirect": {"type": "boolean", "description": "Whether or not we include the email as part of the returnUrl in the reset_email"}, "urlLifetimeInSeconds": {"type": "number", "description": "The lifetime in seconds that the link within the email will be valid for."}, "subject": {"type": "string", "description": "The subject of the email."}}}, "post_connections_body": {"required": ["name", "strategy"], "type": "object", "properties": {"name": {"type": "string", "description": "The name of the connection. Must start and end with an alphanumeric character and can only contain alphanumeric characters and '-'. Max length 128"}, "strategy": {"enum": ["ad", "adfs", "amazon", "dropbox", "bitbucket", "aol", "auth0-adldap", "auth0-oidc", "auth0", "baidu", "bitly", "box", "custom", "daccount", "dwolla", "email", "evernote-sandbox", "evernote", "exact", "facebook", "fitbit", "flickr", "github", "google-apps", "google-oauth2", "guardian", "instagram", "ip", "linkedin", "miicard", "oauth1", "oauth2", "office365", "paypal", "paypal-sandbox", "pingfederate", "planningcenter", "renren", "salesforce-community", "salesforce-sandbox", "salesforce", "samlp", "sharepoint", "shopify", "sms", "soundcloud", "thecity-sandbox", "thecity", "thirtysevensignals", "twitter", "untappd", "vkontakte", "waad", "weibo", "windowslive", "wordpress", "yahoo", "yammer", "yandex"], "type": "string", "description": "The identity provider identifier for the connection"}, "enabled_clients": {"items": {"type": "string", "description": "The id of the client to for which the connection is to be enabled.", "format": "client-id"}, "type": "array", "description": "The identifiers of the clients for which the connection is to be enabled. If the array is empty or the property is not specified, no clients are enabled"}, "realms": {"items": {"type": "string", "description": "The realm where this connection belongs", "format": "connection-realm"}, "type": "array", "description": "Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm", "maxItems": 10}, "options": {"$ref": "#/definitions/post_connections_body_options"}, "metadata": {"$ref": "#/definitions/post_connections_body_metadata"}}}, "post_connections_body_options": {"type": "object", "description": "The connection's options (depend on the connection strategy)", "properties": {"ext_admin": {"type": "boolean"}, "basic_profile": {"default": true, "type": "boolean"}, "ext_profile": {"type": "boolean"}, "password_history": {"required": ["enable"], "type": "object", "description": "Options for password history policy", "properties": {"enable": {"type": "boolean"}, "size": {"default": 8, "minimum": 0, "type": "integer", "maximum": 24}}}, "ext_assigned_plans": {"type": "boolean"}, "upstream_params": {"type": "object", "description": "Options for adding parameters in the request to the upstream IdP"}, "ext_groups": {"type": "boolean"}, "passwordPolicy": {"enum": ["none", "low", "fair", "good", "excellent"], "type": "string", "description": "Password strength level"}, "password_no_personal_info": {"required": ["enable"], "type": "object", "description": "Options for password expiration policy", "properties": {"enable": {"type": "boolean"}}}, "password_dictionary": {"required": ["enable"], "type": "object", "description": "Options for password dictionary policy", "properties": {"enable": {"type": "boolean"}, "dictionary": {"items": {"type": "string", "description": "Custom Password Dictionary entry. 50 characters max."}, "type": "array", "description": "Custom Password Dictionary. An array of up to 200 entries.", "maxItems": 200}}}, "password_complexity_options": {"type": "object", "description": "Password complexity options", "properties": {"min_length": {"minimum": 1, "type": "integer", "description": "Minimum password length", "maximum": 128}}}, "ext_agreed_terms": {"type": "boolean"}, "ext_is_suspended": {"type": "boolean"}, "api_enable_users": {"default": true, "type": "boolean"}, "validation": {"type": "object", "description": "Options for validation", "properties": {"username": {"required": ["max", "min"], "type": "object", "properties": {"max": {"default": 15, "type": "integer", "maximum": 128}, "min": {"default": 1, "minimum": 1, "type": "integer"}}}}}}}, "post_custom-domains_response": {"required": ["custom_domain_id", "domain", "primary", "status", "type", "verification"], "type": "object", "properties": {"custom_domain_id": {"default": "cd_0000000000000001", "type": "string", "description": "The id of the custom domain."}, "status": {"default": "ready", "enum": ["disabled", "pending", "pending_verification", "ready"], "type": "string", "description": "The custom domain configuration status."}, "domain": {"default": "login.mycompany.com", "type": "string", "description": "The custom domain."}, "primary": {"default": false, "type": "boolean", "description": "<code>true</code> if the domain was marked as \"primary\", <code>false</code> otherwise."}, "verification": {"$ref": "#/definitions/post_custom-domains_response_verification"}, "type": {"default": "self_managed_certs", "enum": ["auth0_managed_certs", "self_managed_certs"], "type": "string", "description": "The custom domain provisioning type."}}}, "put_rules-configs_by_key_body": {"required": ["value"], "type": "object", "properties": {"value": {"default": "MY_RULES_CONFIG_VALUE", "type": "string", "description": "The value for the rules config being set."}}}, "post_clients_body_addons": {"type": "object", "description": "The addons for the client", "properties": {"rms": {"default": {}, "required": ["url"], "type": "object", "properties": {"url": {"type": "string", "description": "This is the URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it.", "format": "url"}}}, "layer": {"default": {}, "required": ["providerId", "keyId", "privateKey"], "type": "object", "properties": {"providerId": {"type": "string", "description": "The Provider ID of your Layer account"}, "keyId": {"type": "string", "description": "The Authentication Key identifier used to sign the Layer token"}, "privateKey": {"type": "string", "description": "The private key for signing the Layer token"}, "expiration": {"minimum": 0, "type": "integer", "description": "An optional expiration in minutes for the generated token. By default it will be 5 minutes"}, "principal": {"type": "string", "description": "The name of the property used as the unique user id in Layer. If none is specified user_id will be used"}}}, "mscrm": {"default": {}, "required": ["url"], "type": "object", "properties": {"url": {"type": "string", "description": "Microsoft Dynamics CRM application URL.", "format": "url"}}}, "cloudbees": {"default": {}, "type": "object"}, "egnyte": {"default": {}, "type": "object"}, "newrelic": {"default": {}, "type": "object"}, "concur": {"default": {}, "type": "object"}, "sharepoint": {"default": {}, "type": "object"}, "office365": {"default": {}, "type": "object"}, "echosign": {"default": {}, "type": "object"}, "azure_sb": {"default": {}, "type": "object", "properties": {"sasKeyName": {"type": "string", "description": "The shared access policy name defined in your Service Bus entity"}, "namespace": {"type": "string", "description": "Your Azure Service Bus namespace. The first segment of the Service Bus URL: http://YOUR_NAMESPACE.servicebus.windows.net"}, "expiration": {"type": "integer", "description": "Expiration in minutes for the generated token. Default: 5 minutes"}, "entityPath": {"type": "string", "description": "The entity you want to request a token for, for example: 'my-queue'"}, "sasKey": {"type": "string", "description": "The Primary Key associated with the shared access policy"}}}, "aws": {"default": {}, "type": "object", "properties": {"role": {"type": "string", "description": "For example: 'arn:aws:iam::010616021751:role/foo'"}, "principal": {"type": "string", "description": "For example: 'arn:aws:iam::010616021751:saml-provider/idpname'"}}}, "springcm": {"default": {}, "type": "object"}, "firebase": {"default": {}, "type": "object", "properties": {"lifetime_in_seconds": {"type": "integer", "description": "Lifespan of the Token in seconds (SDK 3+)"}, "private_key": {"type": "string", "description": "The Private Key for signing the token. (SDK 3+)"}, "secret": {"type": "string", "description": "Firebase's secret"}, "client_email": {"type": "string", "description": "The ID of the Service Account you have created (SDK 3+)"}, "private_key_id": {"type": "string", "description": "Optional. ID of the private key (SDK 3+)"}}}, "wams": {"default": {}, "type": "object", "properties": {"masterkey": {"type": "string", "description": "The Windows Azure Mobile Services's master key"}}}, "dropbox": {"default": {}, "type": "object"}, "salesforce_sandbox_api": {"default": {}, "type": "object", "properties": {"community_url_section": {"type": "string", "description": "The community url section"}, "principal": {"type": "string", "description": "The name of the property in the user object that maps to a Salesforce username, for example: 'email'"}, "clientid": {"type": "string", "description": "The Consumer Key assigned by Salesforce to the Connected App"}, "communityName": {"type": "string", "description": "The community name"}}}, "samlp": {"default": {}, "type": "object", "properties": {"authnContextClassRef": {"type": "string"}, "mappings": {"type": "object"}, "digestAlgorithm": {"type": "string"}, "recipient": {"type": "string"}, "destination": {"type": "string"}, "mapIdentities": {"type": "boolean"}, "audience": {"type": "string"}, "signResponse": {"type": "boolean"}, "nameIdentifierProbes": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}, "signatureAlgorithm": {"type": "string"}, "mapUnknownClaimsAsIs": {"type": "boolean"}, "createUpnClaim": {"type": "boolean"}, "passthroughClaimsWithNoMapping": {"type": "boolean"}, "nameIdentifierFormat": {"type": "string"}, "lifetimeInSeconds": {"type": "integer"}, "issuer": {"type": "string"}}}, "wsfed": {"default": {}, "type": "object"}, "box": {"default": {}, "type": "object"}, "salesforce_api": {"default": {}, "type": "object", "properties": {"community_url_section": {"type": "string", "description": "The community url section"}, "principal": {"type": "string", "description": "The name of the property in the user object that maps to a Salesforce username, for example: 'email'"}, "clientid": {"type": "string", "description": "The Consumer Key assigned by Salesforce to the Connected App"}, "communityName": {"type": "string", "description": "The community name"}}}, "salesforce": {"default": {}, "type": "object", "properties": {"entity_id": {"type": "string", "description": "The arbitrary logical URL that identifies the Saleforce resource. The format has to be 'https://whatever.com'", "format": "url"}}}, "slack": {"default": {}, "required": ["team"], "type": "object", "properties": {"team": {"type": "string", "description": "Slack team name."}}}, "sentry": {"default": {}, "type": "object"}, "zoom": {"default": {}, "type": "object", "properties": {"account": {"type": "string", "description": "The first segment of your Vanity URL, for example: 'https://{account}.zoom.us'"}}}, "azure_blob": {"default": {}, "type": "object", "properties": {"blobName": {"type": "string", "description": "The entity you want to request a token for: e.g. 'my-blob'. If left blank, the computed SAS will apply to the entire storage container"}, "containerName": {"type": "string", "description": "The container you want to request a token for: e.g. 'my-container'"}, "container_write": {"type": "boolean", "description": "Indicates that for any blob in the container the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account"}, "container_delete": {"type": "boolean", "description": "Indicates that the issued token has permission to delete any blob in the container"}, "signedIdentifier": {"type": "string", "description": "The shared access policy identifier defined in your storage account resource"}, "container_read": {"type": "boolean", "description": "Indicates that the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"}, "blob_write": {"type": "boolean", "description": "Indicates that the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account"}, "storageAccessKey": {"type": "string", "description": "The storage account access key associated storage account"}, "container_list": {"type": "boolean", "description": "Indicates that the issued token has permission to list blobs in the container"}, "accountName": {"type": "string", "description": "Your Azure storage account name. Just enter the first segment of the storage URL: http://<strong>YOUR ACCOUNT NAME</strong>.blob.core.windows.net"}, "blob_read": {"type": "boolean", "description": "Indicates that the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation"}, "expiration": {"minimum": 0, "type": "integer", "description": "Expiration in minutes for the generated token. Default: 5 minutes"}, "blob_delete": {"type": "boolean", "description": "Indicates that the issued token has permission to delete the blob"}}}, "zendesk": {"default": {}, "type": "object"}, "sap_api": {"default": {}, "type": "object", "properties": {"servicePassword": {"type": "string", "description": "API calls to the token endpoint are authenticated with this password. Usually from a service account"}, "tokenEndpointUrl": {"type": "string", "description": "Your SAP OData server OAuth2 Token Endpoint URL", "format": "url"}, "clientid": {"type": "string", "description": "Your SAP client ID"}, "scope": {"type": "string", "description": "The requested scope for SAP APIs"}, "usernameAttribute": {"type": "string", "description": "The name of the property in the user object that maps to a SAP username, for example: 'email'"}, "nameIdentifierFormat": {"type": "string", "description": "The NameID element of the Subject can be used to express the user's identity"}}}}}, "get_clients_by_id_response_scopes": {"default": {}, "type": "object"}, "patch_clients_by_id_response_android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "patch_resource-servers_by_id_body": {"type": "object", "properties": {"verificationLocation": {"type": "string", "description": "A uri from which to retrieve JWKs for this resource server used for verifying the JWT sent to Auth0 for token introspection."}, "scopes": {"items": {"required": ["value"], "type": "object", "properties": {"description": {"type": "string", "description": "A user-friendly description of the scope."}, "value": {"type": "string", "description": "The scope value."}}}, "type": "array"}, "allow_offline_access": {"type": "boolean", "description": "Allows issuance of refresh tokens for this entity"}, "name": {"type": "string", "description": "The name of the resource server. Must contain at least one character. Does not allow '<' or '>'"}, "token_lifetime": {"minimum": 0, "type": "integer", "description": "The amount of time (in seconds) that the token will be valid after being issued", "maximum": 2592000}, "signing_secret": {"type": "string", "description": "The secret used to sign tokens when using symmetric algorithms"}, "signing_alg": {"enum": ["HS256", "RS256"], "type": "string", "description": "The algorithm used to sign tokens"}, "options": {"$ref": "#/definitions/patch_resource-servers_by_id_body_options"}, "skip_consent_for_verifiable_first_party_clients": {"type": "boolean", "description": "Flag this entity as capable of skipping consent"}}}, "get_clients_response_ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}, "patch_connections_by_id_response_metadata": {"type": "object", "description": "Metadata associated with the connection, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "patch_users_by_id_body": {"type": "object", "properties": {"phone_number": {"default": "+199999999999999", "type": "string", "description": "The user's phone number (following the E.164 recommendation), only valid for users from SMS connections"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username. Only valid if the connection requires a username"}, "user_metadata": {"$ref": "#/definitions/patch_users_by_id_body_user_metadata"}, "email_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's email address was already verified, <code>false</code> otherwise"}, "verify_phone_number": {"default": false, "type": "boolean", "description": "<code>true</code> if the <code>phone_number</code> change needs to be verified, <code>false</code> otherwise. Only allowed if changing the phone number"}, "app_metadata": {"$ref": "#/definitions/patch_users_by_id_body_app_metadata"}, "connection": {"default": "Initial-Connection", "type": "string", "description": "The connection name. This field is not itself updateable but is needed when updating email, email_verified, username or password."}, "phone_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's phone_number was already verified, <code>false</code> otherwise. Only valid for SMS users"}, "client_id": {"default": "DaM8bokEXBWrTUFCiJjWn50jei6ardyX", "type": "string", "description": "The Auth0 clientID. Only useful when updating the email"}, "verify_email": {"default": false, "type": "boolean", "description": "<code>true</code> if the email change needs to be verified, <code>false</code> otherwise. Only allowed if changing the email"}, "password": {"default": "secret", "type": "string", "description": "The new password."}, "email": {"default": "john.doe@gmail.com", "type": "string", "description": "The new email.", "format": "email"}, "blocked": {"default": false, "type": "boolean", "description": "<code>true</code> if the user should be blocked, <code>false</code> if the user should be unblocked"}}}, "put_rules-configs_by_key_response": {"required": ["key", "value"], "type": "object", "properties": {"value": {"default": "MY_RULES_CONFIG_VALUE", "type": "string", "description": "The value for a rules config"}, "key": {"default": "MY_RULES_CONFIG_KEY", "type": "string", "description": "The key for a rules config"}}}, "post_provider_body": {"required": ["name", "credentials"], "type": "object", "properties": {"credentials": {"$ref": "#/definitions/post_provider_body_credentials"}, "default_from_address": {"type": "string", "description": "The default from address"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise (defaults to <code>true</code>)"}, "name": {"default": "mandrill", "enum": ["mandrill", "sendgrid", "sparkpost", "ses", "smtp"], "type": "string", "description": "The name of the email provider"}, "settings": {"$ref": "#/definitions/post_provider_body_settings"}}}, "post_connections_response": {"type": "object", "properties": {"name": {"default": "My connection", "type": "string", "description": "The name of the connection"}, "is_domain_connection": {"type": "boolean", "description": "True if the connection is domain level"}, "id": {"default": "con_0000000000000001", "type": "string", "description": "The connection's identifier"}, "enabled_clients": {"default": ["avUAvH1pgnZGgAGlv8guZLPoaOnjVJsM", "ScKKdrpyUwfkhOQP6KXItH32INgZf7Rb"], "items": {"type": "string", "description": "The client id"}, "type": "array", "description": "The ids of the clients for which the connection is enabled"}, "realms": {"items": {"type": "string", "description": "The realm where this connection belongs", "format": "connection-realm"}, "type": "array", "description": "Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm", "maxItems": 10}, "strategy": {"default": "auth0", "type": "string", "description": "The type of the connection, related to the identity provider"}, "options": {"$ref": "#/definitions/post_connections_response_options"}, "metadata": {"$ref": "#/definitions/post_connections_response_metadata"}}}, "post_clients_body_slack": {"default": {}, "required": ["team"], "type": "object", "properties": {"team": {"type": "string", "description": "Slack team name."}}}, "post_clients_body_salesforce_sandbox_api": {"default": {}, "type": "object", "properties": {"community_url_section": {"type": "string", "description": "The community url section"}, "principal": {"type": "string", "description": "The name of the property in the user object that maps to a Salesforce username, for example: 'email'"}, "clientid": {"type": "string", "description": "The Consumer Key assigned by Salesforce to the Connected App"}, "communityName": {"type": "string", "description": "The community name"}}}, "patch_clients_by_id_body_sharepoint": {"default": {}, "type": "object"}, "patch_clients_by_id_body_box": {"default": {}, "type": "object"}, "patch_settings_body_guardian_mfa_page": {"type": "object", "description": "Guardian page customization", "properties": {"html": {"type": "string", "description": "Replace default Guardian page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "enabled": {"default": false, "type": "boolean", "description": "<code>true</code> to use the custom html for Guardian page, <code>false</code> otherwise (default: <code>false</code>)"}}}, "patch_clients_by_id_body_salesforce_api": {"default": {}, "type": "object", "properties": {"community_url_section": {"type": "string", "description": "The community url section"}, "principal": {"type": "string", "description": "The name of the property in the user object that maps to a Salesforce username, for example: 'email'"}, "clientid": {"type": "string", "description": "The Consumer Key assigned by Salesforce to the Connected App"}, "communityName": {"type": "string", "description": "The community name"}}}, "post_rotate-secret_response_ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}, "get_clients_response_client_metadata": {"type": "object", "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "patch_users_by_id_body_user_metadata": {"default": {"hobby": "squash"}, "type": "object", "description": "Data related to the user that does not affect the application's core functionality. Send <code>null</code> to delete."}, "get_enrollments_by_id_response": {"required": ["id"], "type": "object", "properties": {"phone_number": {"default": "+1 999999999999", "type": "string", "description": "Phone number"}, "status": {"default": "pending", "enum": ["pending", "confirmed"], "type": "string"}, "last_auth": {"default": "2016-07-12T17:56:26.804Z", "type": "string", "description": "Last authentication date"}, "name": {"default": "iPhone 7", "type": "string", "description": "Device name (only Guardian)"}, "enrolled_at": {"default": "2016-07-12T17:56:26.804Z", "type": "string", "description": "Enrollment date"}, "identifier": {"default": "76dc-a90c-a88c-a90c-a88c-a88c-a90c", "type": "string", "description": "Device identifier (usually phone identifier)"}, "id": {"default": "dev_0000000000000001", "type": "string", "description": "Enrollment generated id"}}}, "patch_settings_body_change_password": {"type": "object", "description": "Change Password page customization", "properties": {"html": {"type": "string", "description": "Replace default change password page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "enabled": {"default": false, "type": "boolean", "description": "<code>true</code> to use the custom change password html, <code>false</code> otherwise (default: <code>false</code>)"}}}, "patch_settings_response_guardian_mfa_page": {"type": "object", "description": "Guardian page customization", "properties": {"html": {"type": "string", "description": "Replace default Guardian page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "enabled": {"default": false, "type": "boolean", "description": "<code>true</code> to use the custom html for Guardian page, <code>false</code> otherwise (default: <code>false</code>)"}}}, "patch_clients_by_id_body_aws": {"default": {}, "type": "object", "properties": {"role": {"type": "string", "description": "For example: 'arn:aws:iam::010616021751:role/foo'"}, "principal": {"type": "string", "description": "For example: 'arn:aws:iam::010616021751:saml-provider/idpname'"}}}, "post_verification-email_body": {"required": ["user_id"], "type": "object", "properties": {"user_id": {"default": "google-oauth2|1234", "type": "string", "description": "The user_id of the user to whom the email will be sent", "format": "user-id"}, "client_id": {"type": "string", "description": "The id of the client, if not provided the global one will be used", "format": "client-id"}}}, "get_grants_response": {"type": "object", "properties": {"scope": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}, "audience": {"type": "string", "description": "The grant's audience."}, "user_id": {"type": "string", "description": "The id of the user."}, "id": {"type": "string", "description": "The id of the grant."}, "clientID": {"type": "string", "description": "The id of the client."}}}, "patch_provider_response_settings": {"type": "object", "description": "Specific provider setting"}, "patch_users_by_id_response_app_metadata": {"type": "object", "description": "Data related to the user that does affect the application's core functionality."}, "patch_connections_by_id_body_password_expiration": {"required": ["enable"], "type": "object", "description": "Options for password expiration policy", "properties": {"expire_after": {"default": 90, "minimum": 0, "type": "integer", "maximum": 365}, "enable": {"type": "boolean"}, "warn_after": {"minimum": 0, "type": "integer", "maximum": 365}}}, "patch_connections_by_id_response_options": {"default": {}, "type": "object"}, "post_clients_body_zoom": {"default": {}, "type": "object", "properties": {"account": {"type": "string", "description": "The first segment of your Vanity URL, for example: 'https://{account}.zoom.us'"}}}, "patch_clients_by_id_body_springcm": {"default": {}, "type": "object"}, "patch_settings_body_flags": {"type": "object", "description": "Tenant flags", "properties": {"enable_apis_section": {"type": "boolean", "description": "This flag enables the API section in the Auth0 Management Dashboard."}, "enable_dynamic_client_registration": {"type": "boolean", "description": "This flag enables dynamic client registration."}, "enable_pipeline2": {"type": "boolean", "description": "This flag enables advanced API Authorization scenarios."}, "enable_client_connections": {"type": "boolean", "description": "This flag determines whether all current connections shall be enabled when a new <code>client</code> is created. Default value is <code>true</code>."}, "change_pwd_flow_v1": {"enum": [false], "type": "boolean", "description": "Enables the first version of the Change Password flow. We've deprecated this option and recommending a safer flow. This flag is only for backwards compatibility"}, "enable_custom_domain_in_emails": {"type": "boolean", "description": "If enabled, All your email links and urls will use your configured custom domain. If no custom domain is found the email operation will fail."}}}, "patch_provider_body_credentials": {"required": ["api_key"], "properties": {"api_key": {"type": "string", "description": "API Key"}}}, "get_clients_response_android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "patch_clients_by_id_body_wsfed": {"default": {}, "type": "object"}, "post_connections_body_upstream_params": {"type": "object", "description": "Options for adding parameters in the request to the upstream IdP"}, "get_clients_response_encryption_key": {"type": "object", "properties": {"cert": {"type": "string"}, "pub": {"type": "string"}, "subject": {"type": "string"}}}, "get_clients_by_id_response_client_metadata": {"type": "object", "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "patch_settings_response": {"type": "object", "properties": {"sandbox_versions_available": {"default": ["8", "4"], "items": {"type": "string"}, "type": "array", "description": "A set of available sandbox versions for the extensibility environment"}, "session_lifetime": {"default": 168, "type": "number", "description": "Login session lifetime, how long the session will stay valid (unit: hours)"}, "support_url": {"default": "https://mycompany.org/support", "type": "string", "description": "User support url", "format": "absolute-uri-or-empty"}, "picture_url": {"default": "https://mycompany.org/logo.png", "type": "string", "description": "The URL of the tenant logo (recommended size: 150x150)", "format": "absolute-uri-or-empty"}, "friendly_name": {"default": "My Company", "type": "string", "description": "The friendly name of the tenant"}, "support_email": {"default": "support@mycompany.org", "type": "string", "description": "User support email", "format": "email-or-empty"}, "flags": {"$ref": "#/definitions/patch_settings_response_flags"}, "guardian_mfa_page": {"$ref": "#/definitions/patch_settings_response_guardian_mfa_page"}, "idle_session_lifetime": {"default": 72, "type": "number", "description": "Force a user to login after they have been inactive for the specified number (unit: hours)"}, "change_password": {"$ref": "#/definitions/patch_settings_response_change_password"}, "error_page": {"$ref": "#/definitions/patch_settings_response_error_page"}, "sandbox_version": {"default": "8", "type": "string", "description": "The selected sandbox version to be used for the extensibility environment"}, "default_audience": {"type": "string", "description": "Default audience for API Authorization"}, "allowed_logout_urls": {"items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that are valid to redirect to after logout from Auth0"}, "default_directory": {"type": "string", "description": "Name of the connection that will be used for password grants at the token endpoint. Only the following connection types are supported: LDAP, AD, Database Connections, Passwordless, Windows Azure Active Directory, ADFS"}}}, "get_settings_response_guardian_mfa_page": {"type": "object", "description": "Guardian page customization", "properties": {"html": {"type": "string", "description": "Replace default Guardian page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "enabled": {"default": false, "type": "boolean", "description": "<code>true</code> to use the custom html for Guardian page, <code>false</code> otherwise (default: <code>false</code>)"}}}, "post_clients_body_rms": {"default": {}, "required": ["url"], "type": "object", "properties": {"url": {"type": "string", "description": "This is the URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it.", "format": "url"}}}, "patch_clients_by_id_body_azure_sb": {"default": {}, "type": "object", "properties": {"sasKeyName": {"type": "string", "description": "The shared access policy name defined in your Service Bus entity"}, "namespace": {"type": "string", "description": "Your Azure Service Bus namespace. The first segment of the Service Bus URL: http://YOUR_NAMESPACE.servicebus.windows.net"}, "expiration": {"type": "integer", "description": "Expiration in minutes for the generated token. Default: 5 minutes"}, "entityPath": {"type": "string", "description": "The entity you want to request a token for, for example: 'my-queue'"}, "sasKey": {"type": "string", "description": "The Primary Key associated with the shared access policy"}}}, "patch_connections_by_id_body_metadata": {"type": "object", "description": "Metadata associated with the connection, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "put_twilio_body": {"type": "object", "properties": {"messaging_service_sid": {"default": "5dEkAiHLPCuQ1uJj4qNXcAnERFAL6cpq", "type": "string", "description": "Copilot SID"}, "auth_token": {"default": "zw5Ku6z2sxhd0ZVXto5SDHX6KPDByJPU", "type": "string", "description": "Twilio Authentication token"}, "from": {"default": "+1223323", "type": "string", "description": "From number"}, "sid": {"default": "wywA2BH4VqTpfywiDuyDAYZL3xQjoO40", "type": "string", "description": "Twilio SID"}}}, "post_clients_response_scopes": {"default": {}, "type": "object"}, "patch_clients_by_id_body_azure_blob": {"default": {}, "type": "object", "properties": {"blobName": {"type": "string", "description": "The entity you want to request a token for: e.g. 'my-blob'. If left blank, the computed SAS will apply to the entire storage container"}, "containerName": {"type": "string", "description": "The container you want to request a token for: e.g. 'my-container'"}, "container_write": {"type": "boolean", "description": "Indicates that for any blob in the container the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account"}, "container_delete": {"type": "boolean", "description": "Indicates that the issued token has permission to delete any blob in the container"}, "signedIdentifier": {"type": "string", "description": "The shared access policy identifier defined in your storage account resource"}, "container_read": {"type": "boolean", "description": "Indicates that the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"}, "blob_write": {"type": "boolean", "description": "Indicates that the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account"}, "storageAccessKey": {"type": "string", "description": "The storage account access key associated storage account"}, "container_list": {"type": "boolean", "description": "Indicates that the issued token has permission to list blobs in the container"}, "accountName": {"type": "string", "description": "Your Azure storage account name. Just enter the first segment of the storage URL: http://<strong>YOUR ACCOUNT NAME</strong>.blob.core.windows.net"}, "blob_read": {"type": "boolean", "description": "Indicates that the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation"}, "expiration": {"minimum": 0, "type": "integer", "description": "Expiration in minutes for the generated token. Default: 5 minutes"}, "blob_delete": {"type": "boolean", "description": "Indicates that the issued token has permission to delete the blob"}}}, "post_email-verification_response": {"required": ["ticket"], "type": "object", "properties": {"ticket": {"default": "https://login.auth0.com/lo/verify_email?client_id=nsaPS2p3cargoFy82WT7betaOPOt3qSh&tenant=mdocs&bewit=bmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPdDNxU2hcMTQzMDY2MjE4MVxuRTcxM0RSeUNlbEpzUUJmaFVaS3A1NEdJbWFzSUZMYzRTdEFtY2NMMXhZPVx7ImVtYWloojoiZGFtaWtww2NoQGhvdG1haWwuY29tIiwidGVuYW50IjoiZHNjaGVua2tjwWFuIiwiY2xpZW50X2lkIjoibmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPiiqxU2giLCJjb25uZWN0aW9uIjoiRGFtaWmsdiwicmVzdWx0VXJsIjoiIn0", "type": "string", "description": "The URL that represents the ticket", "format": "url"}}}, "get_clients_by_id_response_mobile": {"type": "object", "description": "Configuration related to native mobile apps", "properties": {"android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}}}, "patch_clients_by_id_body_mobile": {"type": "object", "description": "Configuration related to native mobile apps", "properties": {"android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}}}, "post_users-exports_response": {"required": ["id", "type", "status", "connection"], "type": "object", "properties": {"status": {"default": "pending", "type": "string", "description": "The job's status"}, "format": {"default": "csv", "enum": ["json", "csv"], "type": "string", "description": "The format of the file. Valid values are: \"json\" and \"csv\"."}, "fields": {"default": [{"name": "user_id"}, {"name": "name"}, {"name": "email"}, {"export_as": "provider", "name": "identities[0].connection"}, {"name": "user_metadata.some_field"}], "items": {"required": ["name"], "type": "object", "properties": {"export_as": {"type": "string", "description": "The title of the column in the exported CSV."}, "name": {"type": "string", "description": "The name of the field in the profile."}}}, "type": "array", "description": "A list of fields to be included in the CSV. If omitted, a set of predefined fields will be exported.", "maxItems": 30}, "created_at": {"type": "string", "description": "The date when the job was created."}, "connection_id": {"default": "con_0000000000000001", "type": "string", "description": "The connection id of the connection from which users will be exported"}, "limit": {"default": 5, "minimum": 1, "type": "integer", "description": "Limit the number of records."}, "type": {"default": "users_export", "type": "string", "description": "The type of job"}, "id": {"default": "job_0000000000000001", "type": "string", "description": "The job's identifier. Useful to retrieve its status"}}}, "post_users-imports_response": {"required": ["id", "type", "status", "connection"], "type": "object", "properties": {"status": {"default": "pending", "type": "string", "description": "The job's status"}, "type": {"default": "users_import", "type": "string", "description": "The type of job"}, "created_at": {"type": "string", "description": "The date when the job was created."}, "connection_id": {"default": "con_0000000000000001", "type": "string", "description": "The connection id of the connection to which users will be inserted"}, "send_completion_email": {"default": true, "type": "boolean", "description": "if true, send the completion email to all tenant owners when the job is finished"}, "external_id": {"type": "string", "description": "Customer defined id"}, "id": {"default": "job_0000000000000001", "type": "string", "description": "The job's identifier. Useful to retrieve its status"}, "upsert": {"default": false, "type": "boolean", "description": "Update the user if already exists"}}}, "get_users_by_id_response_user_metadata": {"type": "object", "description": "Data related to the user that does not affect the application's core functionality."}, "post_password-change_response": {"required": ["ticket"], "type": "object", "properties": {"ticket": {"default": "https://login.auth0.com/lo/reset?client_id=nsaPS2p3cargoFy82WT7betaOPOt3qSh&tenant=mdocs&bewit=bmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPdDNxU2hcMTQzMDY2MjE4MVxuRTcxM0RSeUNlbEpzUUJmaFVaS3A1NEdJbWFzSUZMYzRTdEFtY2NMMXhZPVx7ImVtYWloojoiZGFtaWtww2NoQGhvdG1haWwuY29tIiwidGVuYW50IjoiZHNjaGVua2tjwWFuIiwiY2xpZW50X2lkIjoibmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPiiqxU2giLCJjb25uZWN0aW9uIjoiRGFtaWmsdiwicmVzdWx0VXJsIjoiIn0", "type": "string", "description": "The URL that represents the ticket", "format": "url"}}}, "get_logs_by_id_response": {"type": "object", "properties": {"user_id": {"default": "auth0|56c75c4e42b6359e98374bc2", "type": "string", "description": "The user's unique identifier"}, "ip": {"default": "190.257.209.19", "type": "string", "description": "The IP of the log event source"}, "client_name": {"default": "My application Name", "type": "string", "description": "The name of the client"}, "location_info": {"$ref": "#/definitions/get_logs_by_id_response_location_info"}, "details": {"$ref": "#/definitions/get_logs_by_id_response_details"}, "client_id": {"default": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww", "type": "string", "description": "The id of the client"}, "date": {"default": "2016-02-23T19:57:29.532Z", "type": "string", "description": "The date when the event was created"}, "type": {"default": "sapi", "type": "string", "description": "The log event type"}}}, "patch_clients_by_id_body_encryption_key": {"type": "object", "description": "The client's encryption key", "properties": {"cert": {"type": "string", "description": "Encryption certificate"}, "pub": {"type": "string", "description": "Encryption public key"}, "subject": {"type": "string", "description": "Certificate subject"}}}, "get_clients_by_id_response": {"type": "object", "properties": {"token_endpoint_auth_method": {"default": "none", "enum": ["none", "client_secret_post", "client_secret_basic"], "type": "string", "description": "Defines the requested authentication method for the token endpoint. Possible values are 'none' (public client without a client secret), 'client_secret_post' (client uses HTTP POST parameters) or 'client_secret_basic' (client uses HTTP Basic)"}, "client_aliases": {"items": {"type": "string"}, "type": "array"}, "cross_origin_auth": {"type": "boolean", "description": "<code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise (default: <code>false</code>)"}, "form_template": {"type": "string"}, "signing_keys": {"items": {"type": "object", "properties": {"cert": {"type": "string", "description": "Signing public key."}, "pkcs7": {"type": "string", "description": "Signing public key (PKCS#7 format)."}}}, "type": "array", "description": "Client signing keys."}, "custom_login_page_preview": {"type": "string"}, "allowed_clients": {"items": {"type": "string"}, "type": "array"}, "custom_login_page_on": {"default": true, "type": "boolean", "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise. Defaults to true"}, "app_type": {"type": "string", "description": "The type of application this client represents"}, "web_origins": {"items": {"type": "string"}, "type": "array", "description": "A set of URLs that represents valid web origins for use with web message response mode"}, "jwt_configuration": {"$ref": "#/definitions/get_clients_by_id_response_jwt_configuration"}, "oidc_conformant": {"default": false, "type": "boolean", "description": "Whether this client will conform to strict OIDC specifications"}, "logo_uri": {"type": "string", "description": "The URL of the client logo (recommended size: 150x150)"}, "cross_origin_loc": {"type": "string", "description": "Url fo the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page.", "format": "url"}, "description": {"type": "string", "description": "Free text description of the purpose of the Client. (Max character length: <code>140</code>)"}, "sso_disabled": {"default": false, "type": "boolean", "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "encryption_key": {"$ref": "#/definitions/get_clients_by_id_response_encryption_key"}, "callbacks": {"items": {"type": "string"}, "type": "array", "description": "The URLs that Auth0 can use to as a callback for the client"}, "sso": {"default": false, "type": "boolean"}, "client_id": {"default": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww", "type": "string", "description": "The id of the client"}, "custom_login_page": {"type": "string"}, "allowed_origins": {"items": {"type": "string"}, "type": "array"}, "allowed_logout_urls": {"items": {"type": "string"}, "type": "array"}, "name": {"default": "My application", "type": "string", "description": "The name of the client"}, "mobile": {"$ref": "#/definitions/get_clients_by_id_response_mobile"}, "client_metadata": {"$ref": "#/definitions/get_clients_by_id_response_client_metadata"}, "client_secret": {"default": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H", "type": "string", "description": "The client secret, it must not be public"}, "addons": {"$ref": "#/definitions/get_clients_by_id_response_addons"}, "is_first_party": {"default": false, "type": "boolean", "description": "Whether this client a first party client or not"}}}, "get_sns_response": {"type": "object", "properties": {"sns_gcm_platform_application_arn": {"default": "urn://yRMeBxgcCXh8MeTXPBAxhQnm6gP6f5nP", "type": "string"}, "aws_region": {"default": "us-west-1", "type": "string"}, "aws_access_key_id": {"default": "wywA2BH4VqTpfywiDuyDAYZL3xQjoO40", "type": "string"}, "aws_secret_access_key": {"default": "B1ER5JHDGJL3C4sVAKK7SBsq806R3IpL", "type": "string"}, "sns_apns_platform_application_arn": {"type": "string"}}}, "post_recovery-code-regeneration_response": {"type": "object", "properties": {"recovery_code": {"type": "string", "description": "New recovery code"}}}, "patch_clients_by_id_body_scopes": {"default": {}, "type": "object"}, "post_connections_body_validation": {"type": "object", "description": "Options for validation", "properties": {"username": {"required": ["max", "min"], "type": "object", "properties": {"max": {"default": 15, "type": "integer", "maximum": 128}, "min": {"default": 1, "minimum": 1, "type": "integer"}}}}}, "get_logs_by_user_response_details": {"default": {}, "type": "object", "description": "Additional (and very useful) details about the event. They don't have a specific schema as they vary based on event type."}, "get_connections_response_options": {"default": {}, "type": "object"}, "post_rules_body": {"required": ["name", "script"], "type": "object", "properties": {"script": {"default": "function (user, context, callback) {\n  callback(null, user, context);\n}", "type": "string", "description": "A script that contains the rule's code"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the rule is enabled, <code>false</code> otherwise"}, "name": {"default": "my-rule", "type": "string", "description": "The name of the rule. Can only contain alphanumeric characters, spaces and '-'. Can neither start nor end with '-' or spaces"}, "order": {"default": 2, "type": "number", "description": "The rule's order in relation to other rules. A rule with a lower order than another rule executes first. If no order is provided it will automatically be one greater than the current maximum"}}}, "post_connections_body_password_dictionary": {"required": ["enable"], "type": "object", "description": "Options for password dictionary policy", "properties": {"enable": {"type": "boolean"}, "dictionary": {"items": {"type": "string", "description": "Custom Password Dictionary entry. 50 characters max."}, "type": "array", "description": "Custom Password Dictionary. An array of up to 200 entries.", "maxItems": 200}}}, "post_clients_body_sharepoint": {"default": {}, "type": "object"}, "post_clients_body_zendesk": {"default": {}, "type": "object"}, "patch_settings_response_change_password": {"type": "object", "description": "Change Password page customization", "properties": {"html": {"type": "string", "description": "Replace default change password page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "enabled": {"default": false, "type": "boolean", "description": "<code>true</code> to use the custom change password html, <code>false</code> otherwise (default: <code>false</code>)"}}}, "get_clients_response_mobile": {"type": "object", "description": "Configuration related to native mobile apps", "properties": {"android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}}}, "post_clients_body_office365": {"default": {}, "type": "object"}, "patch_clients_by_id_body_mappings": {"type": "object"}, "patch_connections_by_id_body_password_complexity_options": {"type": "object", "description": "Password complexity options", "properties": {"min_length": {"minimum": 1, "type": "integer", "description": "Minimum password length", "maximum": 128}}}, "get_users_response_app_metadata": {"type": "object", "description": "Data related to the user that does affect the application's core functionality."}, "get_clients_response_addons": {"default": {}, "type": "object"}, "post_clients_body_echosign": {"default": {}, "type": "object"}, "post_users_response": {"type": "object", "properties": {"phone_number": {"default": "+199999999999999", "type": "string", "description": "The user's phone number (following the E.164 recommendation), only valid for users from SMS connections"}, "family_name": {"type": "string", "description": "The user's family name"}, "user_id": {"default": "usr_5457edea1b8f33391a000004", "type": "string", "description": "The user's unique identifier"}, "name": {"type": "string", "description": "The user's name"}, "picture": {"type": "string", "description": "The user's picture"}, "email_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's email is verified, <code>false</code> otherwise"}, "created_at": {"type": "string", "description": "The date when the user was created"}, "last_ip": {"type": "string", "description": "The last login IP address"}, "updated_at": {"type": "string", "description": "The date when the user was last updated (modified)"}, "app_metadata": {"$ref": "#/definitions/post_users_response_app_metadata"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "nickname": {"type": "string", "description": "The user's nickname"}, "last_login": {"type": "string", "description": "The last login date for this user"}, "given_name": {"type": "string", "description": "The user's given name"}, "phone_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's phone_number is verified, <code>false</code> otherwise, only valid for users from SMS connections"}, "multifactor": {"items": {"type": "string"}, "type": "array", "description": "The list of multifactor providers that the user has enrolled to"}, "user_metadata": {"$ref": "#/definitions/post_users_response_user_metadata"}, "identities": {"default": {"isSocial": false, "connection": "Initial-Connection", "user_id": "5457edea1b8f22891a000004", "provider": "auth0"}, "items": {"type": "object", "properties": {"isSocial": {"type": "boolean", "description": "<code>true</code> if the identity provider is a social provider, <code>false</code>s otherwise"}, "user_id": {"type": "string", "description": "The unique identifier for the user for the identity"}, "access_token": {"type": "string", "description": "IDP access token returned only if scope read:user_idp_token is defined"}, "profileData": {"type": "object", "properties": {"phone_number": {"type": "string", "description": "The user's phone number"}, "family_name": {"type": "string", "description": "The user's family name"}, "name": {"type": "string", "description": "The user's name"}, "email_verified": {"type": "boolean", "description": "Indicates whether the user's email is verified or not"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "given_name": {"type": "string", "description": "The user's given name"}, "email": {"type": "string", "description": "The user's email"}, "phone_verified": {"type": "boolean", "description": "Indicates whether the user's phone is verified or not"}}}, "connection": {"type": "string", "description": "The name of the connection for the identity"}, "provider": {"type": "string", "description": "The type of identity provider"}}}, "type": "array", "description": "An array of objects with information about the user's identities. More than one will exists in case accounts are linked"}, "email": {"default": "john.doe@gmail.com", "type": "string", "description": "The user's email", "format": "email"}, "logins_count": {"type": "integer", "description": "The number of logins for this user"}, "blocked": {"type": "boolean", "description": "Indicates whether the user was blocked by an administrator or not"}}}, "get_users-by-email_response_user_metadata": {"type": "object", "description": "Data related to the user that does not affect the application's core functionality."}, "get_logs_by_id_response_location_info": {"default": {}, "type": "object", "description": "Additional details about the event's ip trace location. If the ip matches either as private or localhost it returns an empty object."}, "post_clients_response_encryption_key": {"type": "object", "properties": {"cert": {"type": "string"}, "pub": {"type": "string"}, "subject": {"type": "string"}}}, "post_rotate-secret_response": {"type": "object", "properties": {"token_endpoint_auth_method": {"default": "none", "enum": ["none", "client_secret_post", "client_secret_basic"], "type": "string", "description": "Defines the requested authentication method for the token endpoint. Possible values are 'none' (public client without a client secret), 'client_secret_post' (client uses HTTP POST parameters) or 'client_secret_basic' (client uses HTTP Basic)"}, "client_aliases": {"items": {"type": "string"}, "type": "array"}, "cross_origin_auth": {"type": "boolean", "description": "<code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise (default: <code>false</code>)"}, "form_template": {"type": "string"}, "signing_keys": {"items": {"type": "object", "properties": {"cert": {"type": "string", "description": "Signing public key."}, "pkcs7": {"type": "string", "description": "Signing public key (PKCS#7 format)."}}}, "type": "array", "description": "Client signing keys."}, "custom_login_page_preview": {"type": "string"}, "allowed_clients": {"items": {"type": "string"}, "type": "array"}, "custom_login_page_on": {"default": true, "type": "boolean", "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise. Defaults to true"}, "app_type": {"type": "string", "description": "The type of application this client represents"}, "web_origins": {"items": {"type": "string"}, "type": "array", "description": "A set of URLs that represents valid web origins for use with web message response mode"}, "jwt_configuration": {"$ref": "#/definitions/post_rotate-secret_response_jwt_configuration"}, "oidc_conformant": {"default": false, "type": "boolean", "description": "Whether this client will conform to strict OIDC specifications"}, "logo_uri": {"type": "string", "description": "The URL of the client logo (recommended size: 150x150)"}, "cross_origin_loc": {"type": "string", "description": "Url fo the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page.", "format": "url"}, "description": {"type": "string", "description": "Free text description of the purpose of the Client. (Max character length: <code>140</code>)"}, "sso_disabled": {"default": false, "type": "boolean", "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "encryption_key": {"$ref": "#/definitions/post_rotate-secret_response_encryption_key"}, "callbacks": {"items": {"type": "string"}, "type": "array", "description": "The URLs that Auth0 can use to as a callback for the client"}, "sso": {"default": false, "type": "boolean"}, "client_id": {"default": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww", "type": "string", "description": "The id of the client"}, "custom_login_page": {"type": "string"}, "allowed_origins": {"items": {"type": "string"}, "type": "array"}, "allowed_logout_urls": {"items": {"type": "string"}, "type": "array"}, "name": {"default": "My application", "type": "string", "description": "The name of the client"}, "mobile": {"$ref": "#/definitions/post_rotate-secret_response_mobile"}, "client_metadata": {"$ref": "#/definitions/post_rotate-secret_response_client_metadata"}, "client_secret": {"default": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H", "type": "string", "description": "The client secret, it must not be public"}, "addons": {"$ref": "#/definitions/post_rotate-secret_response_addons"}, "is_first_party": {"default": false, "type": "boolean", "description": "Whether this client a first party client or not"}}}, "put_factors_by_name_body": {"required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean", "description": "States if this factor is enabled"}}}, "patch_connections_by_id_body_validation": {"type": "object", "description": "Options for validation", "properties": {"username": {"required": ["max", "min"], "type": "object", "properties": {"max": {"default": 15, "type": "integer", "maximum": 128}, "min": {"default": 1, "minimum": 1, "type": "integer"}}}}}, "get_clients_by_id_response_addons": {"default": {}, "type": "object"}, "post_clients_body_azure_blob": {"default": {}, "type": "object", "properties": {"blobName": {"type": "string", "description": "The entity you want to request a token for: e.g. 'my-blob'. If left blank, the computed SAS will apply to the entire storage container"}, "containerName": {"type": "string", "description": "The container you want to request a token for: e.g. 'my-container'"}, "container_write": {"type": "boolean", "description": "Indicates that for any blob in the container the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account"}, "container_delete": {"type": "boolean", "description": "Indicates that the issued token has permission to delete any blob in the container"}, "signedIdentifier": {"type": "string", "description": "The shared access policy identifier defined in your storage account resource"}, "container_read": {"type": "boolean", "description": "Indicates that the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"}, "blob_write": {"type": "boolean", "description": "Indicates that the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account"}, "storageAccessKey": {"type": "string", "description": "The storage account access key associated storage account"}, "container_list": {"type": "boolean", "description": "Indicates that the issued token has permission to list blobs in the container"}, "accountName": {"type": "string", "description": "Your Azure storage account name. Just enter the first segment of the storage URL: http://<strong>YOUR ACCOUNT NAME</strong>.blob.core.windows.net"}, "blob_read": {"type": "boolean", "description": "Indicates that the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation"}, "expiration": {"minimum": 0, "type": "integer", "description": "Expiration in minutes for the generated token. Default: 5 minutes"}, "blob_delete": {"type": "boolean", "description": "Indicates that the issued token has permission to delete the blob"}}}, "post_clients_body_wsfed": {"default": {}, "type": "object"}, "post_clients_body_cloudbees": {"default": {}, "type": "object"}, "put_factors_by_name_response": {"required": ["enabled"], "type": "object", "properties": {"enabled": {"default": true, "type": "boolean", "description": "States whether this factor is enabled"}}}, "patch_clients_by_id_body_jwt_configuration": {"type": "object", "description": "An object that holds settings related to how JWTs are created", "properties": {"lifetime_in_seconds": {"minimum": 0, "type": "integer", "description": "The amount of time (in seconds) that the token will be valid after being issued"}, "alg": {"enum": ["HS256", "RS256"], "type": "string", "description": "The algorithm used to sign the JsonWebToken"}, "scopes": {"default": {}, "type": "object"}}}, "get_logs_by_user_response_location_info": {"default": {}, "type": "object", "description": "Additional details about the event's ip trace location. If the ip matches either as private or localhost it returns an empty object."}, "get_users_by_id_response": {"type": "object", "properties": {"phone_number": {"default": "+199999999999999", "type": "string", "description": "The user's phone number (following the E.164 recommendation), only valid for users from SMS connections"}, "family_name": {"type": "string", "description": "The user's family name"}, "user_id": {"default": "usr_5457edea1b8f33391a000004", "type": "string", "description": "The user's unique identifier"}, "name": {"type": "string", "description": "The user's name"}, "picture": {"type": "string", "description": "The user's picture"}, "email_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's email is verified, <code>false</code> otherwise"}, "created_at": {"type": "string", "description": "The date when the user was created"}, "last_ip": {"type": "string", "description": "The last login IP address"}, "updated_at": {"type": "string", "description": "The date when the user was last updated (modified)"}, "app_metadata": {"$ref": "#/definitions/get_users_by_id_response_app_metadata"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "nickname": {"type": "string", "description": "The user's nickname"}, "last_login": {"type": "string", "description": "The last login date for this user"}, "given_name": {"type": "string", "description": "The user's given name"}, "phone_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's phone_number is verified, <code>false</code> otherwise, only valid for users from SMS connections"}, "multifactor": {"items": {"type": "string"}, "type": "array", "description": "The list of multifactor providers that the user has enrolled to"}, "user_metadata": {"$ref": "#/definitions/get_users_by_id_response_user_metadata"}, "identities": {"default": {"isSocial": false, "connection": "Initial-Connection", "user_id": "5457edea1b8f22891a000004", "provider": "auth0"}, "items": {"type": "object", "properties": {"isSocial": {"type": "boolean", "description": "<code>true</code> if the identity provider is a social provider, <code>false</code>s otherwise"}, "user_id": {"type": "string", "description": "The unique identifier for the user for the identity"}, "access_token": {"type": "string", "description": "IDP access token returned only if scope read:user_idp_token is defined"}, "profileData": {"type": "object", "properties": {"phone_number": {"type": "string", "description": "The user's phone number"}, "family_name": {"type": "string", "description": "The user's family name"}, "name": {"type": "string", "description": "The user's name"}, "email_verified": {"type": "boolean", "description": "Indicates whether the user's email is verified or not"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "given_name": {"type": "string", "description": "The user's given name"}, "email": {"type": "string", "description": "The user's email"}, "phone_verified": {"type": "boolean", "description": "Indicates whether the user's phone is verified or not"}}}, "connection": {"type": "string", "description": "The name of the connection for the identity"}, "provider": {"type": "string", "description": "The type of identity provider"}}}, "type": "array", "description": "An array of objects with information about the user's identities. More than one will exists in case accounts are linked"}, "email": {"default": "john.doe@gmail.com", "type": "string", "description": "The user's email", "format": "email"}, "logins_count": {"type": "integer", "description": "The number of logins for this user"}, "blocked": {"type": "boolean", "description": "Indicates whether the user was blocked by an administrator or not"}}}, "post_connections_body_password_expiration": {"required": ["enable"], "type": "object", "description": "Options for password expiration policy", "properties": {"expire_after": {"default": 90, "minimum": 0, "type": "integer", "maximum": 365}, "enable": {"type": "boolean"}, "warn_after": {"minimum": 0, "type": "integer", "maximum": 365}}}, "patch_resource-servers_by_id_body_options": {"type": "object", "description": "External API specific settings."}, "get_templates_response": {"required": ["enrollment_message", "verification_message"], "type": "object", "properties": {"verification_message": {"default": "{{code}} is your verification code for {{tenant.friendly_name}}", "type": "string", "description": "Message sent to the user when they are prompted to verify their account"}, "enrollment_message": {"default": "{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.", "type": "string", "description": "Message sent to the user when they are invited to enroll with a phone number"}}}, "get_connections_response_metadata": {"type": "object", "description": "Metadata associated with the connection, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "post_clients_body_layer": {"default": {}, "required": ["providerId", "keyId", "privateKey"], "type": "object", "properties": {"providerId": {"type": "string", "description": "The Provider ID of your Layer account"}, "keyId": {"type": "string", "description": "The Authentication Key identifier used to sign the Layer token"}, "privateKey": {"type": "string", "description": "The private key for signing the Layer token"}, "expiration": {"minimum": 0, "type": "integer", "description": "An optional expiration in minutes for the generated token. By default it will be 5 minutes"}, "principal": {"type": "string", "description": "The name of the property used as the unique user id in Layer. If none is specified user_id will be used"}}}, "patch_clients_by_id_body_samlp": {"default": {}, "type": "object", "properties": {"authnContextClassRef": {"type": "string"}, "mappings": {"type": "object"}, "digestAlgorithm": {"type": "string"}, "recipient": {"type": "string"}, "destination": {"type": "string"}, "mapIdentities": {"type": "boolean"}, "audience": {"type": "string"}, "signResponse": {"type": "boolean"}, "nameIdentifierProbes": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}, "signatureAlgorithm": {"type": "string"}, "mapUnknownClaimsAsIs": {"type": "boolean"}, "createUpnClaim": {"type": "boolean"}, "passthroughClaimsWithNoMapping": {"type": "boolean"}, "nameIdentifierFormat": {"type": "string"}, "lifetimeInSeconds": {"type": "integer"}, "issuer": {"type": "string"}}}, "post_provider_response": {"type": "object", "properties": {"credentials": {"$ref": "#/definitions/post_provider_response_credentials"}, "default_from_address": {"type": "string", "description": "The default from address"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise"}, "name": {"default": "sendgrid", "type": "string", "description": "The name of the email provider"}, "settings": {"$ref": "#/definitions/post_provider_response_settings"}}}, "put_twilio_response": {"type": "object", "properties": {"messaging_service_sid": {"default": "5dEkAiHLPCuQ1uJj4qNXcAnERFAL6cpq", "type": "string", "description": "Copilot SID"}, "auth_token": {"default": "zw5Ku6z2sxhd0ZVXto5SDHX6KPDByJPU", "type": "string", "description": "Twilio Authentication token"}, "from": {"default": "+1223323", "type": "string", "description": "From number"}, "sid": {"default": "wywA2BH4VqTpfywiDuyDAYZL3xQjoO40", "type": "string", "description": "Twilio SID"}}}, "post_rotate-secret_response_mobile": {"type": "object", "description": "Configuration related to native mobile apps", "properties": {"android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}}}, "post_clients_body_sentry": {"default": {}, "type": "object"}, "post_rotate-secret_response_addons": {"default": {}, "type": "object"}, "post_client-grants_body": {"required": ["client_id", "audience", "scope"], "type": "object", "properties": {"scope": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}, "audience": {"type": "string", "description": "The audience."}, "client_id": {"type": "string", "description": "The identifier of the client."}}}, "post_clients_response_jwt_configuration": {"type": "object", "description": "Configuration related to JWTs for the client", "properties": {"lifetime_in_seconds": {"default": 36000, "type": "integer", "description": "The amount of seconds the JWT will be valid (affects <code>exp</code> claim)"}, "alg": {"default": "HS256", "enum": ["HS256", "RS256"], "type": "string", "description": "Algorithm uses to sign JWTs"}, "secret_encoded": {"default": true, "type": "boolean", "description": "<code>true</code> if the client secret is base64 encoded, <code>false</code> otherwise. Defaults to <code>true</code>"}, "scopes": {"default": {}, "type": "object"}}}, "get_tokens_response": {"required": ["jti"], "type": "object", "properties": {"jti": {"type": "string", "description": "The jti of the JWT to blacklist"}, "aud": {"type": "string", "description": "The JWT's aud claim. The client_id of the client for which it was issued", "format": "client-id"}}}, "post_verify_response": {"required": ["custom_domain_id", "domain", "primary", "status", "type"], "type": "object", "properties": {"custom_domain_id": {"default": "cd_0000000000000001", "type": "string", "description": "The id of the custom domain."}, "status": {"default": "ready", "enum": ["disabled", "pending", "pending_verification", "ready"], "type": "string", "description": "The custom domain configuration status."}, "domain": {"default": "login.mycompany.com", "type": "string", "description": "The custom domain."}, "primary": {"default": false, "type": "boolean", "description": "<code>true</code> if the domain was marked as \"primary\", <code>false</code> otherwise."}, "origin_domain_name": {"default": "mycompany_cd_0000000000000001.edge.tenants.auth0.com", "type": "string", "description": "The intermediate address."}, "cname_api_key": {"default": "d4feca...", "type": "string", "description": "The cname api key header."}, "verification": {"$ref": "#/definitions/post_verify_response_verification"}, "type": {"default": "self_managed_certs", "enum": ["auth0_managed_certs", "self_managed_certs"], "type": "string", "description": "The custom domain provisioning type."}}}, "get_connections_response": {"type": "object", "properties": {"name": {"default": "My connection", "type": "string", "description": "The name of the connection"}, "is_domain_connection": {"type": "boolean", "description": "True if the connection is domain level"}, "id": {"default": "con_0000000000000001", "type": "string", "description": "The connection's identifier"}, "realms": {"items": {"type": "string", "description": "The realm where this connection belongs", "format": "connection-realm"}, "type": "array", "description": "Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm", "maxItems": 10}, "strategy": {"default": "auth0", "type": "string", "description": "The type of the connection, related to the identity provider"}, "options": {"$ref": "#/definitions/get_connections_response_options"}, "metadata": {"$ref": "#/definitions/get_connections_response_metadata"}}}, "post_identities_body": {"type": "object", "properties": {"link_with": {"default": "{SECONDARY_ACCOUNT_JWT}", "type": "string", "description": "The JWT of the secondary account being linked. If sending this parameter, the 'provider', 'user_id' and 'connection_id' params are invalid."}, "user_id": {"default": "191919191919191", "type": "string", "description": "The user_id of the secondary account being linked."}, "connection_id": {"type": "string", "description": "The id of the connection of the secondary account being linked. This is optional and may be useful in the case of having more than a database connection for the 'auth0' provider."}, "provider": {"default": "twitter", "enum": ["ad", "adfs", "amazon", "dropbox", "bitbucket", "aol", "auth0-adldap", "auth0-oidc", "auth0", "baidu", "bitly", "box", "custom", "daccount", "dwolla", "email", "evernote-sandbox", "evernote", "exact", "facebook", "fitbit", "flickr", "github", "google-apps", "google-oauth2", "guardian", "instagram", "ip", "linkedin", "miicard", "oauth1", "oauth2", "office365", "paypal", "paypal-sandbox", "pingfederate", "planningcenter", "renren", "salesforce-community", "salesforce-sandbox", "salesforce", "samlp", "sharepoint", "shopify", "sms", "soundcloud", "thecity-sandbox", "thecity", "thirtysevensignals", "twitter", "untappd", "vkontakte", "waad", "weibo", "windowslive", "wordpress", "yahoo", "yammer", "yandex"], "type": "string", "description": "The type of identity provider of the secondary account being linked."}}}, "get_logs_by_id_response_details": {"default": {}, "type": "object", "description": "Additional (and very useful) details about the event. They don't have a specific schema as they vary based on event type."}, "patch_email-templates_by_templateName_body": {"type": "object", "properties": {"body": {"type": "string", "description": "The body of the template."}, "from": {"default": "sender@auth0.com", "type": "string", "description": "The sender of the email."}, "resultUrl": {"type": "string", "description": "The URL to redirect the user to after a successful action."}, "enabled": {"type": "boolean", "description": "Whether or not the template is enabled."}, "syntax": {"default": "liquid", "type": "string", "description": "The syntax of the template body."}, "template": {"default": "verify_email", "enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "type": "string", "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy))."}, "includeEmailInRedirect": {"type": "boolean", "description": "Whether or not we include the email as part of the returnUrl in the reset_email"}, "urlLifetimeInSeconds": {"minimum": 0, "type": "number", "description": "The lifetime in seconds that the link within the email will be valid for."}, "subject": {"type": "string", "description": "The subject of the email."}}}, "post_clients_body_client_metadata": {"type": "object", "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "patch_provider_body": {"type": "object", "properties": {"credentials": {"$ref": "#/definitions/patch_provider_body_credentials"}, "default_from_address": {"type": "string", "description": "The default from address"}, "enabled": {"type": "boolean", "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise"}, "name": {"enum": ["mandrill", "sendgrid", "sparkpost", "ses", "smtp"], "type": "string", "description": "The name of the email provider"}, "settings": {"$ref": "#/definitions/patch_provider_body_settings"}}}, "patch_email-templates_by_templateName_response": {"type": "object", "properties": {"body": {"type": "string", "description": "The body of the template."}, "from": {"default": "sender@auth0.com", "type": "string", "description": "The sender of the email."}, "resultUrl": {"type": "string", "description": "The URL to redirect the user to after a successful action."}, "enabled": {"type": "boolean", "description": "Whether or not the template is enabled."}, "syntax": {"default": "liquid", "type": "string", "description": "The syntax of the template body."}, "template": {"default": "verify_email", "enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "type": "string", "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy))."}, "includeEmailInRedirect": {"type": "boolean", "description": "Whether or not we include the email as part of the returnUrl in the reset_email"}, "urlLifetimeInSeconds": {"type": "number", "description": "The lifetime in seconds that the link within the email will be valid for."}, "subject": {"type": "string", "description": "The subject of the email."}}}, "patch_connections_by_id_body_username": {"required": ["max", "min"], "type": "object", "properties": {"max": {"default": 15, "type": "integer", "maximum": 128}, "min": {"default": 1, "minimum": 1, "type": "integer"}}}, "post_custom-domains_body": {"required": ["domain", "type"], "type": "object", "properties": {"verification_method": {"default": "txt", "enum": ["txt"], "type": "string", "description": "The custom domain verification method."}, "domain": {"type": "string", "description": "Your custom domain."}, "type": {"enum": ["auth0_managed_certs", "self_managed_certs"], "type": "string", "description": "The custom domain provisioning type."}}}, "post_clients_body_mscrm": {"default": {}, "required": ["url"], "type": "object", "properties": {"url": {"type": "string", "description": "Microsoft Dynamics CRM application URL.", "format": "url"}}}, "post_clients_response": {"type": "object", "properties": {"token_endpoint_auth_method": {"default": "none", "enum": ["none", "client_secret_post", "client_secret_basic"], "type": "string", "description": "Defines the requested authentication method for the token endpoint. Possible values are 'none' (public client without a client secret), 'client_secret_post' (client uses HTTP POST parameters) or 'client_secret_basic' (client uses HTTP Basic)"}, "client_aliases": {"items": {"type": "string"}, "type": "array"}, "cross_origin_auth": {"type": "boolean", "description": "<code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise (default: <code>false</code>)"}, "form_template": {"type": "string"}, "signing_keys": {"items": {"type": "object", "properties": {"cert": {"type": "string", "description": "Signing public key."}, "pkcs7": {"type": "string", "description": "Signing public key (PKCS#7 format)."}}}, "type": "array", "description": "Client signing keys."}, "custom_login_page_preview": {"type": "string"}, "allowed_clients": {"items": {"type": "string"}, "type": "array"}, "custom_login_page_on": {"default": true, "type": "boolean", "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise. Defaults to true"}, "app_type": {"type": "string", "description": "The type of application this client represents"}, "web_origins": {"items": {"type": "string"}, "type": "array", "description": "A set of URLs that represents valid web origins for use with web message response mode"}, "jwt_configuration": {"$ref": "#/definitions/post_clients_response_jwt_configuration"}, "oidc_conformant": {"default": false, "type": "boolean", "description": "Whether this client will conform to strict OIDC specifications"}, "logo_uri": {"type": "string", "description": "The URL of the client logo (recommended size: 150x150)"}, "cross_origin_loc": {"type": "string", "description": "Url fo the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page.", "format": "url"}, "description": {"type": "string", "description": "Free text description of the purpose of the Client. (Max character length: <code>140</code>)"}, "sso_disabled": {"default": false, "type": "boolean", "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "encryption_key": {"$ref": "#/definitions/post_clients_response_encryption_key"}, "callbacks": {"items": {"type": "string"}, "type": "array", "description": "The URLs that Auth0 can use to as a callback for the client"}, "sso": {"default": false, "type": "boolean"}, "client_id": {"default": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww", "type": "string", "description": "The id of the client"}, "custom_login_page": {"type": "string"}, "allowed_origins": {"items": {"type": "string"}, "type": "array"}, "allowed_logout_urls": {"items": {"type": "string"}, "type": "array"}, "name": {"default": "My application", "type": "string", "description": "The name of the client"}, "mobile": {"$ref": "#/definitions/post_clients_response_mobile"}, "client_metadata": {"$ref": "#/definitions/post_clients_response_client_metadata"}, "client_secret": {"default": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H", "type": "string", "description": "The client secret, it must not be public"}, "addons": {"$ref": "#/definitions/post_clients_response_addons"}, "is_first_party": {"default": false, "type": "boolean", "description": "Whether this client a first party client or not"}}}, "post_password-change_body": {"type": "object", "properties": {"ttl_sec": {"minimum": 0, "type": "integer", "description": "The ticket's lifetime in seconds starting from the moment of creation. After expiration, the ticket cannot be used to change the user's password. If not specified or if you send 0, the Auth0 default lifetime of 5 days will be applied"}, "result_url": {"default": "http://myapp.com/callback", "type": "string", "description": "The user will be redirected to this endpoint once the ticket is used", "format": "url"}, "user_id": {"type": "string", "description": "The user_id of for which the ticket is to be created", "format": "user-id"}, "connection_id": {"default": "con_0000000000000001", "type": "string", "description": "The connection that provides the identity for which the password is to be changed. If sending this parameter, the email is also required and the user_id is invalid"}, "email": {"type": "string", "description": "The user's email", "format": "email"}}}, "patch_users_by_id_response_user_metadata": {"type": "object", "description": "Data related to the user that does not affect the application's core functionality."}, "patch_clients_by_id_body_mscrm": {"default": {}, "required": ["url"], "type": "object", "properties": {"url": {"type": "string", "description": "Microsoft Dynamics CRM application URL.", "format": "url"}}}, "get_results_response": {"type": "object", "properties": {"username": {"type": "string", "description": "Provided username"}, "exist": {"type": "boolean", "description": "Whether user was found"}, "email": {"type": "string", "description": "Provided user email"}, "matched": {"type": "boolean", "description": "Whether password matched the one provided"}}}, "patch_settings_body": {"type": "object", "properties": {"session_lifetime": {"default": 168, "minimum": 1, "type": "integer", "description": "Login session lifetime, how long the session will stay valid (unit: hours)", "maximum": 720}, "support_url": {"default": "https://mycompany.org/support", "type": "string", "description": "User support url", "format": "absolute-uri-or-empty"}, "picture_url": {"default": "https://mycompany.org/logo.png", "type": "string", "description": "The URL of the tenant logo (recommended size: 150x150)", "format": "absolute-uri-or-empty"}, "friendly_name": {"default": "My Company", "type": "string", "description": "The friendly name of the tenant"}, "support_email": {"default": "support@mycompany.org", "type": "string", "description": "User support email", "format": "email-or-empty"}, "flags": {"$ref": "#/definitions/patch_settings_body_flags"}, "guardian_mfa_page": {"$ref": "#/definitions/patch_settings_body_guardian_mfa_page"}, "idle_session_lifetime": {"default": 72, "minimum": 1, "type": "integer", "description": "Force a user to login after they have been inactive for the specified number (unit: hours)", "maximum": 720}, "change_password": {"$ref": "#/definitions/patch_settings_body_change_password"}, "error_page": {"$ref": "#/definitions/patch_settings_body_error_page"}, "sandbox_version": {"default": "8", "type": "string", "description": "The selected sandbox version to be used for the extensibility environment"}, "default_audience": {"type": "string", "description": "Default audience for API Authorization"}, "allowed_logout_urls": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that are valid to redirect to after logout from Auth0"}, "default_directory": {"type": "string", "description": "Name of the connection that will be used for password grants at the token endpoint. Only the following connection types are supported: LDAP, AD, Database Connections, Passwordless, Windows Azure Active Directory, ADFS"}}}, "patch_clients_by_id_body_sentry": {"default": {}, "type": "object"}, "get_email-templates_by_templateName_response": {"type": "object", "properties": {"body": {"type": "string", "description": "The body of the template."}, "from": {"default": "sender@auth0.com", "type": "string", "description": "The sender of the email."}, "resultUrl": {"type": "string", "description": "The URL to redirect the user to after a successful action."}, "enabled": {"type": "boolean", "description": "Whether or not the template is enabled."}, "syntax": {"default": "liquid", "type": "string", "description": "The syntax of the template body."}, "template": {"default": "verify_email", "enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "type": "string", "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy))."}, "includeEmailInRedirect": {"type": "boolean", "description": "Whether or not we include the email as part of the returnUrl in the reset_email"}, "urlLifetimeInSeconds": {"type": "number", "description": "The lifetime in seconds that the link within the email will be valid for."}, "subject": {"type": "string", "description": "The subject of the email."}}}, "patch_clients_by_id_response_ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}, "patch_clients_by_id_response_encryption_key": {"type": "object", "properties": {"cert": {"type": "string"}, "pub": {"type": "string"}, "subject": {"type": "string"}}}, "get_provider_response": {"type": "object", "properties": {"credentials": {"$ref": "#/definitions/get_provider_response_credentials"}, "default_from_address": {"type": "string", "description": "The default from address"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the email provider is enabled, <code>false</code> otherwise"}, "name": {"default": "sendgrid", "type": "string", "description": "The name of the email provider"}, "settings": {"$ref": "#/definitions/get_provider_response_settings"}}}, "patch_clients_by_id_response_addons": {"default": {}, "type": "object"}, "post_identities_response": {"required": ["provider", "user_id", "connection"], "type": "object", "properties": {"isSocial": {"type": "boolean", "description": "<code>true</code> if the identity provider is a social provider, <code>false</code>s otherwise"}, "user_id": {"default": "191919191919191", "type": "string", "description": "The unique identifier for the user for the identity."}, "access_token": {"type": "string", "description": "IDP access token returned only if scope read:user_idp_token is defined"}, "profileData": {"$ref": "#/definitions/post_identities_response_profileData"}, "connection": {"default": "twitter", "type": "string", "description": "The name of the connection for the identity."}, "provider": {"default": "twitter", "type": "string", "description": "The type of identity provider."}}}, "get_twilio_response": {"type": "object", "properties": {"messaging_service_sid": {"default": "5dEkAiHLPCuQ1uJj4qNXcAnERFAL6cpq", "type": "string", "description": "Copilot SID"}, "auth_token": {"default": "zw5Ku6z2sxhd0ZVXto5SDHX6KPDByJPU", "type": "string", "description": "Twilio Authentication token"}, "from": {"default": "+1223323", "type": "string", "description": "From number"}, "sid": {"default": "wywA2BH4VqTpfywiDuyDAYZL3xQjoO40", "type": "string", "description": "Twilio SID"}}}, "post_verify_response_verification": {"type": "object", "description": "The custom domain verification settings.", "properties": {"methods": {"minItems": 1, "items": {"required": ["name", "record"], "type": "object", "properties": {"record": {"default": "auth0-domain-verification=...", "type": "string", "description": "The value used to verify the custom domain."}, "name": {"default": "txt", "enum": ["cname", "txt"], "type": "string", "description": "The custom domain verification method."}}}, "type": "array", "description": "The custom domain verification methods."}}}, "post_rotate-secret_response_scopes": {"default": {}, "type": "object"}, "post_clients_body_wams": {"default": {}, "type": "object", "properties": {"masterkey": {"type": "string", "description": "The Windows Azure Mobile Services's master key"}}}, "patch_provider_response_credentials": {"type": "object", "description": "Provider credentials", "properties": {"api_user": {"type": "string", "description": "API User"}, "smtp_user": {"type": "string", "description": "SMTP user"}, "region": {"type": "string", "description": "AWS default region"}, "smtp_port": {"type": "integer", "description": "SMTP port"}, "smtp_host": {"type": "string", "description": "SMTP host"}, "accessKeyId": {"type": "string", "description": "AWS Access Key ID"}, "secretAccessKey": {"type": "string", "description": "AWS Secret Access Key"}, "smtp_pass": {"type": "string", "description": "SMTP password"}, "api_key": {"default": "your_api_key", "type": "string", "description": "API Key"}}}, "post_device-credentials_body": {"required": ["device_name", "type", "value", "device_id"], "type": "object", "properties": {"device_name": {"type": "string", "description": "The device's name, a value that must be easily recognized by the device's owner"}, "type": {"enum": ["public_key"], "type": "string", "description": "The type of the credential"}, "value": {"type": "string", "description": "A base64 encoded string with the value of the credential"}, "client_id": {"type": "string", "description": "The client_id of the client for which the credential will be created", "format": "client-id"}, "device_id": {"type": "string", "description": "A unique identifier for the device. Recommendation: use <a href='http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID'>this</a> for Android and <a href='https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDevice_Class/index.html#//apple_ref/occ/instp/UIDevice/identifierForVendor'>this</a> for iOS"}}}, "get_client-grants_response": {"type": "object", "properties": {"scope": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}, "audience": {"type": "string", "description": "The audience."}, "id": {"type": "string", "description": "The id of the client grant."}, "client_id": {"type": "string", "description": "The identifier of the client."}}}, "get_user-blocks_by_id_response": {"type": "object", "properties": {"blocked_for": {"default": [{"ip": "10.0.0.1", "identifier": "john.doe@gmail.com"}], "items": {"type": "object", "properties": {"ip": {"default": "10.0.0.1", "type": "string", "description": "IP Address"}, "connection": {"type": "string", "description": "Connection identifier"}, "identifier": {"default": "john.doe@gmail.com", "type": "string", "description": "Identifier (can be the user's `email`, `username` or `phone_number`)"}}}, "type": "array", "description": "Array of identifier + ip pairs"}}}, "patch_clients_by_id_body_concur": {"default": {}, "type": "object"}, "get_rules-configs_response": {"type": "object", "properties": {"key": {"default": "MY_RULES_CONFIG_KEY", "type": "string", "description": "The key for a rules config"}}}, "get_custom-domains_by_id_response_verification": {"type": "object", "description": "The custom domain verification settings.", "properties": {"methods": {"minItems": 1, "items": {"required": ["name", "record"], "type": "object", "properties": {"record": {"default": "auth0-domain-verification=...", "type": "string", "description": "The value used to verify the custom domain."}, "name": {"default": "txt", "enum": ["cname", "txt"], "type": "string", "description": "The custom domain verification method."}}}, "type": "array", "description": "The custom domain verification methods."}}}, "get_logs_response": {"type": "object", "properties": {"user_id": {"default": "auth0|56c75c4e42b6359e98374bc2", "type": "string", "description": "The user's unique identifier"}, "ip": {"default": "190.257.209.19", "type": "string", "description": "The IP of the log event source"}, "client_name": {"default": "My application Name", "type": "string", "description": "The name of the client"}, "location_info": {"$ref": "#/definitions/get_logs_response_location_info"}, "details": {"$ref": "#/definitions/get_logs_response_details"}, "client_id": {"default": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww", "type": "string", "description": "The id of the client"}, "date": {"default": "2016-02-23T19:57:29.532Z", "type": "string", "description": "The date when the event was created"}, "type": {"default": "sapi", "type": "string", "description": "The log event type"}}}, "patch_clients_by_id_body_salesforce": {"default": {}, "type": "object", "properties": {"entity_id": {"type": "string", "description": "The arbitrary logical URL that identifies the Saleforce resource. The format has to be 'https://whatever.com'", "format": "url"}}}, "patch_clients_by_id_body_slack": {"default": {}, "required": ["team"], "type": "object", "properties": {"team": {"type": "string", "description": "Slack team name."}}}, "post_connections_response_options": {"default": {}, "type": "object"}, "patch_settings_response_flags": {"type": "object", "description": "Tenant flags", "properties": {"enable_pipeline2": {"default": true, "type": "boolean", "description": "This flag enables advanced API Authorization scenarios."}, "enable_apis_section": {"default": false, "type": "boolean", "description": "This flag enables the APIs section."}, "enable_client_connections": {"default": true, "type": "boolean", "description": "This flag determines whether all current connections shall be enabled when a new <code>client</code> is created. Default value is <code>true</code>."}, "disable_impersonation": {"default": false, "type": "boolean", "description": "If set to <code>true</code> all Impersonation functionality is disabled for the Tenant. This is a read-only attribute."}, "change_pwd_flow_v1": {"default": false, "type": "boolean", "description": "Enables the first version of the Change Password flow. We've deprecated this option and recommending a safer flow. This flag is only for backwards compatibility"}}}, "post_clients_response_android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "patch_rules_by_id_body": {"type": "object", "properties": {"script": {"default": "function (user, context, callback) {\n  callback(null, user, context);\n}", "type": "string", "description": "A script that contains the rule's code"}, "enabled": {"default": true, "type": "boolean", "description": "<code>true</code> if the rule is enabled, <code>false</code> otherwise"}, "name": {"default": "my-rule", "type": "string", "description": "The name of the rule. Can only contain alphanumeric characters, spaces and '-'. Can neither start nor end with '-' or spaces"}, "order": {"default": 2, "type": "number", "description": "The rule's order in relation to other rules. A rule with a lower order than another rule executes first. Send <code>null</code> to delete"}}}, "get_factors_response": {"required": ["enabled"], "type": "object", "properties": {"enabled": {"default": true, "type": "boolean", "description": "States if this factor is enabled"}, "name": {"default": "sms", "enum": ["sms", "push-notification"], "type": "string", "description": "Factor name"}, "trial_expired": {"default": true, "type": "boolean", "description": "For factors with trial limits (e.g. SMS) states if those limits have been exceed"}}}, "post_email-templates_body": {"required": ["template", "body", "from", "subject", "syntax", "enabled"], "type": "object", "properties": {"body": {"type": "string", "description": "The body of the template."}, "from": {"default": "sender@auth0.com", "type": "string", "description": "The sender of the email."}, "resultUrl": {"type": "string", "description": "The URL to redirect the user to after a successful action."}, "enabled": {"type": "boolean", "description": "Whether or not the template is enabled."}, "syntax": {"default": "liquid", "type": "string", "description": "The syntax of the template body."}, "template": {"default": "verify_email", "enum": ["verify_email", "reset_email", "welcome_email", "blocked_account", "stolen_credentials", "enrollment_email", "mfa_oob_code", "change_password", "password_reset"], "type": "string", "description": "The template name (verify_email, reset_email, welcome_email, blocked_account, stolen_credentials, enrollment_email, mfa_oob_code, <s>change_password</s> (legacy), <s>password_reset</s> (legacy))."}, "includeEmailInRedirect": {"type": "boolean", "description": "Whether or not we include the email as part of the returnUrl in the reset_email"}, "urlLifetimeInSeconds": {"minimum": 0, "type": "number", "description": "The lifetime in seconds that the link within the email will be valid for."}, "subject": {"type": "string", "description": "The subject of the email."}}}, "post_users_body_user_metadata": {"default": {"hobby": "skydiving"}, "type": "object", "description": "Data related to the user that does not affect the application's core functionality"}, "patch_clients_by_id_body_firebase": {"default": {}, "type": "object", "properties": {"lifetime_in_seconds": {"type": "integer", "description": "Lifespan of the Token in seconds (SDK 3+)"}, "private_key": {"type": "string", "description": "The Private Key for signing the token. (SDK 3+)"}, "secret": {"type": "string", "description": "Firebase's secret"}, "client_email": {"type": "string", "description": "The ID of the Service Account you have created (SDK 3+)"}, "private_key_id": {"type": "string", "description": "Optional. ID of the private key (SDK 3+)"}}}, "post_connections_body_username": {"required": ["max", "min"], "type": "object", "properties": {"max": {"default": 15, "type": "integer", "maximum": 128}, "min": {"default": 1, "minimum": 1, "type": "integer"}}}, "get_connections_by_id_response_options": {"default": {}, "type": "object"}, "post_clients_body": {"required": ["name"], "type": "object", "properties": {"token_endpoint_auth_method": {"enum": ["none", "client_secret_post", "client_secret_basic"], "type": "string", "description": "Defines the requested authentication method for the token endpoint. Possible values are 'none' (public client without a client secret), 'client_secret_post' (client uses HTTP POST parameters) or 'client_secret_basic' (client uses HTTP Basic)"}, "custom_login_page_on": {"type": "boolean", "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise. Defaults to <code>true</code>"}, "cross_origin_auth": {"type": "boolean", "description": "<code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise (default: <code>false</code>)"}, "form_template": {"type": "string", "description": "Form template for WS-Federation protocol"}, "custom_login_page_preview": {"type": "string"}, "allowed_clients": {"uniqueItems": true, "items": {"type": "string"}, "type": "array", "description": "Ids of clients that will be allowed to perform delegation requests. Clients that will be allowed to make delegation request. By default, all your clients will be allowed. This field allows you to specify specific clients"}, "app_type": {"enum": ["native", "spa", "regular_web", "non_interactive", "rms", "box", "cloudbees", "concur", "dropbox", "mscrm", "echosign", "egnyte", "newrelic", "office365", "salesforce", "sentry", "sharepoint", "slack", "springcm", "zendesk", "zoom"], "type": "string", "description": "The type of application this client represents"}, "web_origins": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that represents valid web origins for use with web message response mode"}, "jwt_configuration": {"$ref": "#/definitions/post_clients_body_jwt_configuration"}, "oidc_conformant": {"default": false, "type": "boolean", "description": "Whether this client will conform to strict OIDC specifications"}, "logo_uri": {"type": "string", "description": "The URL of the client logo (recommended size: 150x150)", "format": "absolute-uri-or-empty"}, "cross_origin_loc": {"type": "string", "description": "Url fo the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page.", "format": "url"}, "description": {"type": "string", "description": "Free text description of the purpose of the Client. (Max character length: <code>140</code>)"}, "is_heroku_app": {"type": "boolean", "description": "<code>true</code> if the client is a heroku application, <code>false</code> otherwise"}, "sso_disabled": {"type": "boolean", "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "encryption_key": {"$ref": "#/definitions/post_clients_body_encryption_key"}, "callbacks": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that are valid to call back from Auth0 when authenticating users"}, "sso": {"type": "boolean", "description": "<code>true</code> to use Auth0 instead of the IdP to do Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "client_aliases": {"uniqueItems": true, "items": {"type": "string"}, "type": "array", "description": "List of audiences for SAML protocol"}, "custom_login_page": {"type": "string", "description": "The content (HTML, CSS, JS) of the custom login page"}, "allowed_origins": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that represents valid origins for CORS"}, "allowed_logout_urls": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that are valid to redirect to after logout from Auth0"}, "name": {"type": "string", "description": "The name of the client. Must contain at least one character. Does not allow '<' or '>'"}, "mobile": {"$ref": "#/definitions/post_clients_body_mobile"}, "grant_types": {"uniqueItems": true, "items": {"type": "string"}, "type": "array", "description": "A set of grant types that the client is authorized to use"}, "client_metadata": {"$ref": "#/definitions/post_clients_body_client_metadata"}, "addons": {"$ref": "#/definitions/post_clients_body_addons"}}}, "patch_clients_by_id_body_zoom": {"default": {}, "type": "object", "properties": {"account": {"type": "string", "description": "The first segment of your Vanity URL, for example: 'https://{account}.zoom.us'"}}}, "get_connections_by_id_response": {"type": "object", "properties": {"name": {"default": "My connection", "type": "string", "description": "The name of the connection"}, "is_domain_connection": {"type": "boolean", "description": "True if the connection is domain level"}, "id": {"default": "con_0000000000000001", "type": "string", "description": "The connection's identifier"}, "enabled_clients": {"default": ["avUAvH1pgnZGgAGlv8guZLPoaOnjVJsM", "ScKKdrpyUwfkhOQP6KXItH32INgZf7Rb"], "items": {"type": "string", "description": "The client id"}, "type": "array", "description": "The ids of the clients for which the connection is enabled"}, "realms": {"items": {"type": "string", "description": "The realm where this connection belongs", "format": "connection-realm"}, "type": "array", "description": "Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm", "maxItems": 10}, "strategy": {"default": "auth0", "type": "string", "description": "The type of the connection, related to the identity provider"}, "options": {"$ref": "#/definitions/get_connections_by_id_response_options"}, "metadata": {"$ref": "#/definitions/get_connections_by_id_response_metadata"}}}, "get_custom-domains_response": {"required": ["custom_domain_id", "domain", "primary", "status", "type"], "type": "object", "properties": {"custom_domain_id": {"default": "cd_0000000000000001", "type": "string", "description": "The id of the custom domain."}, "status": {"default": "ready", "enum": ["disabled", "pending", "pending_verification", "ready"], "type": "string", "description": "The custom domain configuration status."}, "domain": {"default": "login.mycompany.com", "type": "string", "description": "The custom domain."}, "primary": {"default": false, "type": "boolean", "description": "<code>true</code> if the domain was marked as \"primary\", <code>false</code> otherwise."}, "origin_domain_name": {"default": "mycompany_cd_0000000000000001.edge.tenants.auth0.com", "type": "string", "description": "The intermediate address."}, "verification": {"$ref": "#/definitions/get_custom-domains_response_verification"}, "type": {"default": "self_managed_certs", "enum": ["auth0_managed_certs", "self_managed_certs"], "type": "string", "description": "The custom domain provisioning type."}}}, "post_clients_body_azure_sb": {"default": {}, "type": "object", "properties": {"sasKeyName": {"type": "string", "description": "The shared access policy name defined in your Service Bus entity"}, "namespace": {"type": "string", "description": "Your Azure Service Bus namespace. The first segment of the Service Bus URL: http://YOUR_NAMESPACE.servicebus.windows.net"}, "expiration": {"type": "integer", "description": "Expiration in minutes for the generated token. Default: 5 minutes"}, "entityPath": {"type": "string", "description": "The entity you want to request a token for, for example: 'my-queue'"}, "sasKey": {"type": "string", "description": "The Primary Key associated with the shared access policy"}}}, "post_connections_body_password_history": {"required": ["enable"], "type": "object", "description": "Options for password history policy", "properties": {"enable": {"type": "boolean"}, "size": {"default": 8, "minimum": 0, "type": "integer", "maximum": 24}}}, "post_resource-servers_body": {"required": ["identifier"], "type": "object", "properties": {"verificationLocation": {"type": "string", "description": "A uri from which to retrieve JWKs for this resource server used for verifying the JWT sent to Auth0 for token introspection."}, "scopes": {"items": {"required": ["value"], "type": "object", "properties": {"description": {"type": "string", "description": "A user-friendly description of the scope."}, "value": {"type": "string", "description": "The scope value."}}}, "type": "array"}, "allow_offline_access": {"type": "boolean", "description": "Allows issuance of refresh tokens for this entity"}, "name": {"type": "string", "description": "The name of the resource server. Must contain at least one character. Does not allow '<' or '>'"}, "token_lifetime": {"minimum": 0, "type": "integer", "description": "The amount of time (in seconds) that the token will be valid after being issued", "maximum": 2592000}, "signing_secret": {"type": "string", "description": "The secret used to sign tokens when using symmetric algorithms"}, "signing_alg": {"enum": ["HS256", "RS256"], "type": "string", "description": "The algorithm used to sign tokens"}, "identifier": {"type": "string", "description": "The identifier of the resource server."}, "options": {"$ref": "#/definitions/post_resource-servers_body_options"}, "skip_consent_for_verifiable_first_party_clients": {"type": "boolean", "description": "Flag this entity as capable of skipping consent"}}}, "post_clients_body_jwt_configuration": {"type": "object", "description": "An object that holds settings related to how JWTs are created", "properties": {"lifetime_in_seconds": {"minimum": 0, "type": "integer", "description": "The amount of time (in seconds) that the token will be valid after being issued"}, "alg": {"enum": ["HS256", "RS256"], "type": "string", "description": "The algorithm used to sign the JsonWebToken"}, "scopes": {"default": {}, "type": "object"}}}, "patch_clients_by_id_body_android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "post_connections_body_metadata": {"type": "object", "description": "Metadata associated with the connection, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "post_clients_body_mappings": {"type": "object"}, "get_logs_response_location_info": {"default": {}, "type": "object", "description": "Additional details about the event's ip trace location. If the ip matches either as private or localhost it returns an empty object."}, "patch_clients_by_id_body_client_metadata": {"type": "object", "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "post_identities_response_profileData": {"type": "object", "properties": {"phone_number": {"type": "string", "description": "The user's phone number"}, "family_name": {"type": "string", "description": "The user's family name"}, "name": {"type": "string", "description": "The user's name"}, "email_verified": {"type": "boolean", "description": "Indicates whether the user's email is verified or not"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "given_name": {"type": "string", "description": "The user's given name"}, "email": {"type": "string", "description": "The user's email"}, "phone_verified": {"type": "boolean", "description": "Indicates whether the user's phone is verified or not"}}}, "post_clients_body_scopes": {"default": {}, "type": "object"}, "patch_clients_by_id_body_zendesk": {"default": {}, "type": "object"}, "patch_clients_by_id_body_salesforce_sandbox_api": {"default": {}, "type": "object", "properties": {"community_url_section": {"type": "string", "description": "The community url section"}, "principal": {"type": "string", "description": "The name of the property in the user object that maps to a Salesforce username, for example: 'email'"}, "clientid": {"type": "string", "description": "The Consumer Key assigned by Salesforce to the Connected App"}, "communityName": {"type": "string", "description": "The community name"}}}, "patch_clients_by_id_body": {"type": "object", "properties": {"token_endpoint_auth_method": {"enum": ["none", "client_secret_post", "client_secret_basic"], "type": "string", "description": "Defines the requested authentication method for the token endpoint. Possible values are 'none' (public client without a client secret), 'client_secret_post' (client uses HTTP POST parameters) or 'client_secret_basic' (client uses HTTP Basic)"}, "custom_login_page_on": {"type": "boolean", "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise."}, "cross_origin_auth": {"type": "boolean", "description": "<code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise (default: <code>false</code>)"}, "form_template": {"type": "string", "description": "Form template for WS-Federation protocol"}, "custom_login_page_preview": {"type": "string"}, "allowed_clients": {"uniqueItems": true, "items": {"type": "string"}, "type": "array", "description": "Ids of clients that will be allowed to perform delegation requests. Clients that will be allowed to make delegation request. By default, all your clients will be allowed. This field allows you to specify specific clients"}, "app_type": {"enum": ["native", "spa", "regular_web", "non_interactive", "rms", "box", "cloudbees", "concur", "dropbox", "mscrm", "echosign", "egnyte", "newrelic", "office365", "salesforce", "sentry", "sharepoint", "slack", "springcm", "zendesk", "zoom"], "type": "string", "description": "The type of application this client represents"}, "web_origins": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that represents valid web origins for use with web message response mode"}, "jwt_configuration": {"$ref": "#/definitions/patch_clients_by_id_body_jwt_configuration"}, "oidc_conformant": {"default": false, "type": "boolean", "description": "Whether this client will conform to strict OIDC specifications"}, "logo_uri": {"type": "string", "description": "The URL of the client logo (recommended size: 150x150)", "format": "absolute-uri-or-empty"}, "cross_origin_loc": {"type": "string", "description": "Url fo the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page.", "format": "url-or-null"}, "description": {"type": "string", "description": "Free text description of the purpose of the Client. (Max character length: <code>140</code>)"}, "sso_disabled": {"type": "boolean", "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "encryption_key": {"$ref": "#/definitions/patch_clients_by_id_body_encryption_key"}, "callbacks": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that are valid to call back from Auth0 when authenticating users"}, "sso": {"type": "boolean", "description": "<code>true</code> to use Auth0 instead of the IdP to do Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "client_aliases": {"uniqueItems": true, "items": {"type": "string"}, "type": "array", "description": "List of audiences for SAML protocol"}, "custom_login_page": {"type": "string", "description": "The content (HTML, CSS, JS) of the custom login page"}, "allowed_origins": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that represents valid origins for CORS"}, "allowed_logout_urls": {"uniqueItems": true, "items": {"type": "string", "format": "url"}, "type": "array", "description": "A set of URLs that are valid to redirect to after logout from Auth0"}, "name": {"type": "string", "description": "The name of the client. Must contain at least one character. Does not allow '<' or '>'."}, "mobile": {"$ref": "#/definitions/patch_clients_by_id_body_mobile"}, "grant_types": {"uniqueItems": true, "items": {"type": "string"}, "type": "array", "description": "A set of grant types that the client is authorized to use"}, "client_metadata": {"$ref": "#/definitions/patch_clients_by_id_body_client_metadata"}, "client_secret": {"type": "string", "description": "The secret used to sign tokens for the client"}, "addons": {"$ref": "#/definitions/patch_clients_by_id_body_addons"}}}, "patch_clients_by_id_body_addons": {"type": "object", "description": "The addons for the client", "properties": {"rms": {"default": {}, "required": ["url"], "type": "object", "properties": {"url": {"type": "string", "description": "This is the URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it.", "format": "url"}}}, "layer": {"default": {}, "required": ["providerId", "keyId", "privateKey"], "type": "object", "properties": {"providerId": {"type": "string", "description": "The Provider ID of your Layer account"}, "keyId": {"type": "string", "description": "The Authentication Key identifier used to sign the Layer token"}, "privateKey": {"type": "string", "description": "The private key for signing the Layer token"}, "expiration": {"minimum": 0, "type": "integer", "description": "An optional expiration in minutes for the generated token. By default it will be 5 minutes"}, "principal": {"type": "string", "description": "The name of the property used as the unique user id in Layer. If none is specified user_id will be used"}}}, "mscrm": {"default": {}, "required": ["url"], "type": "object", "properties": {"url": {"type": "string", "description": "Microsoft Dynamics CRM application URL.", "format": "url"}}}, "cloudbees": {"default": {}, "type": "object"}, "egnyte": {"default": {}, "type": "object"}, "newrelic": {"default": {}, "type": "object"}, "concur": {"default": {}, "type": "object"}, "sharepoint": {"default": {}, "type": "object"}, "office365": {"default": {}, "type": "object"}, "echosign": {"default": {}, "type": "object"}, "azure_sb": {"default": {}, "type": "object", "properties": {"sasKeyName": {"type": "string", "description": "The shared access policy name defined in your Service Bus entity"}, "namespace": {"type": "string", "description": "Your Azure Service Bus namespace. The first segment of the Service Bus URL: http://YOUR_NAMESPACE.servicebus.windows.net"}, "expiration": {"type": "integer", "description": "Expiration in minutes for the generated token. Default: 5 minutes"}, "entityPath": {"type": "string", "description": "The entity you want to request a token for, for example: 'my-queue'"}, "sasKey": {"type": "string", "description": "The Primary Key associated with the shared access policy"}}}, "aws": {"default": {}, "type": "object", "properties": {"role": {"type": "string", "description": "For example: 'arn:aws:iam::010616021751:role/foo'"}, "principal": {"type": "string", "description": "For example: 'arn:aws:iam::010616021751:saml-provider/idpname'"}}}, "springcm": {"default": {}, "type": "object"}, "firebase": {"default": {}, "type": "object", "properties": {"lifetime_in_seconds": {"type": "integer", "description": "Lifespan of the Token in seconds (SDK 3+)"}, "private_key": {"type": "string", "description": "The Private Key for signing the token. (SDK 3+)"}, "secret": {"type": "string", "description": "Firebase's secret"}, "client_email": {"type": "string", "description": "The ID of the Service Account you have created (SDK 3+)"}, "private_key_id": {"type": "string", "description": "Optional. ID of the private key (SDK 3+)"}}}, "wams": {"default": {}, "type": "object", "properties": {"masterkey": {"type": "string", "description": "The Windows Azure Mobile Services's master key"}}}, "dropbox": {"default": {}, "type": "object"}, "salesforce_sandbox_api": {"default": {}, "type": "object", "properties": {"community_url_section": {"type": "string", "description": "The community url section"}, "principal": {"type": "string", "description": "The name of the property in the user object that maps to a Salesforce username, for example: 'email'"}, "clientid": {"type": "string", "description": "The Consumer Key assigned by Salesforce to the Connected App"}, "communityName": {"type": "string", "description": "The community name"}}}, "samlp": {"default": {}, "type": "object", "properties": {"authnContextClassRef": {"type": "string"}, "mappings": {"type": "object"}, "digestAlgorithm": {"type": "string"}, "recipient": {"type": "string"}, "destination": {"type": "string"}, "mapIdentities": {"type": "boolean"}, "audience": {"type": "string"}, "signResponse": {"type": "boolean"}, "nameIdentifierProbes": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}, "signatureAlgorithm": {"type": "string"}, "mapUnknownClaimsAsIs": {"type": "boolean"}, "createUpnClaim": {"type": "boolean"}, "passthroughClaimsWithNoMapping": {"type": "boolean"}, "nameIdentifierFormat": {"type": "string"}, "lifetimeInSeconds": {"type": "integer"}, "issuer": {"type": "string"}}}, "wsfed": {"default": {}, "type": "object"}, "box": {"default": {}, "type": "object"}, "salesforce_api": {"default": {}, "type": "object", "properties": {"community_url_section": {"type": "string", "description": "The community url section"}, "principal": {"type": "string", "description": "The name of the property in the user object that maps to a Salesforce username, for example: 'email'"}, "clientid": {"type": "string", "description": "The Consumer Key assigned by Salesforce to the Connected App"}, "communityName": {"type": "string", "description": "The community name"}}}, "salesforce": {"default": {}, "type": "object", "properties": {"entity_id": {"type": "string", "description": "The arbitrary logical URL that identifies the Saleforce resource. The format has to be 'https://whatever.com'", "format": "url"}}}, "slack": {"default": {}, "required": ["team"], "type": "object", "properties": {"team": {"type": "string", "description": "Slack team name."}}}, "sentry": {"default": {}, "type": "object"}, "zoom": {"default": {}, "type": "object", "properties": {"account": {"type": "string", "description": "The first segment of your Vanity URL, for example: 'https://{account}.zoom.us'"}}}, "azure_blob": {"default": {}, "type": "object", "properties": {"blobName": {"type": "string", "description": "The entity you want to request a token for: e.g. 'my-blob'. If left blank, the computed SAS will apply to the entire storage container"}, "containerName": {"type": "string", "description": "The container you want to request a token for: e.g. 'my-container'"}, "container_write": {"type": "boolean", "description": "Indicates that for any blob in the container the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account"}, "container_delete": {"type": "boolean", "description": "Indicates that the issued token has permission to delete any blob in the container"}, "signedIdentifier": {"type": "string", "description": "The shared access policy identifier defined in your storage account resource"}, "container_read": {"type": "boolean", "description": "Indicates that the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation"}, "blob_write": {"type": "boolean", "description": "Indicates that the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account"}, "storageAccessKey": {"type": "string", "description": "The storage account access key associated storage account"}, "container_list": {"type": "boolean", "description": "Indicates that the issued token has permission to list blobs in the container"}, "accountName": {"type": "string", "description": "Your Azure storage account name. Just enter the first segment of the storage URL: http://<strong>YOUR ACCOUNT NAME</strong>.blob.core.windows.net"}, "blob_read": {"type": "boolean", "description": "Indicates that the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation"}, "expiration": {"minimum": 0, "type": "integer", "description": "Expiration in minutes for the generated token. Default: 5 minutes"}, "blob_delete": {"type": "boolean", "description": "Indicates that the issued token has permission to delete the blob"}}}, "zendesk": {"default": {}, "type": "object"}, "sap_api": {"default": {}, "type": "object", "properties": {"servicePassword": {"type": "string", "description": "API calls to the token endpoint are authenticated with this password. Usually from a service account"}, "tokenEndpointUrl": {"type": "string", "description": "Your SAP OData server OAuth2 Token Endpoint URL", "format": "url"}, "clientid": {"type": "string", "description": "Your SAP client ID"}, "scope": {"type": "string", "description": "The requested scope for SAP APIs"}, "usernameAttribute": {"type": "string", "description": "The name of the property in the user object that maps to a SAP username, for example: 'email'"}, "nameIdentifierFormat": {"type": "string", "description": "The NameID element of the Subject can be used to express the user's identity"}}}}}, "post_users_body": {"required": ["connection"], "type": "object", "properties": {"phone_number": {"default": "+199999999999999", "type": "string", "description": "The user's phone number (following the E.164 recommendation), only valid for users to be added to SMS connections"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username. Only valid if the connection requires a username"}, "user_id": {"type": "string", "description": "The id of the user"}, "email_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's email is verified, <code>false</code> otherwise. If it is <code>true</code> then the user will not receive a verification email, unless <code>verify_email: true</code> was specified"}, "app_metadata": {"$ref": "#/definitions/post_users_body_app_metadata"}, "connection": {"default": "Initial-Connection", "type": "string", "description": "The connection the user belongs to"}, "phone_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's phone number is verified, <code>false</code> otherwise. When the user is added to a SMS connection, they will not receive an verification SMS if this is <code>true</code>."}, "user_metadata": {"$ref": "#/definitions/post_users_body_user_metadata"}, "verify_email": {"default": false, "type": "boolean", "description": "If <code>true</code>, the user will receive a verification email after creation, even if created with <code>email_verified</code> set to <code>true</code>. If <code>false</code>, the user will not receive a verification email, even if created with <code>email_verified</code> set to <code>false</code>. If unspecified, defaults to the behavior determined by the value of <code>email_verified</code>."}, "password": {"default": "secret", "type": "string", "description": "The user's password (mandatory for non SMS connections)"}, "email": {"default": "john.doe@gmail.com", "type": "string", "description": "The user's email", "format": "email"}}}, "get_connections_by_id_response_metadata": {"type": "object", "description": "Metadata associated with the connection, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "patch_clients_by_id_body_sap_api": {"default": {}, "type": "object", "properties": {"servicePassword": {"type": "string", "description": "API calls to the token endpoint are authenticated with this password. Usually from a service account"}, "tokenEndpointUrl": {"type": "string", "description": "Your SAP OData server OAuth2 Token Endpoint URL", "format": "url"}, "clientid": {"type": "string", "description": "Your SAP client ID"}, "scope": {"type": "string", "description": "The requested scope for SAP APIs"}, "usernameAttribute": {"type": "string", "description": "The name of the property in the user object that maps to a SAP username, for example: 'email'"}, "nameIdentifierFormat": {"type": "string", "description": "The NameID element of the Subject can be used to express the user's identity"}}}, "patch_clients_by_id_body_layer": {"default": {}, "required": ["providerId", "keyId", "privateKey"], "type": "object", "properties": {"providerId": {"type": "string", "description": "The Provider ID of your Layer account"}, "keyId": {"type": "string", "description": "The Authentication Key identifier used to sign the Layer token"}, "privateKey": {"type": "string", "description": "The private key for signing the Layer token"}, "expiration": {"minimum": 0, "type": "integer", "description": "An optional expiration in minutes for the generated token. By default it will be 5 minutes"}, "principal": {"type": "string", "description": "The name of the property used as the unique user id in Layer. If none is specified user_id will be used"}}}, "get_users_response": {"type": "object", "properties": {"phone_number": {"default": "+199999999999999", "type": "string", "description": "The user's phone number (following the E.164 recommendation), only valid for users from SMS connections"}, "family_name": {"type": "string", "description": "The user's family name"}, "user_id": {"default": "usr_5457edea1b8f33391a000004", "type": "string", "description": "The user's unique identifier"}, "name": {"type": "string", "description": "The user's name"}, "picture": {"type": "string", "description": "The user's picture"}, "email_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's email is verified, <code>false</code> otherwise"}, "created_at": {"type": "string", "description": "The date when the user was created"}, "last_ip": {"type": "string", "description": "The last login IP address"}, "updated_at": {"type": "string", "description": "The date when the user was last updated (modified)"}, "app_metadata": {"$ref": "#/definitions/get_users_response_app_metadata"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "nickname": {"type": "string", "description": "The user's nickname"}, "last_login": {"type": "string", "description": "The last login date for this user"}, "given_name": {"type": "string", "description": "The user's given name"}, "phone_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's phone_number is verified, <code>false</code> otherwise, only valid for users from SMS connections"}, "multifactor": {"items": {"type": "string"}, "type": "array", "description": "The list of multifactor providers that the user has enrolled to"}, "user_metadata": {"$ref": "#/definitions/get_users_response_user_metadata"}, "identities": {"default": {"isSocial": false, "connection": "Initial-Connection", "user_id": "5457edea1b8f22891a000004", "provider": "auth0"}, "items": {"type": "object", "properties": {"isSocial": {"type": "boolean", "description": "<code>true</code> if the identity provider is a social provider, <code>false</code>s otherwise"}, "user_id": {"type": "string", "description": "The unique identifier for the user for the identity"}, "access_token": {"type": "string", "description": "IDP access token returned only if scope read:user_idp_token is defined"}, "profileData": {"type": "object", "properties": {"phone_number": {"type": "string", "description": "The user's phone number"}, "family_name": {"type": "string", "description": "The user's family name"}, "name": {"type": "string", "description": "The user's name"}, "email_verified": {"type": "boolean", "description": "Indicates whether the user's email is verified or not"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "given_name": {"type": "string", "description": "The user's given name"}, "email": {"type": "string", "description": "The user's email"}, "phone_verified": {"type": "boolean", "description": "Indicates whether the user's phone is verified or not"}}}, "connection": {"type": "string", "description": "The name of the connection for the identity"}, "provider": {"type": "string", "description": "The type of identity provider"}}}, "type": "array", "description": "An array of objects with information about the user's identities. More than one will exists in case accounts are linked"}, "email": {"default": "john.doe@gmail.com", "type": "string", "description": "The user's email", "format": "email"}, "logins_count": {"type": "integer", "description": "The number of logins for this user"}, "blocked": {"type": "boolean", "description": "Indicates whether the user was blocked by an administrator or not"}}}, "get_resource-servers_by_id_response": {"type": "object", "properties": {"scopes": {"items": {"required": ["value"], "type": "object", "properties": {"description": {"type": "string", "description": "A user-friendly description of the scope."}, "value": {"type": "string", "description": "The scope value."}}}, "type": "array"}, "allow_offline_access": {"type": "boolean", "description": "Allows issuance of refresh tokens for this entity"}, "name": {"type": "string", "description": "The name of the resource server."}, "token_lifetime_for_web": {"type": "integer", "description": "The amount of time (in seconds) that the token will be valid after being issued from browser based flows. Value cannot be larger than token_lifetime."}, "token_lifetime": {"type": "integer", "description": "The amount of time (in seconds) that the token will be valid after being issued"}, "signing_secret": {"type": "string", "description": "The secret used to sign tokens when using symmetric algorithms"}, "is_system": {"type": "boolean", "description": "Whether this API is a system API"}, "signing_alg": {"enum": ["HS256", "RS256"], "type": "string", "description": "The algorithm used to sign tokens"}, "identifier": {"type": "string", "description": "The identifier of the resource server."}, "id": {"type": "string", "description": "The id of the resource server."}, "skip_consent_for_verifiable_first_party_clients": {"type": "boolean", "description": "Flag this entity as capable of skipping consent"}}}, "patch_clients_by_id_response": {"type": "object", "properties": {"token_endpoint_auth_method": {"default": "none", "enum": ["none", "client_secret_post", "client_secret_basic"], "type": "string", "description": "Defines the requested authentication method for the token endpoint. Possible values are 'none' (public client without a client secret), 'client_secret_post' (client uses HTTP POST parameters) or 'client_secret_basic' (client uses HTTP Basic)"}, "client_aliases": {"items": {"type": "string"}, "type": "array"}, "cross_origin_auth": {"type": "boolean", "description": "<code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise (default: <code>false</code>)"}, "form_template": {"type": "string"}, "signing_keys": {"items": {"type": "object", "properties": {"cert": {"type": "string", "description": "Signing public key."}, "pkcs7": {"type": "string", "description": "Signing public key (PKCS#7 format)."}}}, "type": "array", "description": "Client signing keys."}, "custom_login_page_preview": {"type": "string"}, "allowed_clients": {"items": {"type": "string"}, "type": "array"}, "custom_login_page_on": {"default": true, "type": "boolean", "description": "<code>true</code> if the custom login page is to be used, <code>false</code> otherwise. Defaults to true"}, "app_type": {"type": "string", "description": "The type of application this client represents"}, "web_origins": {"items": {"type": "string"}, "type": "array", "description": "A set of URLs that represents valid web origins for use with web message response mode"}, "jwt_configuration": {"$ref": "#/definitions/patch_clients_by_id_response_jwt_configuration"}, "oidc_conformant": {"default": false, "type": "boolean", "description": "Whether this client will conform to strict OIDC specifications"}, "logo_uri": {"type": "string", "description": "The URL of the client logo (recommended size: 150x150)"}, "cross_origin_loc": {"type": "string", "description": "Url fo the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page.", "format": "url"}, "description": {"type": "string", "description": "Free text description of the purpose of the Client. (Max character length: <code>140</code>)"}, "sso_disabled": {"default": false, "type": "boolean", "description": "<code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)"}, "encryption_key": {"$ref": "#/definitions/patch_clients_by_id_response_encryption_key"}, "callbacks": {"items": {"type": "string"}, "type": "array", "description": "The URLs that Auth0 can use to as a callback for the client"}, "sso": {"default": false, "type": "boolean"}, "client_id": {"default": "AaiyAPdpYdesoKnqjj8HJqRn4T5titww", "type": "string", "description": "The id of the client"}, "custom_login_page": {"type": "string"}, "allowed_origins": {"items": {"type": "string"}, "type": "array"}, "allowed_logout_urls": {"items": {"type": "string"}, "type": "array"}, "name": {"default": "My application", "type": "string", "description": "The name of the client"}, "mobile": {"$ref": "#/definitions/patch_clients_by_id_response_mobile"}, "client_metadata": {"$ref": "#/definitions/patch_clients_by_id_response_client_metadata"}, "client_secret": {"default": "MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H", "type": "string", "description": "The client secret, it must not be public"}, "addons": {"$ref": "#/definitions/patch_clients_by_id_response_addons"}, "is_first_party": {"default": false, "type": "boolean", "description": "Whether this client a first party client or not"}}}, "put_templates_body": {"required": ["enrollment_message", "verification_message"], "type": "object", "properties": {"verification_message": {"default": "{{code}} is your verification code for {{tenant.friendly_name}}", "type": "string", "description": "Message sent to the user when they are prompted to verify their account"}, "enrollment_message": {"default": "{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.", "type": "string", "description": "Message sent to the user when they are invited to enroll with a phone number"}}}, "post_clients_body_ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}, "post_clients_response_mobile": {"type": "object", "description": "Configuration related to native mobile apps", "properties": {"android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}}}, "patch_connections_by_id_body_password_history": {"required": ["enable"], "type": "object", "description": "Options for password history policy", "properties": {"enable": {"type": "boolean"}, "size": {"default": 8, "minimum": 0, "type": "integer", "maximum": 24}}}, "post_connections_body_password_no_personal_info": {"required": ["enable"], "type": "object", "description": "Options for password expiration policy", "properties": {"enable": {"type": "boolean"}}}, "patch_settings_response_error_page": {"type": "object", "description": "Tenant error page customization", "properties": {"url": {"default": "https://mycompany.org/error", "type": "string", "description": "Redirect to specified url instead of show the default error page", "format": "absolute-uri-or-empty"}, "html": {"type": "string", "description": "Replace default error page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "show_log_link": {"default": false, "type": "boolean", "description": "<code>true</code> to show link to log as part of the default error page, <code>false</code> otherwise (default: <code>true</code>)"}}}, "post_verification-email_response": {"required": ["id", "type", "status"], "type": "object", "properties": {"status": {"default": "completed", "type": "string", "description": "The job's status"}, "created_at": {"type": "string", "description": "The date when the job was created."}, "type": {"default": "verification_email", "type": "string", "description": "The type of job"}, "id": {"default": "job_0000000000000001", "type": "string", "description": "The job's identifier. Useful to retrieve its status"}}}, "post_ticket_body": {"required": ["user_id"], "type": "object", "properties": {"user_id": {"type": "string", "description": "user_id for the enrollment ticket", "format": "user-id"}, "email": {"type": "string", "description": "alternate email to which the enrollment email will be sent. Optional - by default, the email will be sent to the user's default address", "format": "email"}, "send_mail": {"type": "boolean", "description": "Send an email to the user to start the enrollment"}}}, "patch_clients_by_id_response_client_metadata": {"type": "object", "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed."}, "patch_clients_by_id_body_rms": {"default": {}, "required": ["url"], "type": "object", "properties": {"url": {"type": "string", "description": "This is the URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it.", "format": "url"}}}, "post_clients_body_samlp": {"default": {}, "type": "object", "properties": {"authnContextClassRef": {"type": "string"}, "mappings": {"type": "object"}, "digestAlgorithm": {"type": "string"}, "recipient": {"type": "string"}, "destination": {"type": "string"}, "mapIdentities": {"type": "boolean"}, "audience": {"type": "string"}, "signResponse": {"type": "boolean"}, "nameIdentifierProbes": {"uniqueItems": true, "items": {"type": "string"}, "type": "array"}, "signatureAlgorithm": {"type": "string"}, "mapUnknownClaimsAsIs": {"type": "boolean"}, "createUpnClaim": {"type": "boolean"}, "passthroughClaimsWithNoMapping": {"type": "boolean"}, "nameIdentifierFormat": {"type": "string"}, "lifetimeInSeconds": {"type": "integer"}, "issuer": {"type": "string"}}}, "patch_clients_by_id_body_cloudbees": {"default": {}, "type": "object"}, "post_provider_response_credentials": {"type": "object", "description": "Provider credentials", "properties": {"api_user": {"type": "string", "description": "API User"}, "smtp_user": {"type": "string", "description": "SMTP user"}, "region": {"type": "string", "description": "AWS default region"}, "smtp_port": {"type": "integer", "description": "SMTP port"}, "smtp_host": {"type": "string", "description": "SMTP host"}, "accessKeyId": {"type": "string", "description": "AWS Access Key ID"}, "secretAccessKey": {"type": "string", "description": "AWS Secret Access Key"}, "smtp_pass": {"type": "string", "description": "SMTP password"}, "api_key": {"default": "your_api_key", "type": "string", "description": "API Key"}}}, "post_users-exports_body": {"type": "object", "properties": {"fields": {"default": [{"name": "user_id"}, {"name": "name"}, {"name": "email"}, {"export_as": "provider", "name": "identities[0].connection"}, {"name": "user_metadata.some_field"}], "items": {"required": ["name"], "type": "object", "properties": {"export_as": {"type": "string", "description": "The title of the column in the exported CSV."}, "name": {"type": "string", "description": "The name of the field in the profile."}}}, "type": "array", "description": "A list of fields to be included in the CSV. If omitted, a set of predefined fields will be exported.", "maxItems": 30}, "limit": {"default": 5, "minimum": 1, "type": "integer", "description": "Limit the number of records."}, "connection_id": {"default": "con_0000000000000001", "type": "string", "description": "The connection id of the connection from which users will be exported"}, "format": {"default": "csv", "enum": ["json", "csv"], "type": "string", "description": "The format of the file. Valid values are: \"json\" and \"csv\"."}}}, "post_clients_body_springcm": {"default": {}, "type": "object"}, "post_clients_body_mobile": {"type": "object", "description": "Configuration related to native mobile apps", "properties": {"android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}}}, "get_jobs_by_id_response": {"required": ["id", "type", "status"], "type": "object", "properties": {"status": {"default": "pending", "type": "string", "description": "The job's status"}, "type": {"default": "users_import", "type": "string", "description": "The type of job"}, "created_at": {"type": "string", "description": "The date when the job was created."}, "connection_id": {"default": "con_0000000000000001", "type": "string", "description": "The id of the connection."}, "time_left_seconds": {"type": "integer", "description": "Estimated amount of time remaining to finish the job."}, "location": {"type": "string", "description": "The url to download the result of the job."}, "percentage_done": {"type": "integer", "description": "The percentage of the work done so far."}, "id": {"default": "job_0000000000000001", "type": "string", "description": "The job's identifier. Useful to retrieve its status"}}}, "patch_clients_by_id_response_jwt_configuration": {"type": "object", "description": "Configuration related to JWTs for the client", "properties": {"lifetime_in_seconds": {"default": 36000, "type": "integer", "description": "The amount of seconds the JWT will be valid (affects <code>exp</code> claim)"}, "alg": {"default": "HS256", "enum": ["HS256", "RS256"], "type": "string", "description": "Algorithm uses to sign JWTs"}, "secret_encoded": {"default": true, "type": "boolean", "description": "<code>true</code> if the client secret is base64 encoded, <code>false</code> otherwise. Defaults to <code>true</code>"}, "scopes": {"default": {}, "type": "object"}}}, "post_clients_body_android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "post_clients_body_encryption_key": {"type": "object", "description": "The client's encryption key", "properties": {"cert": {"type": "string", "description": "Encryption certificate"}, "pub": {"type": "string", "description": "Encryption public key"}, "subject": {"type": "string", "description": "Certificate subject"}}}, "get_provider_response_credentials": {"type": "object", "description": "Provider credentials", "properties": {"api_user": {"type": "string", "description": "API User"}, "smtp_user": {"type": "string", "description": "SMTP user"}, "region": {"type": "string", "description": "AWS default region"}, "smtp_port": {"type": "integer", "description": "SMTP port"}, "smtp_host": {"type": "string", "description": "SMTP host"}, "accessKeyId": {"type": "string", "description": "AWS Access Key ID"}, "secretAccessKey": {"type": "string", "description": "AWS Secret Access Key"}, "smtp_pass": {"type": "string", "description": "SMTP password"}, "api_key": {"default": "your_api_key", "type": "string", "description": "API Key"}}}, "get_custom-domains_by_id_response": {"required": ["custom_domain_id", "domain", "primary", "status", "type"], "type": "object", "properties": {"custom_domain_id": {"default": "cd_0000000000000001", "type": "string", "description": "The id of the custom domain."}, "status": {"default": "ready", "enum": ["disabled", "pending", "pending_verification", "ready"], "type": "string", "description": "The custom domain configuration status."}, "domain": {"default": "login.mycompany.com", "type": "string", "description": "The custom domain."}, "primary": {"default": false, "type": "boolean", "description": "<code>true</code> if the domain was marked as \"primary\", <code>false</code> otherwise."}, "origin_domain_name": {"default": "mycompany_cd_0000000000000001.edge.tenants.auth0.com", "type": "string", "description": "The intermediate address."}, "verification": {"$ref": "#/definitions/get_custom-domains_by_id_response_verification"}, "type": {"default": "self_managed_certs", "enum": ["auth0_managed_certs", "self_managed_certs"], "type": "string", "description": "The custom domain provisioning type."}}}, "get_clients_by_id_response_encryption_key": {"type": "object", "properties": {"cert": {"type": "string"}, "pub": {"type": "string"}, "subject": {"type": "string"}}}, "put_templates_response": {"required": ["enrollment_message", "verification_message"], "type": "object", "properties": {"verification_message": {"default": "{{code}} is your verification code for {{tenant.friendly_name}}", "type": "string", "description": "Message sent to the user when they are prompted to verify their account"}, "enrollment_message": {"default": "{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.", "type": "string", "description": "Message sent to the user when they are invited to enroll with a phone number"}}}, "delete_user_identity_by_user_id_response": {"required": ["provider", "user_id", "connection"], "type": "object", "properties": {"isSocial": {"type": "boolean", "description": "<code>true</code> if the identity provider is a social provider, <code>false</code>s otherwise"}, "user_id": {"default": "5457edea1b8f22891a000004", "type": "string", "description": "The unique identifier for the user for the identity."}, "access_token": {"type": "string", "description": "IDP access token returned only if scope read:user_idp_token is defined"}, "profileData": {"$ref": "#/definitions/delete_user_identity_by_user_id_response_profileData"}, "connection": {"default": "Initial-Connection", "type": "string", "description": "The name of the connection for the identity."}, "provider": {"default": "auth0", "type": "string", "description": "The type of identity provider."}}}, "patch_clients_by_id_response_mobile": {"type": "object", "description": "Configuration related to native mobile apps", "properties": {"android": {"default": {"sha256_cert_fingerprints": ["D8:A0:83:..."], "app_package_name": "com.example"}, "type": "object", "description": "Configuration related to Android native apps", "properties": {"sha256_cert_fingerprints": {"default": [], "items": {"type": "string"}, "minItems": 1, "type": "array", "description": "The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds"}, "app_package_name": {"type": "string", "description": "Application package name found in <code>AndroidManifest.xml</code>"}}}, "ios": {"default": {"team_id": "9JA89QQLNQ", "app_bundle_identifier": "com.my.bundle.id"}, "type": "object", "description": "Configuration related to iOS native apps", "properties": {"team_id": {"type": "string", "description": "Identifier assigned to the account that signs and upload the app to the store"}, "app_bundle_identifier": {"type": "string", "description": "Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"}}}}}, "post_resource-servers_body_options": {"type": "object", "description": "External API specific settings."}, "get_logs_response_details": {"default": {}, "type": "object", "description": "Additional (and very useful) details about the event. They don't have a specific schema as they vary based on event type."}, "get_users_response_user_metadata": {"type": "object", "description": "Data related to the user that does not affect the application's core functionality."}, "post_clients_body_salesforce_api": {"default": {}, "type": "object", "properties": {"community_url_section": {"type": "string", "description": "The community url section"}, "principal": {"type": "string", "description": "The name of the property in the user object that maps to a Salesforce username, for example: 'email'"}, "clientid": {"type": "string", "description": "The Consumer Key assigned by Salesforce to the Connected App"}, "communityName": {"type": "string", "description": "The community name"}}}, "patch_clients_by_id_body_office365": {"default": {}, "type": "object"}, "patch_connections_by_id_body_options": {"default": {}, "type": "object", "description": "The connection's options (depend on the connection strategy)", "properties": {"ext_admin": {"type": "boolean"}, "basic_profile": {"default": true, "type": "boolean"}, "ext_profile": {"type": "boolean"}, "password_history": {"required": ["enable"], "type": "object", "description": "Options for password history policy", "properties": {"enable": {"type": "boolean"}, "size": {"default": 8, "minimum": 0, "type": "integer", "maximum": 24}}}, "ext_assigned_plans": {"type": "boolean"}, "upstream_params": {"type": "object", "description": "Options for adding parameters in the request to the upstream IdP"}, "ext_groups": {"type": "boolean"}, "passwordPolicy": {"enum": ["none", "low", "fair", "good", "excellent"], "type": "string", "description": "Password strength level"}, "password_no_personal_info": {"required": ["enable"], "type": "object", "description": "Options for password expiration policy", "properties": {"enable": {"type": "boolean"}}}, "password_dictionary": {"required": ["enable"], "type": "object", "description": "Options for password dictionary policy", "properties": {"enable": {"type": "boolean"}, "dictionary": {"items": {"type": "string", "description": "Custom Password Dictionary entry. 50 characters max."}, "type": "array", "description": "Custom Password Dictionary. An array of up to 200 entries.", "maxItems": 200}}}, "password_complexity_options": {"type": "object", "description": "Password complexity options", "properties": {"min_length": {"minimum": 1, "type": "integer", "description": "Minimum password length", "maximum": 128}}}, "ext_agreed_terms": {"type": "boolean"}, "ext_is_suspended": {"type": "boolean"}, "api_enable_users": {"default": true, "type": "boolean"}, "validation": {"type": "object", "description": "Options for validation", "properties": {"username": {"required": ["max", "min"], "type": "object", "properties": {"max": {"default": 15, "type": "integer", "maximum": 128}, "min": {"default": 1, "minimum": 1, "type": "integer"}}}}}}}, "patch_clients_by_id_body_echosign": {"default": {}, "type": "object"}, "patch_settings_body_error_page": {"type": "object", "description": "Tenant error page customization", "properties": {"url": {"default": "https://mycompany.org/error", "type": "string", "description": "Redirect to specified url instead of show the default error page", "format": "absolute-uri-or-empty"}, "html": {"type": "string", "description": "Replace default error page with a custom HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers' target='_new'>Liquid syntax</a> is supported)"}, "show_log_link": {"default": false, "type": "boolean", "description": "<code>true</code> to show link to log as part of the default error page, <code>false</code> otherwise (default: <code>true</code>)"}}}, "patch_provider_body_settings": {"type": "object", "description": "Specific provider setting"}, "post_email-verification_body": {"required": ["user_id"], "type": "object", "properties": {"result_url": {"default": "http://myapp.com/callback", "type": "string", "description": "The user will be redirected to this endpoint once the ticket is used", "format": "url"}, "user_id": {"type": "string", "description": "The user_id of for which the ticket is to be created", "format": "user-id"}, "ttl_sec": {"minimum": 0, "type": "integer", "description": "The ticket's lifetime in seconds starting from the moment of creation. After expiration, the ticket cannot be used to verify the user's email. If not specified or if you send 0, the Auth0 default lifetime of five days will be applied"}}}, "get_users-by-email_response": {"type": "object", "properties": {"phone_number": {"default": "+199999999999999", "type": "string", "description": "The user's phone number (following the E.164 recommendation), only valid for users from SMS connections"}, "family_name": {"type": "string", "description": "The user's family name"}, "user_id": {"default": "usr_5457edea1b8f33391a000004", "type": "string", "description": "The user's unique identifier"}, "name": {"type": "string", "description": "The user's name"}, "picture": {"type": "string", "description": "The user's picture"}, "email_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's email is verified, <code>false</code> otherwise"}, "created_at": {"type": "string", "description": "The date when the user was created"}, "last_ip": {"type": "string", "description": "The last login IP address"}, "updated_at": {"type": "string", "description": "The date when the user was last updated (modified)"}, "app_metadata": {"$ref": "#/definitions/get_users-by-email_response_app_metadata"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "nickname": {"type": "string", "description": "The user's nickname"}, "last_login": {"type": "string", "description": "The last login date for this user"}, "given_name": {"type": "string", "description": "The user's given name"}, "phone_verified": {"default": false, "type": "boolean", "description": "<code>true</code> if the user's phone_number is verified, <code>false</code> otherwise, only valid for users from SMS connections"}, "multifactor": {"items": {"type": "string"}, "type": "array", "description": "The list of multifactor providers that the user has enrolled to"}, "user_metadata": {"$ref": "#/definitions/get_users-by-email_response_user_metadata"}, "identities": {"default": {"isSocial": false, "connection": "Initial-Connection", "user_id": "5457edea1b8f22891a000004", "provider": "auth0"}, "items": {"type": "object", "properties": {"isSocial": {"type": "boolean", "description": "<code>true</code> if the identity provider is a social provider, <code>false</code>s otherwise"}, "user_id": {"type": "string", "description": "The unique identifier for the user for the identity"}, "access_token": {"type": "string", "description": "IDP access token returned only if scope read:user_idp_token is defined"}, "profileData": {"type": "object", "properties": {"phone_number": {"type": "string", "description": "The user's phone number"}, "family_name": {"type": "string", "description": "The user's family name"}, "name": {"type": "string", "description": "The user's name"}, "email_verified": {"type": "boolean", "description": "Indicates whether the user's email is verified or not"}, "username": {"default": "johndoe", "type": "string", "description": "The user's username"}, "given_name": {"type": "string", "description": "The user's given name"}, "email": {"type": "string", "description": "The user's email"}, "phone_verified": {"type": "boolean", "description": "Indicates whether the user's phone is verified or not"}}}, "connection": {"type": "string", "description": "The name of the connection for the identity"}, "provider": {"type": "string", "description": "The type of identity provider"}}}, "type": "array", "description": "An array of objects with information about the user's identities. More than one will exists in case accounts are linked"}, "email": {"default": "john.doe@gmail.com", "type": "string", "description": "The user's email", "format": "email"}, "logins_count": {"type": "integer", "description": "The number of logins for this user"}, "blocked": {"type": "boolean", "description": "Indicates whether the user was blocked by an administrator or not"}}}, "get_clients_by_id_response_jwt_configuration": {"type": "object", "description": "Configuration related to JWTs for the client", "properties": {"lifetime_in_seconds": {"default": 36000, "type": "integer", "description": "The amount of seconds the JWT will be valid (affects <code>exp</code> claim)"}, "alg": {"default": "HS256", "enum": ["HS256", "RS256"], "type": "string", "description": "Algorithm uses to sign JWTs"}, "secret_encoded": {"default": true, "type": "boolean", "description": "<code>true</code> if the client secret is base64 encoded, <code>false</code> otherwise. Defaults to <code>true</code>"}, "scopes": {"default": {}, "type": "object"}}}, "post_rotate-secret_response_encryption_key": {"type": "object", "properties": {"cert": {"type": "string"}, "pub": {"type": "string"}, "subject": {"type": "string"}}}, "get_device-credentials_response": {"type": "object", "properties": {"user_id": {"default": "usr_5457edea1b8f33391a000004", "type": "string", "description": "The user_id of the device"}, "device_name": {"default": "John's IPad", "type": "string", "description": "The device's name"}, "type": {"default": "public_key", "enum": ["public_key", "refresh_token"], "type": "string", "description": "The type of credential"}, "id": {"default": "dcr_0000000000000001", "type": "string", "description": "The device's identifier"}, "device_id": {"default": "550e8400-e29b-41d4-a716-446655440000", "type": "string", "description": "The device's id"}}}}, "swagger": "2.0"}